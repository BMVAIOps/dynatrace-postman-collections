{
	"info": {
		"_postman_id": "a352a6e4-be68-40bf-8d86-742ee2a134d7",
		"name": "Dynatrace Environment API",
		"description": "\nDocumentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress. \n\nIf you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "active Gates",
			"item": [
				{
					"name": "{ag Id}",
					"item": [
						{
							"name": "auto Update",
							"item": [
								{
									"name": "Gets the configuration of auto-update for the specified ActiveGate",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate"
											],
											"variable": [
												{
													"key": "agId",
													"value": "nostrud",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"setting\": \"INHERITED\",\n  \"effectiveSetting\": \"ENABLED\"\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								},
								{
									"name": "Updates the configuration of auto-update for the specified ActiveGate",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"INHERITED\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate"
											],
											"variable": [
												{
													"key": "agId",
													"value": "nostrud",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The auto-update configuration have been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"setting\": \"INHERITED\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"setting\": \"INHERITED\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"INHERITED\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "nostrud",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted auto-update configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"setting\": \"INHERITED\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate",
														"validator"
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"setting\": \"INHERITED\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate",
														"validator"
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "update Jobs",
							"item": [
								{
									"name": "{job Id}",
									"item": [
										{
											"name": "Gets the parameters of the specified update job",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "nostrud",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the required ActiveGate."
																},
																{
																	"key": "jobId",
																	"value": "nostrud",
																	"description": "(Required) A unique identifier for a update-job of ActiveGate."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\",\n  \"jobState\": \"SUCCEED\",\n  \"updateMethod\": \"AUTOMATIC\",\n  \"updateType\": \"ACTIVE_GATE\",\n  \"agType\": \"ENVIRONMENT\",\n  \"startVersion\": \"1.185.0.20200201-120000\",\n  \"environments\": [\n    \"in elit do ut\",\n    \"do qu\"\n  ],\n  \"cancelable\": false,\n  \"jobId\": \"-3524498778810258605\",\n  \"timestamp\": 1582031917814,\n  \"duration\": 3608000,\n  \"error\": \"cillum nulla minim\"\n}"
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the required ActiveGate."
																},
																{
																	"key": "jobId",
																	"value": "nostrud",
																	"description": "(Required) A unique identifier for a update-job of ActiveGate."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified update job",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "nostrud",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The update-job have been deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the required ActiveGate."
																},
																{
																	"key": "jobId",
																	"value": "nostrud",
																	"description": "(Required) A unique identifier for a update-job of ActiveGate."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the required ActiveGate."
																},
																{
																	"key": "jobId",
																	"value": "nostrud",
																	"description": "(Required) A unique identifier for a update-job of ActiveGate."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the required ActiveGate."
																},
																{
																	"key": "jobId",
																	"value": "nostrud",
																	"description": "(Required) A unique identifier for a update-job of ActiveGate."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists update jobs for the specified ActiveGate",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=nostrud&to=nostrud&startVersionCompareType=EQUAL&startVersion=nostrud&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=nostrud&lastUpdates=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"query": [
												{
													"key": "from",
													"value": "nostrud",
													"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days."
												},
												{
													"key": "to",
													"value": "nostrud",
													"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
												},
												{
													"key": "startVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
												},
												{
													"key": "startVersion",
													"value": "nostrud",
													"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "updateType",
													"value": "ACTIVE_GATE",
													"description": "Filters the resulting set of update-jobs by the update type."
												},
												{
													"key": "targetVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
												},
												{
													"key": "targetVersion",
													"value": "nostrud",
													"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "lastUpdates",
													"value": "false",
													"description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
												}
											],
											"variable": [
												{
													"key": "agId",
													"value": "nostrud",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										},
										"description": "The job can update the ActiveGate to the specified version or the latest available one."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=nostrud&to=nostrud&startVersionCompareType=EQUAL&startVersion=nostrud&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=nostrud&lastUpdates=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "nostrud"
														},
														{
															"key": "to",
															"value": "nostrud"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "nostrud"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "nostrud"
														},
														{
															"key": "lastUpdates",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"agId\": \"0x3efdd092\",\n  \"updateJobs\": [\n    {\n      \"targetVersion\": \"1.190.0.20200301-130000\",\n      \"jobState\": \"SUCCEED\",\n      \"updateMethod\": \"AUTOMATIC\",\n      \"updateType\": \"ACTIVE_GATE\",\n      \"agType\": \"ENVIRONMENT\",\n      \"startVersion\": \"1.185.0.20200201-120000\",\n      \"environments\": [\n        \"commodo\",\n        \"consequat et do m\"\n      ],\n      \"cancelable\": false,\n      \"jobId\": \"-3524498778810258605\",\n      \"timestamp\": 1582031917814,\n      \"duration\": 3608000,\n      \"error\": \"do aliquip\"\n    },\n    {\n      \"targetVersion\": \"1.190.0.20200301-130000\",\n      \"jobState\": \"SUCCEED\",\n      \"updateMethod\": \"AUTOMATIC\",\n      \"updateType\": \"ACTIVE_GATE\",\n      \"agType\": \"ENVIRONMENT\",\n      \"startVersion\": \"1.185.0.20200201-120000\",\n      \"environments\": [\n        \"proident pariatu\",\n        \"irure\"\n      ],\n      \"cancelable\": false,\n      \"jobId\": \"-3524498778810258605\",\n      \"timestamp\": 1582031917814,\n      \"duration\": 3608000,\n      \"error\": \"est\"\n    }\n  ]\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=nostrud&to=nostrud&startVersionCompareType=EQUAL&startVersion=nostrud&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=nostrud&lastUpdates=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "nostrud"
														},
														{
															"key": "to",
															"value": "nostrud"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "nostrud"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "nostrud"
														},
														{
															"key": "lastUpdates",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								},
								{
									"name": "Creates a new update job for the specified ActiveGate",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"variable": [
												{
													"key": "agId",
													"value": "nostrud",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The update-job have been created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\",\n  \"jobState\": \"SUCCEED\",\n  \"updateMethod\": \"AUTOMATIC\",\n  \"updateType\": \"ACTIVE_GATE\",\n  \"agType\": \"ENVIRONMENT\",\n  \"startVersion\": \"1.185.0.20200201-120000\",\n  \"environments\": [\n    \"in elit do ut\",\n    \"do qu\"\n  ],\n  \"cancelable\": false,\n  \"jobId\": \"-3524498778810258605\",\n  \"timestamp\": 1582031917814,\n  \"duration\": 3608000,\n  \"error\": \"cillum nulla minim\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "nostrud",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted update-job is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId",
															"value": "nostrud",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the details of the specified ActiveGate",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/:agId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										":agId"
									],
									"variable": [
										{
											"key": "agId",
											"value": "nostrud",
											"description": "(Required) The ID of the required ActiveGate."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId",
													"value": "nostrud",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"0x3efdd091\",\n  \"networkAddresses\": [\n    \"repre\",\n    \"aliquip nisi voluptate\"\n  ],\n  \"loadBalancerAddresses\": [\n    \"ullamco ut quis\",\n    \"cupidatat mollit non \"\n  ],\n  \"osType\": \"WINDOWS\",\n  \"autoUpdateStatus\": \"OUTDATED\",\n  \"offlineSince\": 1582031917814,\n  \"version\": \"1.185.0.20200201-120000\",\n  \"type\": \"ENVIRONMENT\",\n  \"hostname\": \"exampleHostname\",\n  \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n  \"environments\": [\n    \"ut eu\",\n    \"cillum reprehenderit oc\"\n  ],\n  \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n  },\n  \"networkZone\": \"exampleNetworkZone\",\n  \"group\": \"default\",\n  \"modules\": [\n    {\n      \"misconfigured\": true,\n      \"version\": \"in tempor occaecat\",\n      \"type\": \"KUBERNETES\",\n      \"attributes\": {\n        \"nostrud__50\": \"qui\",\n        \"velit_91\": \"sunt proident minim ut nulla\",\n        \"ut55\": \"et officia\"\n      },\n      \"enabled\": false\n    },\n    {\n      \"misconfigured\": true,\n      \"version\": \"fugiat occaecat magna ad labore\",\n      \"type\": \"KUBERNETES\",\n      \"attributes\": {\n        \"fugiat_4\": \"sunt qui tempor\"\n      },\n      \"enabled\": false\n    }\n  ],\n  \"containerized\": false,\n  \"connectedHosts\": {\n    \"number\": 150\n  }\n}"
								},
								{
									"name": "Not found. See response body for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId",
													"value": "nostrud",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "auto Update",
					"item": [
						{
							"name": "Gets the global auto-update configuration of environment ActiveGates.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"globalSetting\": \"ENABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}"
								}
							]
						},
						{
							"name": "Puts the global auto-update configuration of environment ActiveGates.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate"
									]
								}
							},
							"response": [
								{
									"name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available ActiveGates",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activeGates?hostname=nostrud&osType=WINDOWS&networkAddress=nostrud&loadBalancerAddress=nostrud&type=ENVIRONMENT_MULTI&networkZone=nostrud&updateStatus=UPDATE_IN_PROGRESS&versionCompareType=EQUAL&version=nostrud&autoUpdate=ENABLED&group=nostrud&online=true&enabledModule=OTLP_INGEST&enabledModule=OTLP_INGEST&disabledModule=OTLP_INGEST&disabledModule=OTLP_INGEST&containerized=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates"
							],
							"query": [
								{
									"key": "hostname",
									"value": "nostrud",
									"description": "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "osType",
									"value": "WINDOWS",
									"description": "Filters the resulting set of ActiveGates by the OS type of the host it's running on."
								},
								{
									"key": "networkAddress",
									"value": "nostrud",
									"description": "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "loadBalancerAddress",
									"value": "nostrud",
									"description": "Filters the resulting set of ActiveGates by the Load Balancer address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "type",
									"value": "ENVIRONMENT_MULTI",
									"description": "Filters the resulting set of ActiveGates by the ActiveGate type."
								},
								{
									"key": "networkZone",
									"value": "nostrud",
									"description": "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "updateStatus",
									"value": "UPDATE_IN_PROGRESS",
									"description": "Filters the resulting set of ActiveGates by the auto-update status."
								},
								{
									"key": "versionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here."
								},
								{
									"key": "version",
									"value": "nostrud",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here."
								},
								{
									"key": "autoUpdate",
									"value": "ENABLED",
									"description": "Filters the resulting set of ActiveGates by the actual state of auto-update."
								},
								{
									"key": "group",
									"value": "nostrud",
									"description": "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "online",
									"value": "true",
									"description": "Filters the resulting set of ActiveGates by the communication status."
								},
								{
									"key": "enabledModule",
									"value": "OTLP_INGEST",
									"description": "Filters the resulting set of ActiveGates by the enabled modules."
								},
								{
									"key": "enabledModule",
									"value": "OTLP_INGEST",
									"description": "Filters the resulting set of ActiveGates by the enabled modules."
								},
								{
									"key": "disabledModule",
									"value": "OTLP_INGEST",
									"description": "Filters the resulting set of ActiveGates by the disabled modules."
								},
								{
									"key": "disabledModule",
									"value": "OTLP_INGEST",
									"description": "Filters the resulting set of ActiveGates by the disabled modules."
								},
								{
									"key": "containerized",
									"value": "true",
									"description": "Filters the resulting set of ActiveGates to those which are running in container (`true`) or not (`false`)."
								}
							]
						},
						"description": "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=nostrud&osType=WINDOWS&networkAddress=nostrud&loadBalancerAddress=nostrud&type=ENVIRONMENT_MULTI&networkZone=nostrud&updateStatus=UPDATE_IN_PROGRESS&versionCompareType=EQUAL&version=nostrud&autoUpdate=ENABLED&group=nostrud&online=true&enabledModule=REST_API&enabledModule=REST_API&disabledModule=REST_API&disabledModule=REST_API&containerized=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "nostrud"
										},
										{
											"key": "osType",
											"value": "WINDOWS"
										},
										{
											"key": "networkAddress",
											"value": "nostrud"
										},
										{
											"key": "loadBalancerAddress",
											"value": "nostrud"
										},
										{
											"key": "type",
											"value": "ENVIRONMENT_MULTI"
										},
										{
											"key": "networkZone",
											"value": "nostrud"
										},
										{
											"key": "updateStatus",
											"value": "UPDATE_IN_PROGRESS"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "nostrud"
										},
										{
											"key": "autoUpdate",
											"value": "ENABLED"
										},
										{
											"key": "group",
											"value": "nostrud"
										},
										{
											"key": "online",
											"value": "true"
										},
										{
											"key": "enabledModule",
											"value": "REST_API"
										},
										{
											"key": "enabledModule",
											"value": "REST_API"
										},
										{
											"key": "disabledModule",
											"value": "REST_API"
										},
										{
											"key": "disabledModule",
											"value": "REST_API"
										},
										{
											"key": "containerized",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"activeGates\": [\n    {\n      \"id\": \"0x3efdd091\",\n      \"networkAddresses\": [\n        \"tempor aute\",\n        \"in sunt laboris reprehenderit dolore\"\n      ],\n      \"loadBalancerAddresses\": [\n        \"Excepteur reprehenderit\",\n        \"adipisicing non\"\n      ],\n      \"osType\": \"WINDOWS\",\n      \"autoUpdateStatus\": \"OUTDATED\",\n      \"offlineSince\": 1582031917814,\n      \"version\": \"1.185.0.20200201-120000\",\n      \"type\": \"ENVIRONMENT\",\n      \"hostname\": \"exampleHostname\",\n      \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n      \"environments\": [\n        \"et occaecat eiusmod in aliqua\",\n        \"labore sint ut\"\n      ],\n      \"autoUpdateSettings\": {\n        \"setting\": \"INHERITED\",\n        \"effectiveSetting\": \"ENABLED\"\n      },\n      \"networkZone\": \"exampleNetworkZone\",\n      \"group\": \"default\",\n      \"modules\": [\n        {\n          \"misconfigured\": false,\n          \"version\": \"Excepteur no\",\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"irure_0\": \"laborum et\"\n          },\n          \"enabled\": true\n        },\n        {\n          \"misconfigured\": false,\n          \"version\": \"\",\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"velit5\": \"mollit enim pariatur sunt\",\n            \"voluptate42\": \"aute tempor ad\",\n            \"ad_4\": \"et in Excepteur\"\n          },\n          \"enabled\": true\n        }\n      ],\n      \"containerized\": false,\n      \"connectedHosts\": {\n        \"number\": 150\n      }\n    },\n    {\n      \"id\": \"0x3efdd091\",\n      \"networkAddresses\": [\n        \"e\",\n        \"sunt ex elit sed pariatur\"\n      ],\n      \"loadBalancerAddresses\": [\n        \"veniam\",\n        \"anim commodo\"\n      ],\n      \"osType\": \"WINDOWS\",\n      \"autoUpdateStatus\": \"OUTDATED\",\n      \"offlineSince\": 1582031917814,\n      \"version\": \"1.185.0.20200201-120000\",\n      \"type\": \"ENVIRONMENT\",\n      \"hostname\": \"exampleHostname\",\n      \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n      \"environments\": [\n        \"ut dolore dolor pariatur do\",\n        \"ipsum labore id\"\n      ],\n      \"autoUpdateSettings\": {\n        \"setting\": \"INHERITED\",\n        \"effectiveSetting\": \"ENABLED\"\n      },\n      \"networkZone\": \"exampleNetworkZone\",\n      \"group\": \"default\",\n      \"modules\": [\n        {\n          \"misconfigured\": true,\n          \"version\": \"ut\",\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"quisd\": \"dolor incididunt in\",\n            \"consectetur_d51\": \"sed culpa\",\n            \"essee\": \"non cillum\"\n          },\n          \"enabled\": false\n        },\n        {\n          \"misconfigured\": true,\n          \"version\": \"elit non\",\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"Excepteur_56\": \"officia in ad ut Lorem\"\n          },\n          \"enabled\": false\n        }\n      ],\n      \"containerized\": false,\n      \"connectedHosts\": {\n        \"number\": 150\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=nostrud&osType=WINDOWS&networkAddress=nostrud&loadBalancerAddress=nostrud&type=ENVIRONMENT_MULTI&networkZone=nostrud&updateStatus=UPDATE_IN_PROGRESS&versionCompareType=EQUAL&version=nostrud&autoUpdate=ENABLED&group=nostrud&online=true&enabledModule=REST_API&enabledModule=REST_API&disabledModule=REST_API&disabledModule=REST_API&containerized=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "nostrud"
										},
										{
											"key": "osType",
											"value": "WINDOWS"
										},
										{
											"key": "networkAddress",
											"value": "nostrud"
										},
										{
											"key": "loadBalancerAddress",
											"value": "nostrud"
										},
										{
											"key": "type",
											"value": "ENVIRONMENT_MULTI"
										},
										{
											"key": "networkZone",
											"value": "nostrud"
										},
										{
											"key": "updateStatus",
											"value": "UPDATE_IN_PROGRESS"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "nostrud"
										},
										{
											"key": "autoUpdate",
											"value": "ENABLED"
										},
										{
											"key": "group",
											"value": "nostrud"
										},
										{
											"key": "online",
											"value": "true"
										},
										{
											"key": "enabledModule",
											"value": "REST_API"
										},
										{
											"key": "enabledModule",
											"value": "REST_API"
										},
										{
											"key": "disabledModule",
											"value": "REST_API"
										},
										{
											"key": "disabledModule",
											"value": "REST_API"
										},
										{
											"key": "containerized",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"fugiat qui minim et\",\n        \"message\": \"officia et eu\",\n        \"path\": \"qui ex veniam dolor dolor\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"et mollit commodo do esse\",\n        \"message\": \"proident occaecat\",\n        \"path\": \"deserunt incididunt nulla reprehenderit in\"\n      }\n    ],\n    \"message\": \"dolor labore veniam\",\n    \"code\": -49981775\n  }\n}"
						}
					]
				},
				{
					"name": "List ActiveGates with update jobs",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activeGates/updateJobs?from=nostrud&to=nostrud&startVersionCompareType=EQUAL&startVersion=nostrud&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=nostrud&lastUpdates=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates",
								"updateJobs"
							],
							"query": [
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "startVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
								},
								{
									"key": "startVersion",
									"value": "nostrud",
									"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "updateType",
									"value": "ACTIVE_GATE",
									"description": "Filters the resulting set of update-jobs by the update type."
								},
								{
									"key": "targetVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
								},
								{
									"key": "targetVersion",
									"value": "nostrud",
									"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "lastUpdates",
									"value": "false",
									"description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
								}
							]
						},
						"description": "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=nostrud&to=nostrud&startVersionCompareType=EQUAL&startVersion=nostrud&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=nostrud&lastUpdates=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "nostrud"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "nostrud"
										},
										{
											"key": "lastUpdates",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"allUpdateJobs\": [\n    {\n      \"agId\": \"0x3efdd092\",\n      \"updateJobs\": [\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"jobState\": \"SUCCEED\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"environments\": [\n            \"eu ad non voluptate elit\",\n            \"veniam magna nisi\"\n          ],\n          \"cancelable\": false,\n          \"jobId\": \"-3524498778810258605\",\n          \"timestamp\": 1582031917814,\n          \"duration\": 3608000,\n          \"error\": \"mollit Lorem\"\n        },\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"jobState\": \"SUCCEED\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"environments\": [\n            \"adipisicing ad dolor commodo laboris\",\n            \"ullamco commodo consectetur pariatur\"\n          ],\n          \"cancelable\": false,\n          \"jobId\": \"-3524498778810258605\",\n          \"timestamp\": 1582031917814,\n          \"duration\": 3608000,\n          \"error\": \"sit ad eu\"\n        }\n      ]\n    },\n    {\n      \"agId\": \"0x3efdd092\",\n      \"updateJobs\": [\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"jobState\": \"SUCCEED\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"environments\": [\n            \"ex sed officia reprehenderit ullamco\",\n            \"consectetur aliqua\"\n          ],\n          \"cancelable\": false,\n          \"jobId\": \"-3524498778810258605\",\n          \"timestamp\": 1582031917814,\n          \"duration\": 3608000,\n          \"error\": \"deserunt qui\"\n        },\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"jobState\": \"SUCCEED\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"environments\": [\n            \"ipsum sit pariatur\",\n            \"in tempor culpa\"\n          ],\n          \"cancelable\": false,\n          \"jobId\": \"-3524498778810258605\",\n          \"timestamp\": 1582031917814,\n          \"duration\": 3608000,\n          \"error\": \"ea non ullamco laboris in\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=nostrud&to=nostrud&startVersionCompareType=EQUAL&startVersion=nostrud&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=nostrud&lastUpdates=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "nostrud"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "nostrud"
										},
										{
											"key": "lastUpdates",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "entities",
			"item": [
				{
					"name": "Gets the information about monitored entities",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/entities?nextPageKey=nostrud&pageSize=88698957&entitySelector=nostrud&from=nostrud&to=nostrud&fields=nostrud&sort=nostrud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entities"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "nostrud",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "88698957",
									"description": "The amount of entities. \n\nIf not set, 50 is used."
								},
								{
									"key": "entitySelector",
									"value": "nostrud",
									"description": "Defines the scope of the query. Only entities matching the specified criteria are included into response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\nThe field is **required** when you're querying the first page of results."
								},
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "fields",
									"value": "nostrud",
									"description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
								},
								{
									"key": "sort",
									"value": "nostrud",
									"description": "Defines the ordering of the entities returned. \n\nThis field is **optional**, each field has a sign prefix (+/-), which corresponds to sorting order ( + for ascending and - for descending). If no sign prefix is set, then default ascending sorting order will be applied. \n\nCurrently ordering is only available for the display name (for example `sort=name or sort =+name for ascending, sort=-name for descending`)"
								}
							]
						},
						"description": "Lists entities observed within the specified timeframe along with their properties. \n\nWhen you query entities of the `SERVICE_METHOD` type, only the following requests are returned: \n\n* [Key requests](https://dt-url.net/a903u9s) \n* Top X requests that are used for [baselining](https://dt-url.net/0j23uqb) \n* Requests that have caused a [problem](https://dt-url.net/pf43uqg) \n\nYou can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entities?nextPageKey=nostrud&pageSize=88698957&entitySelector=nostrud&from=nostrud&to=nostrud&fields=nostrud&sort=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										},
										{
											"key": "entitySelector",
											"value": "nostrud"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "fields",
											"value": "nostrud"
										},
										{
											"key": "sort",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": -97968171,\n  \"pageSize\": 35425682,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"entities\": [\n    {\n      \"managementZones\": [\n        {\n          \"name\": \"tempor ea ad culpa\",\n          \"id\": \"proident in consectetur officia\"\n        },\n        {\n          \"name\": \"dolore velit cupidatat ex\",\n          \"id\": \"qui do dolor culpa\"\n        }\n      ],\n      \"fromRelationships\": {\n        \"anim1e\": [\n          {\n            \"id\": \"cupidatat do dolore in\",\n            \"type\": \"ex e\"\n          },\n          {\n            \"id\": \"labore ullamco exercitation irur\",\n            \"type\": \"aliqua reprehenderit tempor ut\"\n          }\n        ],\n        \"elit_7\": [\n          {\n            \"id\": \"commodo\",\n            \"type\": \"Excepteur ipsum dolore elit ullamco\"\n          },\n          {\n            \"id\": \"aliquip ex ea eiusmod ut\",\n            \"type\": \"aute nulla Excepteur magna\"\n          }\n        ]\n      },\n      \"toRelationships\": {\n        \"amet_ce0\": [\n          {\n            \"id\": \"est \",\n            \"type\": \"esse tempor\"\n          },\n          {\n            \"id\": \"Ut quis labore\",\n            \"type\": \"mollit veniam\"\n          }\n        ]\n      },\n      \"lastSeenTms\": -31743605,\n      \"firstSeenTms\": 19750461,\n      \"entityId\": \"dolor\",\n      \"tags\": [\n        {\n          \"stringRepresentation\": \"ullamco irure cillum\",\n          \"value\": \"in qui laborum ipsum\",\n          \"key\": \"id qui cillum\",\n          \"context\": \"et veniam do reprehenderit nulla\"\n        },\n        {\n          \"stringRepresentation\": \"est ut incididunt\",\n          \"value\": \"officia deserunt\",\n          \"key\": \"mollit sit minim ut\",\n          \"context\": \"dolore Duis quis\"\n        }\n      ],\n      \"icon\": {\n        \"primaryIconType\": \"ullamco incididunt\",\n        \"secondaryIconType\": \"ut eu incididunt reprehenderit\",\n        \"customIconPath\": \"aliqua exercitation minim\"\n      },\n      \"properties\": {\n        \"nulla_74\": {},\n        \"deserunt8c8\": {}\n      },\n      \"displayName\": \"aliquip\"\n    },\n    {\n      \"managementZones\": [\n        {\n          \"name\": \"deserunt culpa ut\",\n          \"id\": \"eiusmod sunt\"\n        },\n        {\n          \"name\": \"elit\",\n          \"id\": \"ipsum dolore veniam amet\"\n        }\n      ],\n      \"fromRelationships\": {\n        \"quis_19_\": [\n          {\n            \"id\": \"ut\",\n            \"type\": \"velit deserunt tempor\"\n          },\n          {\n            \"id\": \"sint in ipsum adipisicing est\",\n            \"type\": \"velit fugiat do\"\n          }\n        ]\n      },\n      \"toRelationships\": {\n        \"voluptate_d6\": [\n          {\n            \"id\": \"ullamco\",\n            \"type\": \"exercitation\"\n          },\n          {\n            \"id\": \"reprehenderit aliquip tem\",\n            \"type\": \"Ut exercitation\"\n          }\n        ],\n        \"culpad1b\": [\n          {\n            \"id\": \"laboris sed dolor ea\",\n            \"type\": \"sunt mollit commodo laboris\"\n          },\n          {\n            \"id\": \"anim proident laborum magna\",\n            \"type\": \"eu do ullamco veniam\"\n          }\n        ],\n        \"Lorem_3e_\": [\n          {\n            \"id\": \"labore Lorem\",\n            \"type\": \"pariatur nulla\"\n          },\n          {\n            \"id\": \"enim nisi\",\n            \"type\": \"reprehenderit adipisicing\"\n          }\n        ]\n      },\n      \"lastSeenTms\": 39256202,\n      \"firstSeenTms\": -60528352,\n      \"entityId\": \"occaecat Ut velit\",\n      \"tags\": [\n        {\n          \"stringRepresentation\": \"ullamco anim Excepteur\",\n          \"value\": \"cupidatat consequat sed\",\n          \"key\": \"in sint dolore veniam amet\",\n          \"context\": \"minim amet dolor\"\n        },\n        {\n          \"stringRepresentation\": \"dolore sint\",\n          \"value\": \"sint voluptate id\",\n          \"key\": \"quis nostrud fugiat\",\n          \"context\": \"elit ipsum Lorem\"\n        }\n      ],\n      \"icon\": {\n        \"primaryIconType\": \"minim ex\",\n        \"secondaryIconType\": \"ex in\",\n        \"customIconPath\": \"sunt reprehenderit\"\n      },\n      \"properties\": {\n        \"velit68\": {},\n        \"dolore8f\": {},\n        \"ipsumd\": {}\n      },\n      \"displayName\": \"officia\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Gets the properties of the specified monitored entity",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/entities/:entityId?from=nostrud&to=nostrud&fields=nostrud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entities",
								":entityId"
							],
							"query": [
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "fields",
									"value": "nostrud",
									"description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
								}
							],
							"variable": [
								{
									"key": "entityId",
									"value": "nostrud",
									"description": "(Required) The ID of the required entity."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entities/:entityId?from=nostrud&to=nostrud&fields=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										":entityId"
									],
									"query": [
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "fields",
											"value": "nostrud"
										}
									],
									"variable": [
										{
											"key": "entityId",
											"value": "nostrud",
											"description": "(Required) The ID of the required entity."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"managementZones\": [\n    {\n      \"name\": \"commodo in do\",\n      \"id\": \"anim sed reprehenderit laborum\"\n    },\n    {\n      \"name\": \"irure dolore enim\",\n      \"id\": \"minim Lorem dolore in reprehenderit\"\n    }\n  ],\n  \"fromRelationships\": {\n    \"voluptate_9c4\": [\n      {\n        \"id\": \"aute sed nisi\",\n        \"type\": \"ipsum consequat tempor incididunt consectetur\"\n      },\n      {\n        \"id\": \"commodo Lorem dolore velit\",\n        \"type\": \"esse consectetur qui\"\n      }\n    ],\n    \"deserunte\": [\n      {\n        \"id\": \"aute ullamco fugiat quis culpa\",\n        \"type\": \"culpa ad\"\n      },\n      {\n        \"id\": \"cillum irure\",\n        \"type\": \"eu ad sunt sit\"\n      }\n    ]\n  },\n  \"toRelationships\": {\n    \"veniam3\": [\n      {\n        \"id\": \"do Excepteur qui\",\n        \"type\": \"sunt dolor voluptate\"\n      },\n      {\n        \"id\": \"aliqua\",\n        \"type\": \"est fugiat in\"\n      }\n    ],\n    \"nisi3fa\": [\n      {\n        \"id\": \"Duis\",\n        \"type\": \"deserunt dolor \"\n      },\n      {\n        \"id\": \"nostrud voluptate\",\n        \"type\": \"elit veniam adipisicing\"\n      }\n    ],\n    \"quib84\": [\n      {\n        \"id\": \"velit esse\",\n        \"type\": \"sunt\"\n      },\n      {\n        \"id\": \"dolor non consectetur sint\",\n        \"type\": \"sunt sint dolo\"\n      }\n    ],\n    \"voluptate_27\": [\n      {\n        \"id\": \"in tempor reprehenderi\",\n        \"type\": \"ad et\"\n      },\n      {\n        \"id\": \"sit fug\",\n        \"type\": \"pariatur mollit occaecat ex\"\n      }\n    ]\n  },\n  \"lastSeenTms\": 24470369,\n  \"firstSeenTms\": -22571058,\n  \"entityId\": \"voluptate laboris ea elit\",\n  \"tags\": [\n    {\n      \"stringRepresentation\": \"fugiat consectetur enim voluptate deserunt\",\n      \"value\": \"deserunt eu e\",\n      \"key\": \"consequat\",\n      \"context\": \"tempor dolor ex labore\"\n    },\n    {\n      \"stringRepresentation\": \"consectetur ad ullamco et\",\n      \"value\": \"amet ad adipisicing\",\n      \"key\": \"labore ut cillum\",\n      \"context\": \"dolor enim id laboris culpa\"\n    }\n  ],\n  \"icon\": {\n    \"primaryIconType\": \"in cupidata\",\n    \"secondaryIconType\": \"d\",\n    \"customIconPath\": \"dolore reprehenderit\"\n  },\n  \"properties\": {\n    \"reprehenderit8\": {},\n    \"utb\": {}\n  },\n  \"displayName\": \"eu in\"\n}"
						}
					]
				},
				{
					"name": "Creates or updates a custom device",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customDeviceId\": \"customDeviceId\",\n  \"displayName\": \"coffeeMachine\",\n  \"group\": \"myCustomDeviceGroup\",\n  \"ipAddresses\": [\n    \"10.0.0.1\"\n  ],\n  \"listenPorts\": [\n    80\n  ],\n  \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n  \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n  \"type\": \"coffee machine\",\n  \"properties\": {},\n  \"dnsNames\": [\n    \"coffee-machine.dynatrace.internal.com\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/entities/custom",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entities",
								"custom"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customDeviceId\": \"customDeviceId\",\n  \"displayName\": \"coffeeMachine\",\n  \"group\": \"myCustomDeviceGroup\",\n  \"ipAddresses\": [\n    \"10.0.0.1\"\n  ],\n  \"listenPorts\": [\n    80\n  ],\n  \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n  \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n  \"type\": \"coffee machine\",\n  \"properties\": {},\n  \"dnsNames\": [\n    \"coffee-machine.dynatrace.internal.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/entities/custom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"entityId\": \"cillum adipisicing ut anim\",\n  \"groupId\": \"labore Lorem amet Duis\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customDeviceId\": \"customDeviceId\",\n  \"displayName\": \"coffeeMachine\",\n  \"group\": \"myCustomDeviceGroup\",\n  \"ipAddresses\": [\n    \"10.0.0.1\"\n  ],\n  \"listenPorts\": [\n    80\n  ],\n  \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n  \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n  \"type\": \"coffee machine\",\n  \"properties\": {},\n  \"dnsNames\": [\n    \"coffee-machine.dynatrace.internal.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/entities/custom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customDeviceId\": \"customDeviceId\",\n  \"displayName\": \"coffeeMachine\",\n  \"group\": \"myCustomDeviceGroup\",\n  \"ipAddresses\": [\n    \"10.0.0.1\"\n  ],\n  \"listenPorts\": [\n    80\n  ],\n  \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n  \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n  \"type\": \"coffee machine\",\n  \"properties\": {},\n  \"dnsNames\": [\n    \"coffee-machine.dynatrace.internal.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/entities/custom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "entity Types",
			"item": [
				{
					"name": "Gets a list of properties for all entity types",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/entityTypes?nextPageKey=nostrud&pageSize=88698957",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entityTypes"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "nostrud",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "88698957",
									"description": "The amount of entity types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes?nextPageKey=nostrud&pageSize=88698957",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": 57212648,\n  \"pageSize\": -11358875,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"types\": [\n    {\n      \"managementZones\": \"aliquip fugiat in\",\n      \"fromRelationships\": [\n        {\n          \"toTypes\": [\n            \"amet in reprehenderit magna\",\n            \"dolore\"\n          ],\n          \"id\": \"adipisicing in reprehenderit amet Ut\"\n        },\n        {\n          \"toTypes\": [\n            \"quis Ut proident veniam\",\n            \"et tempor exercitation sed\"\n          ],\n          \"id\": \"ut consectetur\"\n        }\n      ],\n      \"toRelationships\": [\n        {\n          \"fromTypes\": [\n            \"Ut do occaecat\",\n            \"laborum Ut ad ea\"\n          ],\n          \"id\": \"eiusmod ex Exce\"\n        },\n        {\n          \"fromTypes\": [\n            \"deserunt occaecat commodo aliqua\",\n            \"magna Excepteur\"\n          ],\n          \"id\": \"Lorem qui Duis tempor\"\n        }\n      ],\n      \"dimensionKey\": \"in aliquip\",\n      \"entityLimitExceeded\": false,\n      \"tags\": \"consequat et ea amet officia\",\n      \"properties\": [\n        {\n          \"id\": \"cpuCores\",\n          \"type\": \"Number\",\n          \"displayName\": \"cpu cores\"\n        },\n        {\n          \"id\": \"cpuCores\",\n          \"type\": \"Number\",\n          \"displayName\": \"cpu cores\"\n        }\n      ],\n      \"type\": \"nostrud voluptate\",\n      \"displayName\": \"nostrud culpa ea officia\"\n    },\n    {\n      \"managementZones\": \"velit esse reprehenderit\",\n      \"fromRelationships\": [\n        {\n          \"toTypes\": [\n            \"nisi irure ut mollit\",\n            \"do aute \"\n          ],\n          \"id\": \"id reprehenderit\"\n        },\n        {\n          \"toTypes\": [\n            \"Lorem adipisicing Excepteur dolor\",\n            \"conse\"\n          ],\n          \"id\": \"nisi do officia\"\n        }\n      ],\n      \"toRelationships\": [\n        {\n          \"fromTypes\": [\n            \"minim et\",\n            \"et in nulla\"\n          ],\n          \"id\": \"cupidatat sed aute\"\n        },\n        {\n          \"fromTypes\": [\n            \"consequat consectetur esse\",\n            \"Lorem eu\"\n          ],\n          \"id\": \"nulla\"\n        }\n      ],\n      \"dimensionKey\": \"dolore deserunt elit et nisi\",\n      \"entityLimitExceeded\": false,\n      \"tags\": \"quis occaecat ut nisi la\",\n      \"properties\": [\n        {\n          \"id\": \"cpuCores\",\n          \"type\": \"Number\",\n          \"displayName\": \"cpu cores\"\n        },\n        {\n          \"id\": \"cpuCores\",\n          \"type\": \"Number\",\n          \"displayName\": \"cpu cores\"\n        }\n      ],\n      \"type\": \"incididunt esse est Lorem\",\n      \"displayName\": \"et commodo\"\n    }\n  ]\n}"
						},
						{
							"name": "Failed. There are no more entity types to export.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes?nextPageKey=nostrud&pageSize=88698957",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Gets a list of properties for the specified entity type",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/entityTypes/:type",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entityTypes",
								":type"
							],
							"variable": [
								{
									"key": "type",
									"value": "nostrud",
									"description": "(Required) The required entity type."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "nostrud",
											"description": "(Required) The required entity type."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"managementZones\": \"do in qui proident\",\n  \"fromRelationships\": [\n    {\n      \"toTypes\": [\n        \"minim in proident\",\n        \"dolore consectetur in\"\n      ],\n      \"id\": \"voluptate dolor eiusmod exercitation\"\n    },\n    {\n      \"toTypes\": [\n        \"culpa quis ad\",\n        \"id laboris reprehenderit\"\n      ],\n      \"id\": \"sed laboris aliquip cillum\"\n    }\n  ],\n  \"toRelationships\": [\n    {\n      \"fromTypes\": [\n        \"mollit irure dolor occaecat\",\n        \"minim ullamco\"\n      ],\n      \"id\": \"non\"\n    },\n    {\n      \"fromTypes\": [\n        \"occaecat Ut proident\",\n        \"laboris\"\n      ],\n      \"id\": \"ullamco quis veniam\"\n    }\n  ],\n  \"dimensionKey\": \"pariatur\",\n  \"entityLimitExceeded\": false,\n  \"tags\": \"ea ad\",\n  \"properties\": [\n    {\n      \"id\": \"cpuCores\",\n      \"type\": \"Number\",\n      \"displayName\": \"cpu cores\"\n    },\n    {\n      \"id\": \"cpuCores\",\n      \"type\": \"Number\",\n      \"displayName\": \"cpu cores\"\n    }\n  ],\n  \"type\": \"elit ut ex non culpa\",\n  \"displayName\": \"sit cillum eiusmod laborum\"\n}"
						},
						{
							"name": "Failed. The requested monitored entity type is not exportable or doesn't exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "nostrud",
											"description": "(Required) The required entity type."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "events",
			"item": [
				{
					"name": "Lists events within the specified timeframe | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/events?nextPageKey=nostrud&pageSize=88698957&from=nostrud&to=nostrud&eventSelector=nostrud&entitySelector=nostrud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "nostrud",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "88698957",
									"description": "The amount of events in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
								},
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "eventSelector",
									"value": "nostrud",
									"description": "Defines the scope of the query. Only events matching the specified criteria are included in the response.\n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies.\n* Event ID: `eventId(\"id-1\", \"id-2\")`.\n* ID of related entity: `entityId(\"id-1\", \"id-2\")`.\n* Event status: `status(\"OPEN\")` or `status(\"CLOSED\")`. You can specify only one status.\n* Management zone ID: `managementZoneId(\"123\", \"321\")`.\n* Event type: `eventType(\"event-type\")`. You can specify only one event type. You can fetch the list of possible event types with the [GET event types](https://dt-url.net/qc03u6w) call. \n* Correlation ID: `correlationId(\"id-1\", \"id-2\")`.\n* Happened during maintenance (true, false): `underMaintenance(true)`. \n* Notifications are suppressed (true, false): `suppressAlert(true)`. \n* Problem creation is suppressed (true, false): `suppressProblem(true)`. \n* Frequent event (true, false): `frequentEvent(true)`. \n* Event property: `property.<key>(\"value-1\", \"value-2\")`.\n\nTo set several criteria, separate them with commas (`,`). Only results matching **all** criteria are included in the response. \n\n"
								},
								{
									"key": "entitySelector",
									"value": "nostrud",
									"description": "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\nThe number of entities that can be selected is limited to 10000."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success. The response contains the list of events.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events?nextPageKey=nostrud&pageSize=88698957&from=nostrud&to=nostrud&eventSelector=nostrud&entitySelector=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "eventSelector",
											"value": "nostrud"
										},
										{
											"key": "entitySelector",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": 99177990,\n  \"warnings\": [\n    \"dolore fugiat laboris velit magna\",\n    \"non adipisicing amet sunt\"\n  ],\n  \"events\": [\n    {\n      \"managementZones\": [\n        {\n          \"name\": \"adipisicing\",\n          \"id\": \"ea\"\n        },\n        {\n          \"name\": \"nulla\",\n          \"id\": \"consequat dolore eu elit\"\n        }\n      ],\n      \"entityTags\": [\n        {\n          \"stringRepresentation\": \"incididunt dolore\",\n          \"value\": \"reprehenderit dolor adipisicing\",\n          \"key\": \"dolore\",\n          \"context\": \"cillum\"\n        },\n        {\n          \"stringRepresentation\": \"Ut sint\",\n          \"value\": \"dolor culpa\",\n          \"key\": \"esse laboris\",\n          \"context\": \"sed\"\n        }\n      ],\n      \"suppressProblem\": false,\n      \"underMaintenance\": false,\n      \"suppressAlert\": true,\n      \"frequentEvent\": true,\n      \"entityId\": {\n        \"entityId\": {\n          \"id\": \"magna enim \",\n          \"type\": \"et officia\"\n        },\n        \"name\": \"in quis\"\n      },\n      \"eventId\": \"4293884258445543163_1564039524182\",\n      \"eventType\": \"LOW_DISK_SPACE\",\n      \"properties\": [\n        {\n          \"value\": \"tempor mollit\",\n          \"key\": \"ut\"\n        },\n        {\n          \"value\": \"sit in laborum ut\",\n          \"key\": \"ipsum\"\n        }\n      ],\n      \"status\": \"OPEN\",\n      \"startTime\": 1564039524182,\n      \"endTime\": 1564039524182,\n      \"title\": \"High CPU load on host X\",\n      \"correlationId\": \"933613657e1c8fcf\"\n    },\n    {\n      \"managementZones\": [\n        {\n          \"name\": \"eiusmod quis cupidatat anim\",\n          \"id\": \"laboris i\"\n        },\n        {\n          \"name\": \"dolore et cupidatat incididun\",\n          \"id\": \"sed enim dolore\"\n        }\n      ],\n      \"entityTags\": [\n        {\n          \"stringRepresentation\": \"sunt voluptate amet fugiat\",\n          \"value\": \"in mollit Ut\",\n          \"key\": \"minim voluptate id ad\",\n          \"context\": \"occaecat ea sunt aliqua mollit\"\n        },\n        {\n          \"stringRepresentation\": \"esse ut\",\n          \"value\": \"sint tempor laboris\",\n          \"key\": \"sit veniam dolor\",\n          \"context\": \"adipisicing id\"\n        }\n      ],\n      \"suppressProblem\": true,\n      \"underMaintenance\": true,\n      \"suppressAlert\": true,\n      \"frequentEvent\": true,\n      \"entityId\": {\n        \"entityId\": {\n          \"id\": \"magna minim Ut co\",\n          \"type\": \"nostrud\"\n        },\n        \"name\": \"laboris\"\n      },\n      \"eventId\": \"4293884258445543163_1564039524182\",\n      \"eventType\": \"LOW_DISK_SPACE\",\n      \"properties\": [\n        {\n          \"value\": \"de\",\n          \"key\": \"in ad qui irure\"\n        },\n        {\n          \"value\": \"ut\",\n          \"key\": \"laboris\"\n        }\n      ],\n      \"status\": \"OPEN\",\n      \"startTime\": 1564039524182,\n      \"endTime\": 1564039524182,\n      \"title\": \"High CPU load on host X\",\n      \"correlationId\": \"933613657e1c8fcf\"\n    }\n  ],\n  \"pageSize\": -84064657,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						}
					]
				},
				{
					"name": "Ingests a custom event | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"eventType\": \"CUSTOM_INFO\",\n  \"title\": \"Excepteur sed\",\n  \"startTime\": 9282715,\n  \"endTime\": 6333885,\n  \"timeout\": -41229749,\n  \"entitySelector\": \"velit reprehenderit et aliquip\",\n  \"properties\": {\n    \"aute_b\": \"consequat ullamco dolore officia\",\n    \"officia_33\": \"nostrud\",\n    \"enimecf\": \"anim ut\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/events/ingest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"events",
								"ingest"
							]
						},
						"description": "The ingestion of custom events consumes [Davis Data Units](https://dt-url.net/ddu) (DDUs) from the events pool."
					},
					"response": [
						{
							"name": "The event ingest request was received by the server. The response body indicates for each event whether its creation was successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"eventType\": \"CUSTOM_INFO\",\n  \"title\": \"Excepteur sed\",\n  \"startTime\": 9282715,\n  \"endTime\": 6333885,\n  \"timeout\": -41229749,\n  \"entitySelector\": \"velit reprehenderit et aliquip\",\n  \"properties\": {\n    \"aute_b\": \"consequat ullamco dolore officia\",\n    \"officia_33\": \"nostrud\",\n    \"enimecf\": \"anim ut\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										"ingest"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"reportCount\": 87581181,\n  \"eventIngestResults\": [\n    {\n      \"status\": \"OK\",\n      \"correlationId\": \"et irure dolor\"\n    },\n    {\n      \"status\": \"INVALID_ENTITY_TYPE\",\n      \"correlationId\": \"in est\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Gets the properties of an event | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/events/:eventId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"events",
								":eventId"
							],
							"variable": [
								{
									"key": "eventId",
									"value": "nostrud",
									"description": "(Required) The ID of the required event."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success. The response contains the configuration of the event.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events/:eventId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "eventId",
											"value": "nostrud",
											"description": "(Required) The ID of the required event."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"managementZones\": [\n    {\n      \"name\": \"dolo\",\n      \"id\": \"ipsum nisi\"\n    },\n    {\n      \"name\": \"magna\",\n      \"id\": \"occaecat Ut non quis est\"\n    }\n  ],\n  \"entityTags\": [\n    {\n      \"stringRepresentation\": \"pariatur\",\n      \"value\": \"qui tempor fugiat\",\n      \"key\": \"dolore amet\",\n      \"context\": \"est sunt exercitation ipsum eu\"\n    },\n    {\n      \"stringRepresentation\": \"esse consectetur eiusmod dolor\",\n      \"value\": \"quis magna\",\n      \"key\": \"minim ut\",\n      \"context\": \"ex ullamco sin\"\n    }\n  ],\n  \"suppressProblem\": true,\n  \"underMaintenance\": true,\n  \"suppressAlert\": false,\n  \"frequentEvent\": false,\n  \"entityId\": {\n    \"entityId\": {\n      \"id\": \"irure occaecat eu Duis\",\n      \"type\": \"aute irure et\"\n    },\n    \"name\": \"officia magna\"\n  },\n  \"eventId\": \"4293884258445543163_1564039524182\",\n  \"eventType\": \"LOW_DISK_SPACE\",\n  \"properties\": [\n    {\n      \"value\": \"ut\",\n      \"key\": \"occaecat inc\"\n    },\n    {\n      \"value\": \"quis proident\",\n      \"key\": \"laboris non ex\"\n    }\n  ],\n  \"status\": \"OPEN\",\n  \"startTime\": 1564039524182,\n  \"endTime\": 1564039524182,\n  \"title\": \"High CPU load on host X\",\n  \"correlationId\": \"933613657e1c8fcf\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "event Properties",
			"item": [
				{
					"name": "Lists all event properties | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/eventProperties?nextPageKey=nostrud&pageSize=88698957",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"eventProperties"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "nostrud",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "88698957",
									"description": "The amount of event properties in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/eventProperties?nextPageKey=nostrud&pageSize=88698957",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"eventProperties"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": -77526749,\n  \"eventProperties\": [\n    {\n      \"key\": \"dt.event.description\",\n      \"displayName\": \"Custom description\",\n      \"description\": \"nostrud nulla ut ea\",\n      \"writable\": false\n    },\n    {\n      \"key\": \"dt.event.description\",\n      \"displayName\": \"Custom description\",\n      \"description\": \"sit elit anim in\",\n      \"writable\": true\n    }\n  ],\n  \"pageSize\": -71656475,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						}
					]
				},
				{
					"name": "Gets the details of an event property | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/eventProperties/:propertyKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"eventProperties",
								":propertyKey"
							],
							"variable": [
								{
									"key": "propertyKey",
									"value": "nostrud",
									"description": "(Required) The event property key you're inquiring."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/eventProperties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"eventProperties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "propertyKey",
											"value": "nostrud",
											"description": "(Required) The event property key you're inquiring."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"key\": \"dt.event.description\",\n  \"displayName\": \"Custom description\",\n  \"description\": \"dolore\",\n  \"writable\": true\n}"
						}
					]
				}
			]
		},
		{
			"name": "event Types",
			"item": [
				{
					"name": "Lists all event types | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/eventTypes?nextPageKey=nostrud&pageSize=88698957",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"eventTypes"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "nostrud",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "88698957",
									"description": "The amount of event types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/eventTypes?nextPageKey=nostrud&pageSize=88698957",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"eventTypes"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": -93836373,\n  \"eventTypeInfos\": [\n    {\n      \"severityLevel\": \"PERFORMANCE\",\n      \"type\": \"OSI_HIGH_CPU\",\n      \"displayName\": \"High CPU\",\n      \"description\": \"proident irure\"\n    },\n    {\n      \"severityLevel\": \"PERFORMANCE\",\n      \"type\": \"OSI_HIGH_CPU\",\n      \"displayName\": \"High CPU\",\n      \"description\": \"ut cul\"\n    }\n  ],\n  \"pageSize\": 44127788,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						}
					]
				},
				{
					"name": "Gets the properties of an event type | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/eventTypes/:eventType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"eventTypes",
								":eventType"
							],
							"variable": [
								{
									"key": "eventType",
									"value": "nostrud",
									"description": "(Required) The event type you're inquiring."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/eventTypes/:eventType",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"eventTypes",
										":eventType"
									],
									"variable": [
										{
											"key": "eventType",
											"value": "nostrud",
											"description": "(Required) The event type you're inquiring."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"severityLevel\": \"PERFORMANCE\",\n  \"type\": \"OSI_HIGH_CPU\",\n  \"displayName\": \"High CPU\",\n  \"description\": \"exercitation labore ut\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "metrics",
			"item": [
				{
					"name": "{metric Key}",
					"item": [
						{
							"name": "Gets the descriptor of the specified metric",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/:metricKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":metricKey"
									],
									"variable": [
										{
											"key": "metricKey",
											"value": "nostrud",
											"description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "nostrud",
													"description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"metricId\": \"ipsum\",\n  \"entityType\": [\n    \"co\",\n    \"et minim\"\n  ],\n  \"metricSelector\": \"dolore in exercitation\",\n  \"aggregationTypes\": [\n    \"median\",\n    \"percentile\"\n  ],\n  \"metricValueType\": {\n    \"type\": \"error\"\n  },\n  \"scalar\": false,\n  \"lastWritten\": -4548582,\n  \"latency\": -26750232,\n  \"impactRelevant\": true,\n  \"minimumValue\": -16954808.9895121,\n  \"maximumValue\": -26674615.14000742,\n  \"resolutionInfSupported\": true,\n  \"unitDisplayFormat\": \"binary\",\n  \"defaultAggregation\": {\n    \"type\": \"value\",\n    \"parameter\": 75643415.16496116\n  },\n  \"dimensionDefinitions\": [\n    {\n      \"displayName\": \"sit commodo elit\",\n      \"index\": -50501773,\n      \"key\": \"sed in dolor consectetur\",\n      \"name\": \"magna elit culpa Duis Lorem\",\n      \"type\": \"VOID\"\n    },\n    {\n      \"displayName\": \"quis ut Ut consequat\",\n      \"index\": -56974171,\n      \"key\": \"officia nostrud qui mollit quis\",\n      \"name\": \"Lorem fugiat aute ex\",\n      \"type\": \"VOID\"\n    }\n  ],\n  \"rootCauseRelevant\": true,\n  \"dduBillable\": true,\n  \"tags\": [\n    \"proident aliqua\",\n    \"aute Excepteur ex\"\n  ],\n  \"warnings\": [\n    \"dolor tempor\",\n    \"aute velit proident laboris\"\n  ],\n  \"displayName\": \"elit anim magna\",\n  \"description\": \"occaecat velit\",\n  \"transformations\": [\n    \"toUnit\",\n    \"rate\"\n  ],\n  \"unit\": \"aliqua\",\n  \"created\": 95851973\n}"
								},
								{
									"name": "Not found. The requested resource is not found or the query is incorrect.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "nostrud",
													"description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "nostrud",
													"description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations."
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes the specified metric",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/metrics/:metricKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":metricKey"
									],
									"variable": [
										{
											"key": "metricKey",
											"value": "nostrud",
											"description": "(Required) The key of the required metric. \n\n"
										}
									]
								},
								"description": "Deletion cannot be undone! You can't delete a metric if it has data points ingested within the last two hours."
							},
							"response": [
								{
									"name": "Success. The deletion of the metric has been triggered.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "nostrud",
													"description": "(Required) The key of the required metric. \n\n"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The metric has been written within the last two hours.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "nostrud",
													"description": "(Required) The key of the required metric. \n\n"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The metric cannot be found or the key cannot be parsed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "nostrud",
													"description": "(Required) The key of the required metric. \n\n"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The deletion of metric dimensions failed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "nostrud",
													"description": "(Required) The key of the required metric. \n\n"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all available metrics",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/metrics?nextPageKey=nostrud&pageSize=88698957&metricSelector=nostrud&text=nostrud&fields=nostrud&writtenSince=nostrud&metadataSelector=nostrud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "nostrud",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "88698957",
									"description": "The amount of metric schemata in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.\n\n If a value higher than 500 is used, only 500 results per page are returned."
								},
								{
									"key": "metricSelector",
									"value": "nostrud",
									"description": "Selects metrics for the query by their keys.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can select a full set of related metrics by using a trailing asterisk (`*`) wildcard. For example, `builtin:host.*` selects all host-based metrics and `builtin:*` selects all Dynatrace-provided metrics. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations.\n\n Only `aggregation`, `merge`, `parents`, and `splitBy` transformations are supported by this endpoint.\n\n To find metrics based on a search term, rather than metricId, use the **text** query parameter instead of this one."
								},
								{
									"key": "text",
									"value": "nostrud",
									"description": "Metric registry search term. Only show metrics that contain the term in their key, display name, or description. Use the `metricSelector` parameter instead of this one to select a complete metric hierarchy instead of doing a text-based search."
								},
								{
									"key": "fields",
									"value": "nostrud",
									"description": "Defines the list of metric properties included in the response. \n\n`metricId` is **always** included in the result. The following additional properties are available: \n\n* `displayName`: The name of the metric in the user interface. Enabled by default. \n* `description`: A short description of the metric. Enabled by default. \n* `unit`: The unit of the metric. Enabled by default. \n* `tags`: The tags of the metric. \n+ `dduBillable`:  An indicator whether the usage of metric consumes [Davis data units](https://dt-url.net/ddu). \n* `created`:  The timestamp (UTC milliseconds) when the metrics has been created. \n* `lastWritten`:  The timestamp (UTC milliseconds) when metric data points have been written for the last time. \n* `aggregationTypes`: The list of allowed aggregations for the metric. Note that it may be different after a [transformation](https://dt-url.net/metricSelector) is applied. \n* `defaultAggregation`: The default aggregation of the metric. It is used when no aggregation is specified or the `:auto` transformation is set. \n* `dimensionDefinitions`: The fine metric division (for example, process group and process ID for some process-related metric). \n* `transformations`: A list of [transformations](https://dt-url.net/metricSelector) that can be applied to the metric.\n* `entityType`: A list of entity types supported by the metric.\n* `minimumValue`: The minimum allowed value of the metric.\n* `maximumValue`: The maximum allowed value of the metric.\n* `rootCauseRelevant`: Whether (true or false) the metric is related to a root cause of a problem. A root-cause relevant metric represents a strong indicator for a faulty component.\n* `impactRelevant`: Whether (true or false) the metric is relevant to a problem's impact. An impact-relevant metric is highly dependent on other metrics and changes because an underlying root-cause metric has changed.\n* `metricValueType`: The type of the metric's value. You have these options:\n\t * `score`: A score metric is a metric where high values indicate a good situation, while low values indicate trouble. An example of such a metric is a success rate.\n\t * `error`: An error metric is a metric where high values indicate trouble, while low values indicate a good situation. An example of such a metric is an error count.\n* `latency`: The latency of the metric, in minutes. The latency is the expected reporting delay (for example, caused by constraints of cloud vendors or other third-party data sources) between the observation of a metric data point and its availability in Dynatrace. The allowed value range is from `1` to `60` minutes.\n* `metricSelector`: The underlying metric selector used by a func: metric.\n* `scalar`: Indicates whether the metric expression resolves to a scalar (`true`) or to a series (`false`). \nA scalar result always contains one data point. The amount of data points in a series result depends on the resolution you're using. \n* `resolutionInfSupported`: If `true`, resolution=Inf can be applied to the metric query. \n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`.\n\nTo specify several properties, join them with a comma (for example `fields=+aggregationTypes,-description`).\n\nIf you specify just one property, the response contains the metric key and the specified property. To return metric keys only, specify `metricId` here."
								},
								{
									"key": "writtenSince",
									"value": "nostrud",
									"description": "Filters the resulted set of metrics to those that have data points within the specified timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
								},
								{
									"key": "metadataSelector",
									"value": "nostrud",
									"description": "The metadata scope of the query. Only metrics with specified properties are included to the response. \n\nYou can set one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used. If several values are specified, the **OR** logic applies. \n\n* `unit(\"unit-1\",\"unit-2\")` \n* `tags(\"tag-1\",\"tag-2\")` \n\nTo set several criteria, separate them with a comma (`,`). For example, `tags(\"feature\",\"cloud\"),unit(\"Percent\")`. Only results matching **all** criteria are included in response. \n\nFor example, to list metrics that have the tags **feature** AND **cloud** with a unit of **Percent** OR **MegaByte**, use this **metadataSelector**: `tags(\"feature\"),unit(\"Percent\",\"MegaByte\"),tags(\"cloud\")`."
								}
							]
						},
						"description": "You can narrow down the output by selecting metrics in the **metricSelector** field. \n\nYou can additionally limit the output by using pagination: \n\n1. Specify the number of results per page in the **pageSize** query parameter. \n\n2. Then use the cursor from the **nextPageKey** field of the response in the **nextPageKey** query parameter to obtain subsequent pages. All other query parameters must be omitted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=nostrud&pageSize=88698957&metricSelector=nostrud&text=nostrud&fields=nostrud&writtenSince=nostrud&metadataSelector=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										},
										{
											"key": "metricSelector",
											"value": "nostrud"
										},
										{
											"key": "text",
											"value": "nostrud"
										},
										{
											"key": "fields",
											"value": "nostrud"
										},
										{
											"key": "writtenSince",
											"value": "nostrud"
										},
										{
											"key": "metadataSelector",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"metrics\": [\n    {\n      \"metricId\": \"nisi quis deserunt eiusmod\",\n      \"entityType\": [\n        \"deserunt velit ut qui labore\",\n        \"anim adipisicing\"\n      ],\n      \"metricSelector\": \"esse reprehenderit Ut fugiat\",\n      \"aggregationTypes\": [\n        \"value\",\n        \"auto\"\n      ],\n      \"metricValueType\": {\n        \"type\": \"score\"\n      },\n      \"scalar\": false,\n      \"lastWritten\": -87280468,\n      \"latency\": -31670246,\n      \"impactRelevant\": true,\n      \"minimumValue\": -79449432.54939175,\n      \"maximumValue\": 82285036.12559947,\n      \"resolutionInfSupported\": true,\n      \"unitDisplayFormat\": \"binary\",\n      \"defaultAggregation\": {\n        \"type\": \"sum\",\n        \"parameter\": -77210714.6521233\n      },\n      \"dimensionDefinitions\": [\n        {\n          \"displayName\": \"ipsum pariatur et\",\n          \"index\": 42321339,\n          \"key\": \"occaecat \",\n          \"name\": \"aliqua nisi\",\n          \"type\": \"VOID\"\n        },\n        {\n          \"displayName\": \"ut anim\",\n          \"index\": -96355383,\n          \"key\": \"Ut fugiat laboris sint non\",\n          \"name\": \"nulla Duis non\",\n          \"type\": \"STRING\"\n        }\n      ],\n      \"rootCauseRelevant\": true,\n      \"dduBillable\": false,\n      \"tags\": [\n        \"labore sint\",\n        \"eu nisi magna tempor in\"\n      ],\n      \"warnings\": [\n        \"mollit sit enim\",\n        \"reprehenderit labore\"\n      ],\n      \"displayName\": \"amet dolore aliquip\",\n      \"description\": \"do in\",\n      \"transformations\": [\n        \"lastReal\",\n        \"fold\"\n      ],\n      \"unit\": \"incididunt\",\n      \"created\": -23955706\n    },\n    {\n      \"metricId\": \"voluptate occaecat dolore velit \",\n      \"entityType\": [\n        \"consequat deserunt nostrud\",\n        \"mollit sit\"\n      ],\n      \"metricSelector\": \"dolore velit\",\n      \"aggregationTypes\": [\n        \"min\",\n        \"median\"\n      ],\n      \"metricValueType\": {\n        \"type\": \"error\"\n      },\n      \"scalar\": true,\n      \"lastWritten\": -34543735,\n      \"latency\": -64340242,\n      \"impactRelevant\": false,\n      \"minimumValue\": 73684926.30958685,\n      \"maximumValue\": 27153322.722588673,\n      \"resolutionInfSupported\": true,\n      \"unitDisplayFormat\": \"decimal\",\n      \"defaultAggregation\": {\n        \"type\": \"median\",\n        \"parameter\": -63778170.60714648\n      },\n      \"dimensionDefinitions\": [\n        {\n          \"displayName\": \"laborum cillum adipisicing\",\n          \"index\": -43516073,\n          \"key\": \"Excepteur dolo\",\n          \"name\": \"ea dolor\",\n          \"type\": \"OTHER\"\n        },\n        {\n          \"displayName\": \"aute sit\",\n          \"index\": 60175150,\n          \"key\": \"anim ut\",\n          \"name\": \"in dolor\",\n          \"type\": \"NUMBER\"\n        }\n      ],\n      \"rootCauseRelevant\": false,\n      \"dduBillable\": false,\n      \"tags\": [\n        \"anim in velit occaecat\",\n        \"eiusmod ut dolore eu\"\n      ],\n      \"warnings\": [\n        \"et ea\",\n        \"dolore amet irure\"\n      ],\n      \"displayName\": \"in ullamco occaecat sunt\",\n      \"description\": \"Duis sit\",\n      \"transformations\": [\n        \"rate\",\n        \"names\"\n      ],\n      \"unit\": \"de\",\n      \"created\": -17629254\n    }\n  ],\n  \"nextPageKey\": \"consequat irure est nostrud\",\n  \"totalCount\": -91701778,\n  \"warnings\": [\n    \"qui dolore\",\n    \"aliqua deserunt dolor\"\n  ]\n}"
						},
						{
							"name": "Syntax or validation error. **metricSelector** or **fields** have syntactic or semantic errors.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=nostrud&pageSize=88698957&metricSelector=nostrud&text=nostrud&fields=nostrud&writtenSince=nostrud&metadataSelector=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										},
										{
											"key": "metricSelector",
											"value": "nostrud"
										},
										{
											"key": "text",
											"value": "nostrud"
										},
										{
											"key": "fields",
											"value": "nostrud"
										},
										{
											"key": "writtenSince",
											"value": "nostrud"
										},
										{
											"key": "metadataSelector",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found. The requested resource is not found or the query is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=nostrud&pageSize=88698957&metricSelector=nostrud&text=nostrud&fields=nostrud&writtenSince=nostrud&metadataSelector=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										},
										{
											"key": "metricSelector",
											"value": "nostrud"
										},
										{
											"key": "text",
											"value": "nostrud"
										},
										{
											"key": "fields",
											"value": "nostrud"
										},
										{
											"key": "writtenSince",
											"value": "nostrud"
										},
										{
											"key": "metadataSelector",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=nostrud&pageSize=88698957&metricSelector=nostrud&text=nostrud&fields=nostrud&writtenSince=nostrud&metadataSelector=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										},
										{
											"key": "metricSelector",
											"value": "nostrud"
										},
										{
											"key": "text",
											"value": "nostrud"
										},
										{
											"key": "fields",
											"value": "nostrud"
										},
										{
											"key": "writtenSince",
											"value": "nostrud"
										},
										{
											"key": "metadataSelector",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Gets data points of the specified metrics",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/metrics/query?metricSelector=nostrud&resolution=nostrud&from=nostrud&to=nostrud&entitySelector=nostrud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								"query"
							],
							"query": [
								{
									"key": "metricSelector",
									"value": "nostrud",
									"description": "Selects metrics for the query by their keys. You can select up to 10 metrics for one query.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations.\n\n If the metric key contains whitespaces, they must be escaped with a tilde (`~`). For example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents of Type 'APACHE'** you must specify this selector: \n\n`ext:selfmonitoring.jmx.Agents~ of~ Type~ 'APACHE'`"
								},
								{
									"key": "resolution",
									"value": "nostrud",
									"description": "The desired resolution of data points. \n\nYou can use one of the following options: \n* The desired amount of data points. This is the default option. This is a reference number of points, which is not necessarily equal to the number of the returned data points. \n* The desired timespan between data points. This is a reference timespan, which is not necessarily equal to the returned timespan. To use this option, specify the unit of the timespan. \n\nValid units for the timespan are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the default is **120 data points**.\n\nFor example: \n\n* Get data points which are 10 minutes apart: `resolution=10m` \n* Get data points which are 3 weeks apart: `resolution=3w`"
								},
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "entitySelector",
									"value": "nostrud",
									"description": "Specifies the entity scope of the query. Only data points delivered by matched entities are included in response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\nUse the [`GET /metrics/{metricId}`](https://dt-url.net/6z23ifk) call to fetch the list of possible entity types for your metric. \n\nTo set a universal scope matching all entities, omit this parameter."
								}
							]
						},
						"description": "The following limits apply: \n* The amount of aggregated data points in the response is limited to 1,000 \n* The amount of series in the response is limited to 1,000 \n   * The amount of data points per series is limited to 10,080 (minutes of one week) \n   * The overall amount of data points is limited to 100,000 \n"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=nostrud&resolution=nostrud&from=nostrud&to=nostrud&entitySelector=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "nostrud"
										},
										{
											"key": "resolution",
											"value": "nostrud"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "entitySelector",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"resolution\": \"proident cillum commodo nostrud\",\n  \"result\": [\n    {\n      \"data\": [\n        {\n          \"dimensionMap\": {\n            \"Excepteurbba\": \"ullamco consequat ad esse sit\"\n          },\n          \"dimensions\": [\n            \"do cillum enim\",\n            \"tempor fugiat laborum mollit\"\n          ],\n          \"timestamps\": [\n            73907173,\n            -72499650\n          ],\n          \"values\": [\n            -70297404.86646508,\n            -70157040.32860893\n          ]\n        },\n        {\n          \"dimensionMap\": {\n            \"pariatur859\": \"in\"\n          },\n          \"dimensions\": [\n            \"dolore minim Lorem\",\n            \"Excepteur non nostru\"\n          ],\n          \"timestamps\": [\n            -83460545,\n            37856723\n          ],\n          \"values\": [\n            -47900369.515966944,\n            19267027.00203009\n          ]\n        }\n      ],\n      \"metricId\": \"deserunt anim\",\n      \"warnings\": [\n        \"non nulla amet\",\n        \"ut ullamco irure\"\n      ]\n    },\n    {\n      \"data\": [\n        {\n          \"dimensionMap\": {\n            \"sed_35\": \"commodo aliqua nulla incididunt\"\n          },\n          \"dimensions\": [\n            \"proident\",\n            \"labore dolore\"\n          ],\n          \"timestamps\": [\n            85457024,\n            91295978\n          ],\n          \"values\": [\n            -14391309.402314872,\n            60419763.1656993\n          ]\n        },\n        {\n          \"dimensionMap\": {\n            \"mollit_c38\": \"minim adipisicing ut\"\n          },\n          \"dimensions\": [\n            \"irure nostrud\",\n            \"ea id dolor\"\n          ],\n          \"timestamps\": [\n            71354857,\n            -10500936\n          ],\n          \"values\": [\n            -77858970.16442904,\n            4961263.403106704\n          ]\n        }\n      ],\n      \"metricId\": \"ex dolor do fugiat\",\n      \"warnings\": [\n        \"qui id commodo\",\n        \"deserun\"\n      ]\n    }\n  ],\n  \"totalCount\": 72381909,\n  \"nextPageKey\": \"irure deserunt enim\",\n  \"warnings\": [\n    \"occaecat quis reprehenderit ex\",\n    \"in ess\"\n  ]\n}"
						},
						{
							"name": "Syntax or validation error. From and to parameters, scope or resolution are incorrect individually or in their combined meaning.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=nostrud&resolution=nostrud&from=nostrud&to=nostrud&entitySelector=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "nostrud"
										},
										{
											"key": "resolution",
											"value": "nostrud"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "entitySelector",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The request is valid but the response is too big to process. Split your query into several queries with limited scopes.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=nostrud&resolution=nostrud&from=nostrud&to=nostrud&entitySelector=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "nostrud"
										},
										{
											"key": "resolution",
											"value": "nostrud"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "entitySelector",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found. The requested resource is not found or the query is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=nostrud&resolution=nostrud&from=nostrud&to=nostrud&entitySelector=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "nostrud"
										},
										{
											"key": "resolution",
											"value": "nostrud"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "entitySelector",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=nostrud&resolution=nostrud&from=nostrud&to=nostrud&entitySelector=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "nostrud"
										},
										{
											"key": "resolution",
											"value": "nostrud"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "entitySelector",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Pushes metric data points to Dynatrace",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"server.cpu.temperature,cpu.id=0 42\""
						},
						"url": {
							"raw": "{{baseUrl}}/metrics/ingest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								"ingest"
							]
						}
					},
					"response": [
						{
							"name": "The provided metric data points are accepted and will be processed in the background.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"server.cpu.temperature,cpu.id=0 42\""
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"ingest"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Some data points are invalid. Valid data points are accepted and will be processed in the background.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"server.cpu.temperature,cpu.id=0 42\""
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"ingest"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "network Zones",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets parameters of the specified network zone",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "nostrud",
											"description": "(Required) The ID of the required network zone."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the required network zone."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"alternativeZones\": [\n    \"dolor pariatur\",\n    \"oc\"\n  ],\n  \"numOfOneAgentsUsing\": 35119083,\n  \"numOfConfiguredOneAgents\": 57887482,\n  \"numOfOneAgentsFromOtherZones\": 83014257,\n  \"numOfConfiguredActiveGates\": 57841171,\n  \"id\": \"Lorem consequat Excepteur non sit\",\n  \"description\": \"mollit consequat sint qui deserunt\"\n}"
								}
							]
						},
						{
							"name": "Updates an existing network zone or creates a new one",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alternativeZones\": [\n    \"laboris sit ea\",\n    \"fugiat\"\n  ],\n  \"description\": \"tempor amet\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "nostrud",
											"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
										}
									]
								},
								"description": "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
							},
							"response": [
								{
									"name": "Success. The new network zone has been created. The response body contains the ID of the new network zone.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alternativeZones\": [\n    \"laboris sit ea\",\n    \"fugiat\"\n  ],\n  \"description\": \"tempor amet\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"pariatur adipisicing Excepteur labo\",\n  \"name\": \"officia dolor aute\",\n  \"description\": \"ea\"\n}"
								},
								{
									"name": "Success. The network zone has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alternativeZones\": [\n    \"laboris sit ea\",\n    \"fugiat\"\n  ],\n  \"description\": \"tempor amet\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alternativeZones\": [\n    \"laboris sit ea\",\n    \"fugiat\"\n  ],\n  \"description\": \"tempor amet\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified network zone",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "nostrud",
											"description": "(Required) The ID of the network zone to be deleted."
										}
									]
								},
								"description": "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives."
							},
							"response": [
								{
									"name": "Deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the network zone to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. See error message in the response body for details.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the network zone to be deleted."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Gets the statistics about hosts using the network zone",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id/hostConnectionStatistics?filter=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id",
										"hostConnectionStatistics"
									],
									"query": [
										{
											"key": "filter",
											"value": "all",
											"description": "Filters the resulting set of hosts: \n\n* `all`: All hosts using the zone. \n* `configuredButNotConnectedOnly`: Hosts from the network zone that use other zones. \n* `connectedAsAlternativeOnly`: Hosts that use the network zone as an alternative. \n* `connectedAsFailoverOnly`: Hosts from other zones that use the zone (not configured as an alternative) even though ActiveGates of higher priority are available. \n* `connectedAsFailoverWithoutOwnActiveGatesOnly`: Hosts from other zones that use the zone (not configured as an alternative) and **no** ActiveGates of higher priority are available. \n\nIf not set, `all` is used."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "nostrud",
											"description": "(Required) The ID of the required network zone."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id/hostConnectionStatistics?filter=all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id",
												"hostConnectionStatistics"
											],
											"query": [
												{
													"key": "filter",
													"value": "all"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the required network zone."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"hostsConnectedAsAlternative\": [\n    \"est\",\n    \"sunt labore ut sit\"\n  ],\n  \"hostsConnectedAsFailoverWithoutActiveGates\": [\n    \"c\",\n    \"ullamco ut elit\"\n  ],\n  \"hostsConnectedAsFailover\": [\n    \"Lorem mollit\",\n    \"nostrud culpa\"\n  ],\n  \"hostsConfiguredButNotConnected\": [\n    \"dol\",\n    \"f\"\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all existing network zones",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networkZones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZones"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"networkZones\": [\n    {\n      \"alternativeZones\": [\n        \"eiusmod\",\n        \"minim quis ipsum veniam adipisicing\"\n      ],\n      \"numOfOneAgentsUsing\": -80068977,\n      \"numOfConfiguredOneAgents\": 25276016,\n      \"numOfOneAgentsFromOtherZones\": -79702677,\n      \"numOfConfiguredActiveGates\": -64398447,\n      \"id\": \"do labore in ad\",\n      \"description\": \"reprehenderit veniam occaecat laboris\"\n    },\n    {\n      \"alternativeZones\": [\n        \"Duis\",\n        \"enim irure qui dolor\"\n      ],\n      \"numOfOneAgentsUsing\": 79029979,\n      \"numOfConfiguredOneAgents\": 59515146,\n      \"numOfOneAgentsFromOtherZones\": -30357733,\n      \"numOfConfiguredActiveGates\": -9611341,\n      \"id\": \"consequat adipisicing an\",\n      \"description\": \"commodo ipsum ea cillum\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "network Zone Settings",
			"item": [
				{
					"name": "Gets the global configuration of network zones",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networkZoneSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZoneSettings"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZoneSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZoneSettings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"networkZonesEnabled\": false\n}"
						}
					]
				},
				{
					"name": "Updates the global configuration of network zones",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"networkZonesEnabled\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/networkZoneSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZoneSettings"
							]
						}
					},
					"response": [
						{
							"name": "Success. The global network zones configuration has been updated. Response doesn't have a body.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"networkZonesEnabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/networkZoneSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZoneSettings"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "tags",
			"item": [
				{
					"name": "Gets a list of custom tags applied to the specified entities",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tags?entitySelector=nostrud&from=nostrud&to=nostrud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "entitySelector",
									"value": "nostrud",
									"description": "(Required) Specifies the entities where you want to read tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								},
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								}
							]
						},
						"description": "Automatically applied tags and imported tags are not included."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?entitySelector=nostrud&from=nostrud&to=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "entitySelector",
											"value": "nostrud"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"tags\": {\n    \"empty\": true\n  },\n  \"totalCount\": 64429636\n}"
						}
					]
				},
				{
					"name": "Adds custom tags to the specified entities",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tags\": [\n    {\n      \"key\": \"mainApp\"\n    },\n    {\n      \"key\": \"bookings\",\n      \"value\": \"42\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tags?entitySelector=nostrud&from=nostrud&to=nostrud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "entitySelector",
									"value": "nostrud",
									"description": "(Required) Specifies the entities where you want to update tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								},
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								}
							]
						},
						"description": "All existing tags remain unaffected."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tags\": [\n    {\n      \"key\": \"mainApp\"\n    },\n    {\n      \"key\": \"bookings\",\n      \"value\": \"42\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags?entitySelector=nostrud&from=nostrud&to=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "entitySelector",
											"value": "nostrud"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"appliedTags\": {\n    \"empty\": true\n  },\n  \"matchedEntitiesCount\": -98579847\n}"
						}
					]
				},
				{
					"name": "Deletes the specified tag from the specified entities",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tags?key=fugiat Excepteur mollit&value=nostrud&deleteAllWithKey=true&entitySelector=nostrud&from=nostrud&to=nostrud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "key",
									"value": "fugiat Excepteur mollit",
									"description": "(Required) The tag to be deleted."
								},
								{
									"key": "value",
									"value": "nostrud",
									"description": "The tag to be deleted."
								},
								{
									"key": "deleteAllWithKey",
									"value": "true",
									"description": "The tag to be deleted."
								},
								{
									"key": "entitySelector",
									"value": "nostrud",
									"description": "(Required) Specifies the entities where you want to delete tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								},
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?key=fugiat Excepteur mollit&value=nostrud&deleteAllWithKey=true&entitySelector=nostrud&from=nostrud&to=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "key",
											"value": "fugiat Excepteur mollit"
										},
										{
											"key": "value",
											"value": "nostrud"
										},
										{
											"key": "deleteAllWithKey",
											"value": "true"
										},
										{
											"key": "entitySelector",
											"value": "nostrud"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"matchedEntitiesCount\": 2\n}"
						}
					]
				}
			]
		},
		{
			"name": "active Gate Tokens",
			"item": [
				{
					"name": "{token Identifier}",
					"item": [
						{
							"name": "Gets metadata of an ActiveGate token | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens",
										":tokenIdentifier"
									],
									"variable": [
										{
											"key": "tokenIdentifier",
											"value": "nostrud",
											"description": "(Required) The ID of the token."
										}
									]
								},
								"description": "The token secret is **not** exposed."
							},
							"response": [
								{
									"name": "Success. The response contains the metadata of the tokens.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGateTokens",
												":tokenIdentifier"
											],
											"variable": [
												{
													"key": "tokenIdentifier",
													"value": "nostrud",
													"description": "(Required) The ID of the token."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"dt0g02.4KWZO5EF\",\n  \"name\": \"myToken\",\n  \"owner\": \"john.smith\",\n  \"creationDate\": \"2020-11-22T08:15:30.144Z\",\n  \"expirationDate\": \"2020-11-24T08:15:30.144Z\",\n  \"lastUsedDate\": \"2020-11-23T08:15:30.144Z\",\n  \"seedToken\": false,\n  \"activeGateType\": \"CLUSTER\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGateTokens",
												":tokenIdentifier"
											],
											"variable": [
												{
													"key": "tokenIdentifier",
													"value": "nostrud",
													"description": "(Required) The ID of the token."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGateTokens",
												":tokenIdentifier"
											],
											"variable": [
												{
													"key": "tokenIdentifier",
													"value": "nostrud",
													"description": "(Required) The ID of the token."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes an ActiveGate token | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens",
										":tokenIdentifier"
									],
									"variable": [
										{
											"key": "tokenIdentifier",
											"value": "nostrud",
											"description": "(Required) The token to be deleted. \n\nYou can specify either the ID or the secret of the token."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGateTokens",
												":tokenIdentifier"
											],
											"variable": [
												{
													"key": "tokenIdentifier",
													"value": "nostrud",
													"description": "(Required) The token to be deleted. \n\nYou can specify either the ID or the secret of the token."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGateTokens",
												":tokenIdentifier"
											],
											"variable": [
												{
													"key": "tokenIdentifier",
													"value": "nostrud",
													"description": "(Required) The token to be deleted. \n\nYou can specify either the ID or the secret of the token."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGateTokens",
												":tokenIdentifier"
											],
											"variable": [
												{
													"key": "tokenIdentifier",
													"value": "nostrud",
													"description": "(Required) The token to be deleted. \n\nYou can specify either the ID or the secret of the token."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available ActiveGate tokens | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activeGateTokens?nextPageKey=nostrud&pageSize=88698957",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGateTokens"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "nostrud",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "88698957",
									"description": "The amount of ActiveGate tokens in a single response payload. \n\nThe maximal allowed page size is 3000 and the minimal size is 100. \n\nIf not set, 100 is used."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success. The response contains the list of ActiveGate tokens.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens?nextPageKey=nostrud&pageSize=88698957",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": 1000,\n  \"pageSize\": 100,\n  \"nextPageKey\": \"AAAAAAAAAAAAAABOAAAAAAAAAAAAAAA6ACQAEAAAABgACgAITFdXQk1BRzYAAAhtZXRhZGF0YQB___-bf___m3iIYxfF7xVQvY72rwblQkcAAwAAAAAAAADHAAAAZA==\",\n  \"activeGateTokens\": {\n    \"name\": \"myToken\",\n    \"owner\": \"john.smith\",\n    \"creationDate\": \"2020-11-22T08:15:30.144Z\",\n    \"expirationDate\": \"2020-11-24T08:15:30.144Z\",\n    \"lastUsedDate\": \"2020-11-23T08:15:30.144Z\",\n    \"seedToken\": \"false\",\n    \"activeGateType\": \"ENVIRONMENT\"\n  }\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens?nextPageKey=nostrud&pageSize=88698957",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens?nextPageKey=nostrud&pageSize=88698957",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				},
				{
					"name": "Creates a new ActiveGate token | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"activeGateType\": \"ENVIRONMENT\",\n  \"name\": \"myToken\",\n  \"expirationDate\": \"now+14d\",\n  \"seedToken\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/activeGateTokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGateTokens"
							]
						},
						"description": "The newly created token will be owned by the same user who owns the token used for authentication of the call."
					},
					"response": [
						{
							"name": "Success. The token has been created. The body of the response contains the token secret.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activeGateType\": \"ENVIRONMENT\",\n  \"name\": \"myToken\",\n  \"expirationDate\": \"now+14d\",\n  \"seedToken\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"dt0g02.4KWZO5EF\",\n  \"token\": \"dt0g02.4KWZO5EF.XT47R5DRADJIZUFOX4UDNOKTSUSABGLN7XSMJG7UXHRXKNY4WLORH4OF4T75MG7E\",\n  \"expirationDate\": \"2020-11-24T08:15:30.144Z\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activeGateType\": \"ENVIRONMENT\",\n  \"name\": \"myToken\",\n  \"expirationDate\": \"now+14d\",\n  \"seedToken\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "api Tokens",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets API token metadata by token ID",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apiTokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "nostrud",
											"description": "(Required) The ID of the token."
										}
									]
								},
								"description": "The token secret is **not** exposed."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the token."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"lastUsedIpAddress\": \"34.197.2.44\",\n  \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n  \"personalAccessToken\": true,\n  \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n  \"name\": \"myToken\",\n  \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n  \"owner\": \"john.smith\",\n  \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n  ],\n  \"enabled\": true\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the token."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the token."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates an API token",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"myToken\",\n  \"enabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "nostrud",
											"description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"myToken\",\n  \"enabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"myToken\",\n  \"enabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes an API token",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apiTokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "nostrud",
											"description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. You can't delete the token you're using for authentication of the request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all available API tokens",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apiTokens?nextPageKey=nostrud&pageSize=-25595793&apiTokenSelector=nostrud&fields=nostrud&from=nostrud&to=nostrud&sort=-creationDate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apiTokens"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "nostrud",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-25595793",
									"description": "The amount of API tokens in a single response payload. \n\nThe maximal allowed page size is 10000 and the minimal allowed page size is 100. \n\nIf not set, 200 is used."
								},
								{
									"key": "apiTokenSelector",
									"value": "nostrud",
									"description": "Filters the resulting sets of tokens. Only tokens matching the specified criteria are included into response. \n\nYou can set one or more of the following criteria: \n\n* Owner: `owner(\"value\")`. The user that owns the token. Case-sensitive.\n* Personal access token: `personalAccessToken(false)`. Set to `true` to include only personal access tokens or to `false` to include only API tokens.\n* Token scope: `scope(\"scope1\",\"scope2\")`. If several values are specified, the **OR** logic applies. \n\nTo set multiple criteria, separate them with commas (`,`). Only results matching **all** criteria are included into response."
								},
								{
									"key": "fields",
									"value": "nostrud",
									"description": "Specifies the fields to be included in the response.\n\nThe following fields are included by default: \n\n* `id` \n* `name` \n* `enabled` \n* `owner` \n* `creationDate` \n\nTo remove fields from the response, specify them with the minus (`-`) operator as a comma-separated list (for example, `-creationDate,-owner`). \n\nYou can include additional fields: \n\n* `personalAccessToken` \n* `expirationDate` \n* `lastUsedDate` \n* `lastUsedIpAddress` \n* `scopes` \n\nTo add fields to the response, specify them with the plus (`+`) operator as a comma-separated list (for example, `+expirationDate,+scopes`). You can combine adding and removing of fields (for example, `+scopes,-creationDate`). \n\nAlternatively, you can define the desired set of fields in the response. Specify the required fields as a comma-separated list, without operators (for example, `creationDate,expirationDate,owner`). The ID is always included in the response. \n\nThe **fields** string must be URL-encoded."
								},
								{
									"key": "from",
									"value": "nostrud",
									"description": "Filters tokens based on the last usage time. \nThe start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "Filters tokens based on the last usage time. \nThe end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "sort",
									"value": "-creationDate",
									"description": "The sort order of the token list. \n\nYou can sort by the following properties with a sign prefix for the sort order: \n\n * `name`: token name (`+` a...z or `-` z...a) \n * `lastUsedDate` last used (`+` never used tokens first `-` most recently used tokens first) \n * `creationDate` (`+` oldest tokens first `-` newest tokens first) \n * `expirationDate` (`+` tokens that expire soon first `-` unlimited tokens first) \n\nIf no prefix is set, + is used. \n\nIf not set, tokens are sorted by creation date with newest first."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apiTokens?nextPageKey=nostrud&pageSize=-25595793&apiTokenSelector=nostrud&fields=nostrud&from=nostrud&to=nostrud&sort=-creationDate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "-25595793"
										},
										{
											"key": "apiTokenSelector",
											"value": "nostrud"
										},
										{
											"key": "fields",
											"value": "nostrud"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "sort",
											"value": "-creationDate"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": 73517327,\n  \"apiTokens\": [\n    {\n      \"lastUsedIpAddress\": \"34.197.2.44\",\n      \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n      \"personalAccessToken\": true,\n      \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n      \"name\": \"myToken\",\n      \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n      \"owner\": \"john.smith\",\n      \"scopes\": [\n        \"metrics.read\",\n        \"metrics.read\"\n      ],\n      \"enabled\": true\n    },\n    {\n      \"lastUsedIpAddress\": \"34.197.2.44\",\n      \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n      \"personalAccessToken\": true,\n      \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n      \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n      \"name\": \"myToken\",\n      \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n      \"owner\": \"john.smith\",\n      \"scopes\": [\n        \"metrics.read\",\n        \"metrics.read\"\n      ],\n      \"enabled\": true\n    }\n  ],\n  \"pageSize\": -47961540,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apiTokens?nextPageKey=nostrud&pageSize=-25595793&apiTokenSelector=nostrud&fields=nostrud&from=nostrud&to=nostrud&sort=-creationDate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "-25595793"
										},
										{
											"key": "apiTokenSelector",
											"value": "nostrud"
										},
										{
											"key": "fields",
											"value": "nostrud"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "sort",
											"value": "-creationDate"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				},
				{
					"name": "Creates a new API token",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"tokenName\",\n  \"scopes\": [\n    \"metrics.read\"\n  ],\n  \"personalAccessToken\": false,\n  \"expirationDate\": \"now+14d\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/apiTokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apiTokens"
							]
						},
						"description": "The newly created token will be owned by the same user who owns the token used for authentication of the call."
					},
					"response": [
						{
							"name": "Success. The token has been created. The body of the response contains the token secret.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"tokenName\",\n  \"scopes\": [\n    \"metrics.read\"\n  ],\n  \"personalAccessToken\": false,\n  \"expirationDate\": \"now+14d\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n  \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n  \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"tokenName\",\n  \"scopes\": [\n    \"metrics.read\"\n  ],\n  \"personalAccessToken\": false,\n  \"expirationDate\": \"now+14d\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				},
				{
					"name": "Gets API token metadata by token secret",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/apiTokens/lookup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apiTokens",
								"lookup"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens/lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										"lookup"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"lastUsedIpAddress\": \"34.197.2.44\",\n  \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n  \"personalAccessToken\": true,\n  \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n  \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n  \"name\": \"myToken\",\n  \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n  \"owner\": \"john.smith\",\n  \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n  ],\n  \"enabled\": true\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens/lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										"lookup"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "auditlogs",
			"item": [
				{
					"name": "Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auditlogs?nextPageKey=nostrud&pageSize=88698957&filter=nostrud&from=nostrud&to=nostrud&sort=-timestamp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auditlogs"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "nostrud",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "88698957",
									"description": "The amount of log entries in a single response payload. \n\nThe maximal allowed page size is 5000. \n\nIf not set, 1000 is used."
								},
								{
									"key": "filter",
									"value": "nostrud",
									"description": "Filters the audit log. You can use the following criteria: \n* User: `user(\"userIdentification\")`. The `EQUALS` operator applies. \n* Event type: `eventType(\"value\")`. The `EQUALS` operator applies. \n* Category of a logged operation: `category(\"value\")`. The `EQUALS` operator applies. \n* Entity ID: `entityId(\"id\")`. The `CONTAINS` operator applies. \n\nFor each criterion, you can specify multiple alternatives with comma-separated values. In this case, the OR logic applies. For example, `eventType(\"CREATE\",\"UPDATE\")` means eventType can be \"CREATE\" or \"UPDATE\". \n\nYou can specify multiple comma-separated criteria, such as `eventType(\"CREATE\",\"UPDATE\"),category(\"CONFIG\")`. Only results matching **all** criteria are included in response. \n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes: \n* Tilde `~` \n* Quote `\"`"
								},
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "sort",
									"value": "-timestamp",
									"description": "The sorting of audit log entries: \n* `timestamp`: Oldest first. \n* `-timestamp`: Newest first. \n\nIf not set, the newest first sorting is applied."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs?nextPageKey=nostrud&pageSize=88698957&filter=nostrud&from=nostrud&to=nostrud&sort=-timestamp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										},
										{
											"key": "filter",
											"value": "nostrud"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "sort",
											"value": "-timestamp"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": 60567002,\n  \"pageSize\": -30366709,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"auditLogs\": [\n    {\n      \"category\": \"DEBUG_UI\",\n      \"environmentId\": \"labore occaecat\",\n      \"eventType\": \"LOGIN\",\n      \"logId\": \"in do\",\n      \"success\": false,\n      \"timestamp\": -7014970,\n      \"user\": \"officia aliquip labore dolore Ut\",\n      \"userType\": \"USER_NAME\",\n      \"entityId\": \"eiusmod incididunt\",\n      \"userOrigin\": \"in in esse ipsum\",\n      \"message\": \"qui ipsum est pariatur Lorem\",\n      \"patch\": {}\n    },\n    {\n      \"category\": \"TOKEN\",\n      \"environmentId\": \"sint\",\n      \"eventType\": \"PUT\",\n      \"logId\": \"dolo\",\n      \"success\": true,\n      \"timestamp\": -2371668,\n      \"user\": \"dolore nisi cupidatat do\",\n      \"userType\": \"USER_NAME\",\n      \"entityId\": \"nulla aliqua\",\n      \"userOrigin\": \"el\",\n      \"message\": \"consectetur est esse fugiat\",\n      \"patch\": {}\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Gets the specified entry of the audit log | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auditlogs/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auditlogs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "enim",
									"description": "(Required) The ID of the required log entry."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "enim",
											"description": "(Required) The ID of the required log entry."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"MANUAL_TAGGING_SERVICE\",\n  \"environmentId\": \"sit nulla officia\",\n  \"eventType\": \"LOGOUT\",\n  \"logId\": \"\",\n  \"success\": false,\n  \"timestamp\": -52559472,\n  \"user\": \"eiusmod reprehenderit\",\n  \"userType\": \"USER_NAME\",\n  \"entityId\": \"fugiat Ut sunt\",\n  \"userOrigin\": \"nisi aliqua sed et\",\n  \"message\": \"pariatur laboris nostrud enim\",\n  \"patch\": {}\n}"
						},
						{
							"name": "Failed. Invalid ID format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "enim",
											"description": "(Required) The ID of the required log entry."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "enim",
											"description": "(Required) The ID of the required log entry."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "security Problems",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "remediation Items",
							"item": [
								{
									"name": "Gets the remediation items for a security problem. | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/remediationItems?remediationItemSelector=nostrud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"remediationItems"
											],
											"query": [
												{
													"key": "remediationItemSelector",
													"value": "nostrud",
													"description": "Defines the scope of the query. Only remediable entities matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Vulnerability State: `vulnerabilityState(\"value\")`. Find the possible values in the description of the **vulnerabilityState** field of the response. If not set, all entities are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Entity name contains: `entityNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching (**all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the required security problem."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/securityProblems/:id/remediationItems?remediationItemSelector=nostrud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"securityProblems",
														":id",
														"remediationItems"
													],
													"query": [
														{
															"key": "remediationItemSelector",
															"value": "nostrud"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "nostrud",
															"description": "(Required) The ID of the required security problem."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"remediationItems\": [\n    {\n      \"id\": \"minim Duis dolor\",\n      \"entityIds\": [\n        \"voluptate Duis\",\n        \"nisi eiusmod magna dol\"\n      ],\n      \"name\": \"id dolor reprehenderit adipisicing\",\n      \"firstAffectedTimestamp\": -53007238,\n      \"assessment\": {\n        \"exposure\": \"NOT_AVAILABLE\",\n        \"dataAssets\": \"NOT_DETECTED\",\n        \"vulnerableFunctionUsage\": \"NOT_IN_USE\"\n      },\n      \"resolvedTimestamp\": 86544629,\n      \"vulnerabilityState\": \"VULNERABLE\",\n      \"muteState\": {\n        \"muted\": true,\n        \"user\": \"et non\",\n        \"lastUpdatedTimestamp\": -67944625,\n        \"reason\": \"OTHER\",\n        \"comment\": \"Duis sint ullamco\"\n      },\n      \"vulnerableComponents\": [\n        {\n          \"id\": \"laborum officia do quis Excepteur\",\n          \"displayName\": \"elit in\",\n          \"fileName\": \"consequat amet elit id\",\n          \"numberOfAffectedEntities\": 3430843,\n          \"affectedEntities\": [\n            \"fugiat Lorem\",\n            \"deserunt quis aliqua ut\"\n          ]\n        },\n        {\n          \"id\": \"irure sit sint\",\n          \"displayName\": \"quis deserunt ex sint\",\n          \"fileName\": \"enim aliqui\",\n          \"numberOfAffectedEntities\": 4059121,\n          \"affectedEntities\": [\n            \"amet nulla\",\n            \"do minim exercitation\"\n          ]\n        }\n      ],\n      \"remediationProgress\": {\n        \"affectedEntities\": [\n          \"laboris Excepteur\",\n          \"culpa qui id Excepteur elit\"\n        ],\n        \"unaffectedEntities\": [\n          \"anim et\",\n          \"tempor dolore adipisicing esse\"\n        ]\n      }\n    },\n    {\n      \"id\": \"do exercitation adipisicing\",\n      \"entityIds\": [\n        \"eiusm\",\n        \"ut enim ullamco velit\"\n      ],\n      \"name\": \"magna mollit\",\n      \"firstAffectedTimestamp\": 77950984,\n      \"assessment\": {\n        \"exposure\": \"NOT_AVAILABLE\",\n        \"dataAssets\": \"NOT_DETECTED\",\n        \"vulnerableFunctionUsage\": \"IN_USE\"\n      },\n      \"resolvedTimestamp\": -93454388,\n      \"vulnerabilityState\": \"VULNERABLE\",\n      \"muteState\": {\n        \"muted\": false,\n        \"user\": \"pariatur non\",\n        \"lastUpdatedTimestamp\": 69470812,\n        \"reason\": \"CONFIGURATION_NOT_AFFECTED\",\n        \"comment\": \"a\"\n      },\n      \"vulnerableComponents\": [\n        {\n          \"id\": \"labo\",\n          \"displayName\": \"Ut\",\n          \"fileName\": \"quis\",\n          \"numberOfAffectedEntities\": -59969667,\n          \"affectedEntities\": [\n            \"ad\",\n            \"occaecat tempor in\"\n          ]\n        },\n        {\n          \"id\": \"qui mollit dolor\",\n          \"displayName\": \"et fugiat officia iru\",\n          \"fileName\": \"ut id quis laboris anim\",\n          \"numberOfAffectedEntities\": 38378071,\n          \"affectedEntities\": [\n            \"nisi minim tempor\",\n            \"elit sed sint\"\n          ]\n        }\n      ],\n      \"remediationProgress\": {\n        \"affectedEntities\": [\n          \"ut consectetur\",\n          \"cillum minim pariatur aliquip\"\n        ],\n        \"unaffectedEntities\": [\n          \"reprehenderit in non\",\n          \"Duis labore ullamco in\"\n        ]\n      }\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Sets the mute state of a remediation item of a security problem. | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"Lorem proident ipsum amet\",\n  \"muted\": true,\n  \"reason\": \"INITIAL_STATE\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/remediationItems/:itemId/muteState",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"remediationItems",
												":itemId",
												"muteState"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the required security problem."
												},
												{
													"key": "itemId",
													"value": "nostrud",
													"description": "(Required) The id of the remediation item."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The requested mute state has been applied to the remediation item.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"Lorem proident ipsum amet\",\n  \"muted\": true,\n  \"reason\": \"INITIAL_STATE\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/securityProblems/:id/remediationItems/:itemId/muteState",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"securityProblems",
														":id",
														"remediationItems",
														":itemId",
														"muteState"
													],
													"variable": [
														{
															"key": "id",
															"value": "nostrud",
															"description": "(Required) The ID of the required security problem."
														},
														{
															"key": "itemId",
															"value": "nostrud",
															"description": "(Required) The id of the remediation item."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not executed. The remediation item was previously put into the requested mute state by the same user with the same reason and comment.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"comment\": \"Lorem proident ipsum amet\",\n  \"muted\": true,\n  \"reason\": \"INITIAL_STATE\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/securityProblems/:id/remediationItems/:itemId/muteState",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"securityProblems",
														":id",
														"remediationItems",
														":itemId",
														"muteState"
													],
													"variable": [
														{
															"key": "id",
															"value": "nostrud",
															"description": "(Required) The ID of the required security problem."
														},
														{
															"key": "itemId",
															"value": "nostrud",
															"description": "(Required) The id of the remediation item."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Gets the specified security problem | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/securityProblems/:id?fields=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"securityProblems",
										":id"
									],
									"query": [
										{
											"key": "fields",
											"value": "nostrud",
											"description": "A list of additional security problem properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n* `description`: The description of the vulnerability.\n* `events`: A list of events of the security problem.\n* `vulnerableComponents`: A list of vulnerable components of the security problem. \n* `affectedEntities`: A list of affected entities of the security problem. \n* `exposedEntities`: A list of exposed entities of the security problem. \n* `reachableDataAssets`: A list of data assets reachable by affected entities of the security problem. \n* `relatedEntities`: A list of related entities of the security problem. \n* `relatedContainerImages`: A list of related container images of the security problem. \n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).\n"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "nostrud",
											"description": "(Required) The ID of the required security problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id?fields=nostrud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id"
											],
											"query": [
												{
													"key": "fields",
													"value": "nostrud"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the required security problem."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"securityProblemId\": \"amet elit proident\",\n  \"displayId\": \"laborum ipsum culpa eu\",\n  \"status\": \"OPEN\",\n  \"muted\": false,\n  \"externalVulnerabilityId\": \"nisi\",\n  \"vulnerabilityType\": \"RUNTIME\",\n  \"title\": \"officia\",\n  \"packageName\": \"sit est ullamco in incid\",\n  \"url\": \"Duis laboris inci\",\n  \"description\": \"pariatur dolor\",\n  \"technology\": \"JAVA\",\n  \"firstSeenTimestamp\": -13059167,\n  \"lastUpdatedTimestamp\": 22054925,\n  \"riskAssessment\": {\n    \"riskLevel\": \"MEDIUM\",\n    \"riskScore\": 14337001.914198354,\n    \"riskVector\": \"in do ipsum labore\",\n    \"baseRiskLevel\": \"CRITICAL\",\n    \"baseRiskScore\": 55469774.5901131,\n    \"baseRiskVector\": \"do deserunt id nulla\",\n    \"exposure\": \"PUBLIC_NETWORK\",\n    \"dataAssets\": \"NOT_DETECTED\",\n    \"publicExploit\": \"AVAILABLE\"\n  },\n  \"managementZones\": [\n    {\n      \"name\": \"minim magna ex\",\n      \"id\": \"minim sed commodo\"\n    },\n    {\n      \"name\": \"amet sit\",\n      \"id\": \"consectetur esse\"\n    }\n  ],\n  \"cveIds\": [\n    \"in aute elit sed\",\n    \"Lorem ullamco ipsum\"\n  ],\n  \"events\": [\n    {\n      \"timestamp\": -54400241,\n      \"reason\": \"SECURITY_PROBLEM_CREATED\",\n      \"riskAssessmentSnapshot\": {\n        \"numberOfAffectedEntities\": -28872539,\n        \"numberOfReachableDataAssets\": -89489770,\n        \"publicExploit\": \"AVAILABLE\",\n        \"exposure\": \"NOT_AVAILABLE\"\n      },\n      \"muteState\": {\n        \"user\": \"magna cillum\",\n        \"reason\": \"FALSE_POSITIVE\",\n        \"comment\": \"esse ex sunt irure\"\n      }\n    },\n    {\n      \"timestamp\": -43606961,\n      \"reason\": \"SECURITY_PROBLEM_CREATED\",\n      \"riskAssessmentSnapshot\": {\n        \"numberOfAffectedEntities\": -74572624,\n        \"numberOfReachableDataAssets\": -61159296,\n        \"publicExploit\": \"AVAILABLE\",\n        \"exposure\": \"PUBLIC_NETWORK\"\n      },\n      \"muteState\": {\n        \"user\": \"ea mollit in mi\",\n        \"reason\": \"AFFECTED\",\n        \"comment\": \"voluptate consect\"\n      }\n    }\n  ],\n  \"vulnerableComponents\": [\n    {\n      \"id\": \"deserunt non irure\",\n      \"displayName\": \"incididunt elit\",\n      \"fileName\": \"eiusmod et\",\n      \"numberOfAffectedEntities\": 26962083,\n      \"affectedEntities\": [\n        \"labore cillum culpa \",\n        \"in adipisicing aliqua commodo\"\n      ]\n    },\n    {\n      \"id\": \"id ut\",\n      \"displayName\": \"ad occaecat esse nisi\",\n      \"fileName\": \"enim adipisicing Excepteur magna\",\n      \"numberOfAffectedEntities\": -25158438,\n      \"affectedEntities\": [\n        \"adipisicing\",\n        \"dolore id\"\n      ]\n    }\n  ],\n  \"affectedEntities\": [\n    \"esse magna\",\n    \"elit proident occaecat\"\n  ],\n  \"exposedEntities\": [\n    \"officia\",\n    \"dolore qui anim aliqua\"\n  ],\n  \"reachableDataAssets\": [\n    \"est incididunt \",\n    \"id anim\"\n  ],\n  \"relatedEntities\": {\n    \"applications\": [\n      {\n        \"id\": \"fugiat\",\n        \"numberOfAffectedEntities\": -60013932,\n        \"affectedEntities\": [\n          \"Ut id elit esse\",\n          \"velit\"\n        ]\n      },\n      {\n        \"id\": \"deserunt et adipisicing Ut sunt\",\n        \"numberOfAffectedEntities\": -70446573,\n        \"affectedEntities\": [\n          \"ut quis do\",\n          \"ut do enim\"\n        ]\n      }\n    ],\n    \"services\": [\n      {\n        \"id\": \"anim amet adipisicing enim eu\",\n        \"numberOfAffectedEntities\": 68089729,\n        \"affectedEntities\": [\n          \"occaecat dolor d\",\n          \"nostrud ut\"\n        ],\n        \"exposure\": \"NOT_DETECTED\"\n      },\n      {\n        \"id\": \"ipsum anim nulla\",\n        \"numberOfAffectedEntities\": -17757767,\n        \"affectedEntities\": [\n          \"labore ut voluptate\",\n          \"laborum eiusmod dolore Ut\"\n        ],\n        \"exposure\": \"NOT_DETECTED\"\n      }\n    ],\n    \"hosts\": [\n      {\n        \"id\": \"consectetur cillum\",\n        \"numberOfAffectedEntities\": 13770038,\n        \"affectedEntities\": [\n          \"est eiusmod\",\n          \"ullamco sit\"\n        ]\n      },\n      {\n        \"id\": \"exercitation aliquip ullamco dolor\",\n        \"numberOfAffectedEntities\": 23592481,\n        \"affectedEntities\": [\n          \"in sunt fugiat\",\n          \"do veniam irure mollit\"\n        ]\n      }\n    ],\n    \"databases\": [\n      \"magna eu minim ea in\",\n      \"do labore eiusmod\"\n    ],\n    \"kubernetesWorkloads\": [\n      {\n        \"id\": \"cupidatat irure pariatur\",\n        \"numberOfAffectedEntities\": 21547261,\n        \"affectedEntities\": [\n          \"Lorem id\",\n          \"non fugiat ut nisi\"\n        ]\n      },\n      {\n        \"id\": \"eiusmod\",\n        \"numberOfAffectedEntities\": -61418532,\n        \"affectedEntities\": [\n          \"mollit ea\",\n          \"consectetur non quis\"\n        ]\n      }\n    ],\n    \"kubernetesClusters\": [\n      {\n        \"id\": \"dolore eu velit et\",\n        \"numberOfAffectedEntities\": -29038071,\n        \"affectedEntities\": [\n          \"laboris commodo amet\",\n          \"labore fu\"\n        ]\n      },\n      {\n        \"id\": \"consectetur\",\n        \"numberOfAffectedEntities\": -56015524,\n        \"affectedEntities\": [\n          \"adipisicing anim velit\",\n          \"occaecat eiusmod sit Duis esse\"\n        ]\n      }\n    ]\n  },\n  \"relatedContainerImages\": [\n    {\n      \"containerImages\": [\n        {\n          \"imageId\": \"occaecat reprehenderit aliquip eu in\",\n          \"imageName\": \"sed sit\",\n          \"numberOfAffectedEntities\": -90066070,\n          \"affectedEntities\": [\n            \"quis\",\n            \"et enim commodo\"\n          ]\n        },\n        {\n          \"imageId\": \"ad dolore consequat\",\n          \"imageName\": \"nostrud enim sit quis\",\n          \"numberOfAffectedEntities\": -46249458,\n          \"affectedEntities\": [\n            \"incididunt exercitation velit et\",\n            \"commodo ea culpa sit dolor\"\n          ]\n        }\n      ]\n    },\n    {\n      \"containerImages\": [\n        {\n          \"imageId\": \"consequat exercitation\",\n          \"imageName\": \"nulla magna eu\",\n          \"numberOfAffectedEntities\": 22901701,\n          \"affectedEntities\": [\n            \"Duis id ea\",\n            \"veniam fugiat commodo\"\n          ]\n        },\n        {\n          \"imageId\": \"Dui\",\n          \"imageName\": \"dolor anim aute sed\",\n          \"numberOfAffectedEntities\": -63597883,\n          \"affectedEntities\": [\n            \"ipsum\",\n            \"ipsum exercitation in\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"muteStateChangeInProgress\": true\n}"
								}
							]
						},
						{
							"name": "Mutes the specified security problem. | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"esse\",\n  \"reason\": \"FALSE_POSITIVE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/securityProblems/:id/mute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"securityProblems",
										":id",
										"mute"
									],
									"variable": [
										{
											"key": "id",
											"value": "nostrud",
											"description": "(Required) The ID of the required security problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The security problem has been muted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"esse\",\n  \"reason\": \"FALSE_POSITIVE\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/mute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"mute"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the required security problem."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not executed. The security problem is already muted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"esse\",\n  \"reason\": \"FALSE_POSITIVE\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/mute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"mute"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the required security problem."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Un-mutes the specified security problem. | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"aute ea id culpa\",\n  \"reason\": \"AFFECTED\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/securityProblems/:id/unmute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"securityProblems",
										":id",
										"unmute"
									],
									"variable": [
										{
											"key": "id",
											"value": "nostrud",
											"description": "(Required) The ID of the required security problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The security problem has been un-muted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"aute ea id culpa\",\n  \"reason\": \"AFFECTED\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/unmute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"unmute"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the required security problem."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not executed. The security problem is already un-muted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"aute ea id culpa\",\n  \"reason\": \"AFFECTED\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/unmute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"unmute"
											],
											"variable": [
												{
													"key": "id",
													"value": "nostrud",
													"description": "(Required) The ID of the required security problem."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all security problems | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/securityProblems?nextPageKey=nostrud&pageSize=88698957&securityProblemSelector=nostrud&sort=nostrud&fields=nostrud&from=nostrud&to=nostrud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"securityProblems"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "nostrud",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "88698957",
									"description": "The amount of security problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
								},
								{
									"key": "securityProblemSelector",
									"value": "nostrud",
									"description": "Defines the scope of the query. Only security problems matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Status: `status(\"value\")`. Find the possible values in the description of the **status** field of the response. If not set, all security problems are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Risk level: `riskLevel(\"value\")`. The Davis Risk Level. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum risk score: `minRiskScore(\"5.5\")`. The Davis minimum Risk Score. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum risk score: `maxRiskScore(\"5.5\")`. The Davis maximum Risk Score. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* Base risk level: `baseRiskLevel(\"value\")`. The Base Risk Level from the CVSS. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum base risk score: `minBaseRiskScore(\"5.5\")`. The Base minimum Risk Score from the CVSS. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum base risk score: `maxBaseRiskScore(\"5.5\")`. The Base maximum Risk Score from the CVSS. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* External vulnerability ID contains: `externalVulnerabilityIdContains(\"id-1\")`. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* External vulnerability ID: `externalVulnerabilityId(\"id-1\",\"id-2\")`. Case insensitive `EQUALS` operator is used.\n* CVE ID: `cveId(\"id\")`.\n* Risk assessment `riskAssessment(\"value-1\",\"value-2\")` Possible values are `EXPOSED`, `SENSITIVE`, and `EXPLOIT`.\n* Related host ID: `relatedHostIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related host name: `relatedHostNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related host name contains: `relatedHostNameContains(\"value-1\")`. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* Related Kubernetes cluster ID: `relatedKubernetesClusterIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes cluster name: `relatedKubernetesClusterNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes cluster name contains: `relatedKubernetesClusterNameContains(\"value-1\")`. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* Related Kubernetes workload ID: `relatedKubernetesWorkloadIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes workload name: `relatedKubernetesWorkloadNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes workload name contains: `relatedKubernetesWorkloadNameContains(\"value-1\")`. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* Management zone ID: `managementZoneIds(\"mzId-1\",\"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\",\"name-2\")`. Values are case-sensitive.\n* Affected process group ID: `affectedPgIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Affected process group name: `affectedPgNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Affected process group name contains: `affectedPgNameContains(\"name-1\")`. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* Vulnerable component ID: `vulnerableComponentIds(\"componentId-1\", \"componentId-2\")`. Specify component IDs here.\n* Vulnerable component name: `vulnerableComponentNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Vulnerable component name contains: `vulnerableComponentNameContains(\"name-1\")`. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* Host tags: `hostTags(\"hostTag-1\")`. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* Process group tags: `pgTags(\"pgTag-1\")`. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* Process group instance tags: `pgiTags(\"pgiTag-1\")`. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* Tags: `tags(\"tag-1\")`. The `CONTAINS` operator is used. This selector picks hosts, process groups, and process group instances at the same time. A maximum of 48 characters are allowed.\n* Display ID: `displayIds(\"S-1234\",\"S-5678\")`. The `EQUALS` operator is used.\n* Technology: `technology(\"technology-1\",\"technology-2\")`. Find the possible values in the description of the **technology** field of the response. The `EQUALS` operator is used.\n\nRisk score and risk category are mutually exclusive (cannot be used at the same time).\n\nTo set several criteria, separate them with a comma (`,`). Only results matching (**all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
								},
								{
									"key": "sort",
									"value": "nostrud",
									"description": "Specifies a field for sorting the security problem list.\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n* `status`: The security problem status (`+` open first or `-` resolved first) \n* `muted`: The security problem mute state (`+` unmuted first or `-` muted first) \n* `technology`: The security problem technology \n* `firstSeenTimestamp`: The timestamp of the first occurrence of the security problem (`+` new problems first or `-` old problems first) \n* `securityProblemId`: The auto-generated ID of the security problem (`+` lower number first or `-` higher number first) \n* `externalVulnerabilityId`: The ID of the external vulnerability (`+` lower number first or `-` higher number first) \n* `displayId`: The display ID (`+` lower number first or `-` higher number first) \n* `riskAssessment.riskScore`: The Davis security score (`+` lower score first or `-` higher score first) \n* `riskAssessment.riskLevel`: The Davis security level (`+` lower level first or `-` higher level first) \n* `riskAssessment.exposure`: Whether the problem is exposed to the internet \n* `riskAssessment.dataAssets`: Whether data assets are affected \n\nIf no prefix is set, `+` is used."
								},
								{
									"key": "fields",
									"value": "nostrud",
									"description": "A list of additional security problem properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).\n"
								},
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`)."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/securityProblems?nextPageKey=nostrud&pageSize=88698957&securityProblemSelector=nostrud&sort=nostrud&fields=nostrud&from=nostrud&to=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"securityProblems"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										},
										{
											"key": "securityProblemSelector",
											"value": "nostrud"
										},
										{
											"key": "sort",
											"value": "nostrud"
										},
										{
											"key": "fields",
											"value": "nostrud"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": 83607963,\n  \"pageSize\": 38715747,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"securityProblems\": [\n    {\n      \"securityProblemId\": \"sed incididunt dolore aliquip\",\n      \"displayId\": \"fugiat sint ex\",\n      \"status\": \"RESOLVED\",\n      \"muted\": true,\n      \"externalVulnerabilityId\": \"commodo nisi\",\n      \"vulnerabilityType\": \"RUNTIME\",\n      \"title\": \"Excepteur officia la\",\n      \"packageName\": \"exercitation ipsum veniam proident sit\",\n      \"url\": \"do reprehenderit nostrud\",\n      \"technology\": \"PHP\",\n      \"firstSeenTimestamp\": 90949866,\n      \"lastUpdatedTimestamp\": -3427791,\n      \"riskAssessment\": {\n        \"riskLevel\": \"NONE\",\n        \"riskScore\": 46497275.79984671,\n        \"riskVector\": \"magna labore ea officia\",\n        \"baseRiskLevel\": \"NONE\",\n        \"baseRiskScore\": 60728789.93516281,\n        \"baseRiskVector\": \"ut commodo\",\n        \"exposure\": \"NOT_AVAILABLE\",\n        \"dataAssets\": \"NOT_AVAILABLE\",\n        \"publicExploit\": \"NOT_AVAILABLE\"\n      },\n      \"managementZones\": [\n        {\n          \"name\": \"dolor ut dolor\",\n          \"id\": \"minim dolor nostrud velit in\"\n        },\n        {\n          \"name\": \"nulla anim Duis sit veniam\",\n          \"id\": \"ex\"\n        }\n      ],\n      \"cveIds\": [\n        \"consectetur esse sed et sint\",\n        \"aliquip fugiat consequat ex\"\n      ]\n    },\n    {\n      \"securityProblemId\": \"ea\",\n      \"displayId\": \"consectetur tempor\",\n      \"status\": \"OPEN\",\n      \"muted\": false,\n      \"externalVulnerabilityId\": \"in nisi\",\n      \"vulnerabilityType\": \"RUNTIME\",\n      \"title\": \"ut non ut eiusmod\",\n      \"packageName\": \"culpa magna\",\n      \"url\": \"quis eu\",\n      \"technology\": \"PHP\",\n      \"firstSeenTimestamp\": -26337445,\n      \"lastUpdatedTimestamp\": -20539418,\n      \"riskAssessment\": {\n        \"riskLevel\": \"CRITICAL\",\n        \"riskScore\": 30770775.756408945,\n        \"riskVector\": \"velit Ut Duis consequat\",\n        \"baseRiskLevel\": \"LOW\",\n        \"baseRiskScore\": -99096490.27214131,\n        \"baseRiskVector\": \"ex Ut commodo\",\n        \"exposure\": \"NOT_AVAILABLE\",\n        \"dataAssets\": \"REACHABLE\",\n        \"publicExploit\": \"NOT_AVAILABLE\"\n      },\n      \"managementZones\": [\n        {\n          \"name\": \"non pariatur commodo\",\n          \"id\": \"in Lorem\"\n        },\n        {\n          \"name\": \"tempor laborum\",\n          \"id\": \"ea\"\n        }\n      ],\n      \"cveIds\": [\n        \"enim ut officia\",\n        \"esse incididunt sunt et\"\n      ]\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "extensions",
			"item": [
				{
					"name": "{extension Name}",
					"item": [
						{
							"name": "environment Configuration",
							"item": [
								{
									"name": "Gets the active environment configuration version of the specified extension 2.0",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "nostrud",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"version\": \"1.2.3\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								},
								{
									"name": "Updates the active environment configuration version of the extension 2.0",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\": \"1.2.3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "nostrud",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"version\": \"1.2.3\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"version\": \"1.2.3\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"version\": \"1.2.3\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"version\": \"1.2.3\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								},
								{
									"name": "Activates the environment configuration from the specified version of the extension 2.0",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\": \"1.2.3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "nostrud",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"version\": \"1.2.3\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"version\": \"1.2.3\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"version\": \"1.2.3\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"version\": \"1.2.3\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								},
								{
									"name": "Deactivates the environment configuration of the specified extension 2.0",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "nostrud",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration deactivated.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"version\": \"1.2.3\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								},
								{
									"name": "List of the latest extension environment configuration events",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration/events?from=nostrud&to=nostrud&content=nostrud&status=ERROR",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration",
												"events"
											],
											"query": [
												{
													"key": "from",
													"value": "nostrud",
													"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
												},
												{
													"key": "to",
													"value": "nostrud",
													"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
												},
												{
													"key": "content",
													"value": "nostrud",
													"description": "Content of the event"
												},
												{
													"key": "status",
													"value": "ERROR",
													"description": "Status of the event"
												}
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "nostrud",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "List of the latest extension environment configuration events",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration/events?from=nostrud&to=nostrud&content=nostrud&status=ERROR",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration",
														"events"
													],
													"query": [
														{
															"key": "from",
															"value": "nostrud"
														},
														{
															"key": "to",
															"value": "nostrud"
														},
														{
															"key": "content",
															"value": "nostrud"
														},
														{
															"key": "status",
															"value": "ERROR"
														}
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"extensionEvents\": [\n    {\n      \"timestamp\": \"occaecat proident\",\n      \"severity\": \"cupidatat in dolor anim dolore\",\n      \"content\": \"cupidatat dolore Excepteur amet cillum\",\n      \"dt.entity.host\": \"Excepteur dolor cillum aliquip\",\n      \"dt.active_gate.id\": \"mollit ut minim fugiat\",\n      \"dt.extension.ds\": \"veniam ad esse dolor\",\n      \"status\": \"NONE\"\n    },\n    {\n      \"timestamp\": \"sit nostrud\",\n      \"severity\": \"in labore volup\",\n      \"content\": \"cillum ea\",\n      \"dt.entity.host\": \"tempor minim ut\",\n      \"dt.active_gate.id\": \"a\",\n      \"dt.extension.ds\": \"ex\",\n      \"status\": \"ERROR\"\n    }\n  ]\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration/events?from=nostrud&to=nostrud&content=nostrud&status=ERROR",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration",
														"events"
													],
													"query": [
														{
															"key": "from",
															"value": "nostrud"
														},
														{
															"key": "to",
															"value": "nostrud"
														},
														{
															"key": "content",
															"value": "nostrud"
														},
														{
															"key": "status",
															"value": "ERROR"
														}
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "monitoring Configurations",
							"item": [
								{
									"name": "{configuration Id}",
									"item": [
										{
											"name": "Gets the details of the specified monitoring configuration",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "nostrud",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName",
																	"value": "nostrud",
																	"description": "(Required) The name of the requested extension 2.0."
																},
																{
																	"key": "configurationId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the requested monitoring configuration."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"objectId\": \"in esse\",\n  \"scope\": \"mollit in et proident\",\n  \"value\": \"quis in nostrud\"\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName",
																	"value": "nostrud",
																	"description": "(Required) The name of the requested extension 2.0."
																},
																{
																	"key": "configurationId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the requested monitoring configuration."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
												}
											]
										},
										{
											"name": "Updates the specified monitoring configuration",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": {}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "nostrud",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": {}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName",
																	"value": "nostrud",
																	"description": "(Required) The name of the requested extension 2.0."
																},
																{
																	"key": "configurationId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the requested monitoring configuration."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -84456873\n}"
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": {}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName",
																	"value": "nostrud",
																	"description": "(Required) The name of the requested extension 2.0."
																},
																{
																	"key": "configurationId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the requested monitoring configuration."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": {}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName",
																	"value": "nostrud",
																	"description": "(Required) The name of the requested extension 2.0."
																},
																{
																	"key": "configurationId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the requested monitoring configuration."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified monitoring configuration",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "nostrud",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName",
																	"value": "nostrud",
																	"description": "(Required) The name of the requested extension 2.0."
																},
																{
																	"key": "configurationId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the requested monitoring configuration."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName",
																	"value": "nostrud",
																	"description": "(Required) The name of the requested extension 2.0."
																},
																{
																	"key": "configurationId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the requested monitoring configuration."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName",
																	"value": "nostrud",
																	"description": "(Required) The name of the requested extension 2.0."
																},
																{
																	"key": "configurationId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the requested monitoring configuration."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
												}
											]
										},
										{
											"name": "Gets the list of the events linked to specific monitoring configuration",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/events?from=nostrud&to=nostrud&dt.entity.host=nostrud&dt.active_gate.id=nostrud&dt.extension.ds=nostrud&content=nostrud&status=ERROR",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId",
														"events"
													],
													"query": [
														{
															"key": "from",
															"value": "nostrud",
															"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
														},
														{
															"key": "to",
															"value": "nostrud",
															"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
														},
														{
															"key": "dt.entity.host",
															"value": "nostrud",
															"description": "Host that uses this monitoring configuration.\n\nExample: `HOST-ABCDEF0123456789`"
														},
														{
															"key": "dt.active_gate.id",
															"value": "nostrud",
															"description": "Hexadecimal ID of Active Gate that uses this monitoring configuration.\n\nExample: `0x1a2b3c4d`"
														},
														{
															"key": "dt.extension.ds",
															"value": "nostrud",
															"description": "Data source that uses this monitoring configuration.\n\nExample: `snmp`"
														},
														{
															"key": "content",
															"value": "nostrud",
															"description": "Content of the event"
														},
														{
															"key": "status",
															"value": "ERROR",
															"description": "Status of the event"
														}
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "nostrud",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/events?from=nostrud&to=nostrud&dt.entity.host=nostrud&dt.active_gate.id=nostrud&dt.extension.ds=nostrud&content=nostrud&status=ERROR",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId",
																"events"
															],
															"query": [
																{
																	"key": "from",
																	"value": "nostrud"
																},
																{
																	"key": "to",
																	"value": "nostrud"
																},
																{
																	"key": "dt.entity.host",
																	"value": "nostrud"
																},
																{
																	"key": "dt.active_gate.id",
																	"value": "nostrud"
																},
																{
																	"key": "dt.extension.ds",
																	"value": "nostrud"
																},
																{
																	"key": "content",
																	"value": "nostrud"
																},
																{
																	"key": "status",
																	"value": "ERROR"
																}
															],
															"variable": [
																{
																	"key": "extensionName",
																	"value": "nostrud",
																	"description": "(Required) The name of the requested extension 2.0."
																},
																{
																	"key": "configurationId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the requested monitoring configuration."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"extensionEvents\": [\n    {\n      \"timestamp\": \"in mollit est\",\n      \"severity\": \"ut\",\n      \"content\": \"ex nostrud Excepteur in adipisicing\",\n      \"dt.entity.host\": \"consectetur sunt eiusmod\",\n      \"dt.active_gate.id\": \"in adi\",\n      \"dt.extension.ds\": \"dolor laborum\",\n      \"status\": \"WARN\"\n    },\n    {\n      \"timestamp\": \"amet officia Lorem esse\",\n      \"severity\": \"irure\",\n      \"content\": \"anim reprehenderit Excepteur\",\n      \"dt.entity.host\": \"do id\",\n      \"dt.active_gate.id\": \"est veniam nisi dolore\",\n      \"dt.extension.ds\": \"esse laboris\",\n      \"status\": \"NONE\"\n    }\n  ]\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/events?from=nostrud&to=nostrud&dt.entity.host=nostrud&dt.active_gate.id=nostrud&dt.extension.ds=nostrud&content=nostrud&status=ERROR",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId",
																"events"
															],
															"query": [
																{
																	"key": "from",
																	"value": "nostrud"
																},
																{
																	"key": "to",
																	"value": "nostrud"
																},
																{
																	"key": "dt.entity.host",
																	"value": "nostrud"
																},
																{
																	"key": "dt.active_gate.id",
																	"value": "nostrud"
																},
																{
																	"key": "dt.extension.ds",
																	"value": "nostrud"
																},
																{
																	"key": "content",
																	"value": "nostrud"
																},
																{
																	"key": "status",
																	"value": "ERROR"
																}
															],
															"variable": [
																{
																	"key": "extensionName",
																	"value": "nostrud",
																	"description": "(Required) The name of the requested extension 2.0."
																},
																{
																	"key": "configurationId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the requested monitoring configuration."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
												}
											]
										},
										{
											"name": "Gets the most recent status of the execution of given monitoring configuration",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId",
														"status"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "nostrud",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId",
																"status"
															],
															"variable": [
																{
																	"key": "extensionName",
																	"value": "nostrud",
																	"description": "(Required) The name of the requested extension 2.0."
																},
																{
																	"key": "configurationId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the requested monitoring configuration."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"timestamp\": 63842858,\n  \"status\": \"eiusmod reprehenderit\"\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId",
																"status"
															],
															"variable": [
																{
																	"key": "extensionName",
																	"value": "nostrud",
																	"description": "(Required) The name of the requested extension 2.0."
																},
																{
																	"key": "configurationId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the requested monitoring configuration."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists all the monitoring configurations of the specified extension 2.0",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations?nextPageKey=nostrud&pageSize=88698957&version=nostrud&active=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"monitoringConfigurations"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "nostrud",
													"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
												},
												{
													"key": "pageSize",
													"value": "88698957",
													"description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
												},
												{
													"key": "version",
													"value": "nostrud",
													"description": "Filters the resulting set of configurations by extension 2.0 version."
												},
												{
													"key": "active",
													"value": "true",
													"description": "Filters the resulting set of configurations by the active state."
												}
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "nostrud",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations?nextPageKey=nostrud&pageSize=88698957&version=nostrud&active=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "nostrud"
														},
														{
															"key": "pageSize",
															"value": "88698957"
														},
														{
															"key": "version",
															"value": "nostrud"
														},
														{
															"key": "active",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": -32113424,\n  \"items\": [\n    {\n      \"objectId\": \"aliquip officia Ut labore\",\n      \"scope\": \"dolore ipsum et culpa\",\n      \"value\": \"mollit quis\"\n    },\n    {\n      \"objectId\": \"Ut anim eu\",\n      \"scope\": \"consectetur sed nulla\",\n      \"value\": \"adipisicing officia\"\n    }\n  ],\n  \"pageSize\": 74942538,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations?nextPageKey=nostrud&pageSize=88698957&version=nostrud&active=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "nostrud"
														},
														{
															"key": "pageSize",
															"value": "88698957"
														},
														{
															"key": "version",
															"value": "nostrud"
														},
														{
															"key": "active",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations?nextPageKey=nostrud&pageSize=88698957&version=nostrud&active=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "nostrud"
														},
														{
															"key": "pageSize",
															"value": "88698957"
														},
														{
															"key": "version",
															"value": "nostrud"
														},
														{
															"key": "active",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								},
								{
									"name": "Creates new monitoring configuration for the specified extension 2.0",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": {}\n  },\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": {}\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"monitoringConfigurations"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "nostrud",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": {}\n  },\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": {}\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -61542030\n  },\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -68950929\n  }\n]"
										},
										{
											"name": "Multi-Status, if not all requests resulted in the same status",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": {}\n  },\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": {}\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -61542030\n  },\n  {\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -68950929\n  }\n]"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": {}\n  },\n  {\n    \"scope\": \"HOST-D3A3C5A146830A79\",\n    \"value\": {}\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "{extension Version}",
							"item": [
								{
									"name": "Gets details of the specified version of the extension 2.0",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												":extensionVersion"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "nostrud",
													"description": "(Required) The name of the requested extension 2.0."
												},
												{
													"key": "extensionVersion",
													"value": "0",
													"description": "(Required) The version of the requested extension 2.0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
														"key": "Accept",
														"value": "nostrud"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "extensionVersion",
															"value": "0",
															"description": "(Required) The version of the requested extension 2.0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"extensionName\": \"laboris\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"tempor voluptate sed et in\"\n  },\n  \"dataSources\": [\n    \"velit Lorem\",\n    \"incididunt aliqua consequat in\"\n  ],\n  \"variables\": [\n    \"sunt proident\",\n    \"ut deserunt\"\n  ],\n  \"featureSets\": [\n    \"officia aute ad\",\n    \"mollit voluptate dolor est\"\n  ],\n  \"featureSetsDetails\": {\n    \"velit_02d\": {\n      \"metrics\": [\n        {\n          \"key\": \"reprehenderit ex Duis laborum\"\n        },\n        {\n          \"key\": \"consequat\"\n        }\n      ]\n    },\n    \"velitc\": {\n      \"metrics\": [\n        {\n          \"key\": \"et\"\n        },\n        {\n          \"key\": \"consequat dolore ipsum\"\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"qui\",\n  \"fileHash\": \"eu amet elit\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
														"key": "Accept",
														"value": "nostrud"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "extensionVersion",
															"value": "0",
															"description": "(Required) The version of the requested extension 2.0"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										},
										{
											"name": "Not acceptable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
														"key": "Accept",
														"value": "nostrud"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "extensionVersion",
															"value": "0",
															"description": "(Required) The version of the requested extension 2.0"
														}
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified version of the extension 2.0",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												":extensionVersion"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "nostrud",
													"description": "(Required) The name of the requested extension 2.0."
												},
												{
													"key": "extensionVersion",
													"value": "0",
													"description": "(Required) The version of the requested extension 2.0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The extension 2.0 version has been deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "extensionVersion",
															"value": "0",
															"description": "(Required) The version of the requested extension 2.0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"extensionName\": \"laboris\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"tempor voluptate sed et in\"\n  },\n  \"dataSources\": [\n    \"velit Lorem\",\n    \"incididunt aliqua consequat in\"\n  ],\n  \"variables\": [\n    \"sunt proident\",\n    \"ut deserunt\"\n  ],\n  \"featureSets\": [\n    \"officia aute ad\",\n    \"mollit voluptate dolor est\"\n  ],\n  \"featureSetsDetails\": {\n    \"velit_02d\": {\n      \"metrics\": [\n        {\n          \"key\": \"reprehenderit ex Duis laborum\"\n        },\n        {\n          \"key\": \"consequat\"\n        }\n      ]\n    },\n    \"velitc\": {\n      \"metrics\": [\n        {\n          \"key\": \"et\"\n        },\n        {\n          \"key\": \"consequat dolore ipsum\"\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"qui\",\n  \"fileHash\": \"eu amet elit\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "extensionVersion",
															"value": "0",
															"description": "(Required) The version of the requested extension 2.0"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "extensionVersion",
															"value": "0",
															"description": "(Required) The version of the requested extension 2.0"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								},
								{
									"name": "Gets the configuration schema of the specified version of the extension 2.0",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												":extensionVersion",
												"schema"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "nostrud",
													"description": "(Required) The name of the requested extension 2.0."
												},
												{
													"key": "extensionVersion",
													"value": "0",
													"description": "(Required) The version of the requested extension 2.0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion",
														"schema"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "extensionVersion",
															"value": "0",
															"description": "(Required) The version of the requested extension 2.0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "null"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion",
														"schema"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "nostrud",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "extensionVersion",
															"value": "0",
															"description": "(Required) The version of the requested extension 2.0"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all versions of the extension 2.0",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/:extensionName?nextPageKey=nostrud&pageSize=88698957",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										":extensionName"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud",
											"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
										},
										{
											"key": "pageSize",
											"value": "88698957",
											"description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
										}
									],
									"variable": [
										{
											"key": "extensionName",
											"value": "nostrud",
											"description": "(Required) The name of the requested extension 2.0."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName?nextPageKey=nostrud&pageSize=88698957",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "nostrud"
												},
												{
													"key": "pageSize",
													"value": "88698957"
												}
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "nostrud",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": -19954582,\n  \"extensions\": [\n    {\n      \"extensionName\": \"commodo consequat voluptate aute\",\n      \"version\": \"1.2.3\"\n    },\n    {\n      \"extensionName\": \"voluptate labore dolore\",\n      \"version\": \"1.2.3\"\n    }\n  ],\n  \"pageSize\": 3843567,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName?nextPageKey=nostrud&pageSize=88698957",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "nostrud"
												},
												{
													"key": "pageSize",
													"value": "88698957"
												}
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "nostrud",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "schemas",
					"item": [
						{
							"name": "{schema Version}",
							"item": [
								{
									"name": "Lists all the files available for the specified extension 2.0 schema version",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"schemas",
												":schemaVersion"
											],
											"variable": [
												{
													"key": "schemaVersion",
													"value": "0",
													"description": "(Required) The version of the schema."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
														"key": "Accept",
														"value": "nostrud"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion"
													],
													"variable": [
														{
															"key": "schemaVersion",
															"value": "0",
															"description": "(Required) The version of the schema."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"files\": [\n    \"dolor do in nulla reprehenderit\",\n    \"ea exercitation\"\n  ]\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
														"key": "Accept",
														"value": "nostrud"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion"
													],
													"variable": [
														{
															"key": "schemaVersion",
															"value": "0",
															"description": "(Required) The version of the schema."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										},
										{
											"name": "Not acceptable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
														"key": "Accept",
														"value": "nostrud"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion"
													],
													"variable": [
														{
															"key": "schemaVersion",
															"value": "0",
															"description": "(Required) The version of the schema."
														}
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								},
								{
									"name": "Gets the extension 2.0 schema file in the specified version",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion/:fileName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"schemas",
												":schemaVersion",
												":fileName"
											],
											"variable": [
												{
													"key": "schemaVersion",
													"value": "0",
													"description": "(Required) The version of the schema."
												},
												{
													"key": "fileName",
													"value": "nostrud",
													"description": "(Required) The name of the schema file."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion/:fileName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion",
														":fileName"
													],
													"variable": [
														{
															"key": "schemaVersion",
															"value": "0",
															"description": "(Required) The version of the schema."
														},
														{
															"key": "fileName",
															"value": "nostrud",
															"description": "(Required) The name of the schema file."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion/:fileName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion",
														":fileName"
													],
													"variable": [
														{
															"key": "schemaVersion",
															"value": "0",
															"description": "(Required) The version of the schema."
														},
														{
															"key": "fileName",
															"value": "nostrud",
															"description": "(Required) The name of the schema file."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all the extension 2.0 schemas versions available in your environment",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"versions\": [\n    \"1.2.3\",\n    \"1.2.3\"\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all the extensions 2.0 available in your environment",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/extensions?nextPageKey=nostrud&pageSize=88698957&name=nostrud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "nostrud",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "88698957",
									"description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
								},
								{
									"key": "name",
									"value": "nostrud",
									"description": "Filters the resulting set of extensions 2.0 by name. You can specify a partial name. In that case, the CONTAINS operator is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions?nextPageKey=nostrud&pageSize=88698957&name=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										},
										{
											"key": "name",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": -64998049,\n  \"extensions\": [\n    {\n      \"extensionName\": \"ullamco Excepteur commodo \",\n      \"version\": \"1.2.3\"\n    },\n    {\n      \"extensionName\": \"ea ut\",\n      \"version\": \"1.2.3\"\n    }\n  ],\n  \"pageSize\": 55826587,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						}
					]
				},
				{
					"name": "Uploads or verifies a new extension 2.0",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) Extension 2.0 zip file to upload.",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/extensions?validateOnly=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions"
							],
							"query": [
								{
									"key": "validateOnly",
									"value": "false",
									"description": "Only run validation but do not persist the extension even if validation was successful."
								}
							]
						}
					},
					"response": [
						{
							"name": "The extension is valid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) Extension 2.0 zip file to upload.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"extensionName\": \"laborum consequat do\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"sunt\"\n  },\n  \"dataSources\": [\n    \"sunt ut no\",\n    \"aliquip est reprehenderit ullamco sed\"\n  ],\n  \"variables\": [\n    \"culpa fugiat irure labore do\",\n    \"quis et\"\n  ],\n  \"featureSets\": [\n    \"ullamco\",\n    \"sint culpa\"\n  ],\n  \"featureSetsDetails\": {\n    \"dolor89\": {\n      \"metrics\": [\n        {\n          \"key\": \"ullam\"\n        },\n        {\n          \"key\": \"nu\"\n        }\n      ]\n    },\n    \"magnaa\": {\n      \"metrics\": [\n        {\n          \"key\": \"\"\n        },\n        {\n          \"key\": \"ea dolor \"\n        }\n      ]\n    },\n    \"laborum18\": {\n      \"metrics\": [\n        {\n          \"key\": \"esse\"\n        },\n        {\n          \"key\": \"Excepteur ipsum\"\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"eu adipisicing dese\",\n  \"fileHash\": \"dolor\"\n}"
						},
						{
							"name": "Success. The extension 2.0 has been uploaded.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) Extension 2.0 zip file to upload.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"extensionName\": \"laboris\",\n  \"version\": \"1.2.3\",\n  \"author\": {\n    \"name\": \"tempor voluptate sed et in\"\n  },\n  \"dataSources\": [\n    \"velit Lorem\",\n    \"incididunt aliqua consequat in\"\n  ],\n  \"variables\": [\n    \"sunt proident\",\n    \"ut deserunt\"\n  ],\n  \"featureSets\": [\n    \"officia aute ad\",\n    \"mollit voluptate dolor est\"\n  ],\n  \"featureSetsDetails\": {\n    \"velit_02d\": {\n      \"metrics\": [\n        {\n          \"key\": \"reprehenderit ex Duis laborum\"\n        },\n        {\n          \"key\": \"consequat\"\n        }\n      ]\n    },\n    \"velitc\": {\n      \"metrics\": [\n        {\n          \"key\": \"et\"\n        },\n        {\n          \"key\": \"consequat dolore ipsum\"\n        }\n      ]\n    }\n  },\n  \"minDynatraceVersion\": \"qui\",\n  \"fileHash\": \"eu amet elit\"\n}"
						},
						{
							"name": "Failed. The input file is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) Extension 2.0 zip file to upload.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						},
						{
							"name": "Upload not possible yet, please try again in a few seconds.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) Extension 2.0 zip file to upload.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "problems",
			"item": [
				{
					"name": "{problem Id}",
					"item": [
						{
							"name": "comments",
							"item": [
								{
									"name": "{comment Id}",
									"item": [
										{
											"name": "Gets the specified comment on a problem",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "nostrud",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "nostrud",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the required problem."
																},
																{
																	"key": "commentId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the required comment."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"createdAtTimestamp\": 11520116,\n  \"authorName\": \"irure\",\n  \"context\": \"enim qui\",\n  \"id\": \"aute tempor amet nulla\",\n  \"content\": \"ipsum Lorem ut non\"\n}"
												}
											]
										},
										{
											"name": "Updates the specified comment on a problem",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"message\": \"Excepteur tempor\",\n  \"context\": \"velit sit in nostrud\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "nostrud",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "nostrud",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The comment has been updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"message\": \"Excepteur tempor\",\n  \"context\": \"velit sit in nostrud\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the required problem."
																},
																{
																	"key": "commentId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the required comment."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes the specified comment from a problem",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "nostrud",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "nostrud",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The comment has been deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the required problem."
																},
																{
																	"key": "commentId",
																	"value": "nostrud",
																	"description": "(Required) The ID of the required comment."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Gets all comments on the specified problem",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/comments?nextPageKey=nostrud&pageSize=88698957",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"comments"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "nostrud",
													"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
												},
												{
													"key": "pageSize",
													"value": "88698957",
													"description": "The amount of comments in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 10 is used."
												}
											],
											"variable": [
												{
													"key": "problemId",
													"value": "nostrud",
													"description": "(Required) The ID of the required problem."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments?nextPageKey=nostrud&pageSize=88698957",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "nostrud"
														},
														{
															"key": "pageSize",
															"value": "88698957"
														}
													],
													"variable": [
														{
															"key": "problemId",
															"value": "nostrud",
															"description": "(Required) The ID of the required problem."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"comments\": [\n    {\n      \"createdAtTimestamp\": -99828725,\n      \"authorName\": \"magna v\",\n      \"context\": \"laborum cupidatat elit\",\n      \"id\": \"culpa laborum consequat\",\n      \"content\": \"laborum enim\"\n    },\n    {\n      \"createdAtTimestamp\": -12287319,\n      \"authorName\": \"aute reprehenderit dolore aliquip\",\n      \"context\": \"aliqua Excepteur\",\n      \"id\": \"in sed\",\n      \"content\": \"Excepteur labore qui\"\n    }\n  ],\n  \"totalCount\": 65287114,\n  \"pageSize\": -35706844,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
										}
									]
								},
								{
									"name": "Adds a new comment on the specified problem",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"message\": \"Excepteur tempor\",\n  \"context\": \"velit sit in nostrud\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"comments"
											],
											"variable": [
												{
													"key": "problemId",
													"value": "nostrud",
													"description": "(Required) The ID of the required problem."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The comment has been added.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"message\": \"Excepteur tempor\",\n  \"context\": \"velit sit in nostrud\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "nostrud",
															"description": "(Required) The ID of the required problem."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Gets the properties of the specified problem",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/problems/:problemId?fields=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"problems",
										":problemId"
									],
									"query": [
										{
											"key": "fields",
											"value": "nostrud",
											"description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`)."
										}
									],
									"variable": [
										{
											"key": "problemId",
											"value": "nostrud",
											"description": "(Required) The ID of the required problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId?fields=nostrud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId"
											],
											"query": [
												{
													"key": "fields",
													"value": "nostrud"
												}
											],
											"variable": [
												{
													"key": "problemId",
													"value": "nostrud",
													"description": "(Required) The ID of the required problem."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"affectedEntities\": [\n    {\n      \"entityId\": {\n        \"id\": \"occaecat amet sit\",\n        \"type\": \"mollit commodo elit sed esse\"\n      },\n      \"name\": \"consequat magna dol\"\n    },\n    {\n      \"entityId\": {\n        \"id\": \"irure\",\n        \"type\": \"et \"\n      },\n      \"name\": \"in sunt non\"\n    }\n  ],\n  \"displayId\": \"cupidatat nisi\",\n  \"endTime\": -58744075,\n  \"impactLevel\": \"SERVICES\",\n  \"impactedEntities\": [\n    {\n      \"entityId\": {\n        \"id\": \"irure ipsum occaecat sint\",\n        \"type\": \"adipisicing aliquip culpa\"\n      },\n      \"name\": \"dolor \"\n    },\n    {\n      \"entityId\": {\n        \"id\": \"ut qui Ut elit culpa\",\n        \"type\": \"nulla labore\"\n      },\n      \"name\": \"L\"\n    }\n  ],\n  \"managementZones\": [\n    {\n      \"name\": \"in veniam\",\n      \"id\": \"Ut do sunt sit\"\n    },\n    {\n      \"name\": \"ut Lorem pariatur ad laboris\",\n      \"id\": \"in dolor magna anim id\"\n    }\n  ],\n  \"problemFilters\": [\n    {\n      \"id\": \"mollit enim nostrud non\",\n      \"name\": \"Lorem \"\n    },\n    {\n      \"id\": \"eiusmod exercitation et su\",\n      \"name\": \"Duis dolore ea enim\"\n    }\n  ],\n  \"problemId\": \"magna laborum\",\n  \"severityLevel\": \"PERFORMANCE\",\n  \"startTime\": 60604471,\n  \"status\": \"CLOSED\",\n  \"title\": \"consectetur amet elit dolore minim\",\n  \"entityTags\": [\n    {\n      \"stringRepresentation\": \"consequat exercitation commodo dolore\",\n      \"value\": \"in veniam nulla in\",\n      \"key\": \"nulla ad sed laboris commodo\",\n      \"context\": \"ex\"\n    },\n    {\n      \"stringRepresentation\": \"ipsum cillum in velit\",\n      \"value\": \"irure dolore\",\n      \"key\": \"nostrud magna\",\n      \"context\": \"et Ut minim culpa\"\n    }\n  ],\n  \"evidenceDetails\": {\n    \"details\": [\n      {\n        \"displayName\": \"dolor nostrud ullamco\",\n        \"entity\": {\n          \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"Excepteur occaecat esse\"\n        },\n        \"evidenceType\": \"EVENT\",\n        \"rootCauseRelevant\": true,\n        \"startTime\": -56311010,\n        \"groupingEntity\": {\n          \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"nostrud qui\"\n        }\n      },\n      {\n        \"displayName\": \"qui dolor voluptate Ut in\",\n        \"entity\": {\n          \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"velit id\"\n        },\n        \"evidenceType\": \"EVENT\",\n        \"rootCauseRelevant\": true,\n        \"startTime\": 34612481,\n        \"groupingEntity\": {\n          \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"est minim Excepteur\"\n        }\n      }\n    ],\n    \"totalCount\": -58378781\n  },\n  \"linkedProblemInfo\": {\n    \"displayId\": \"occaecat dolore voluptate velit eiusmod\",\n    \"problemId\": \"nisi elit\"\n  },\n  \"impactAnalysis\": {\n    \"impacts\": [\n      {\n        \"estimatedAffectedUsers\": 28584768,\n        \"impactType\": \"CUSTOM_APPLICATION\",\n        \"impactedEntity\": {\n          \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"anim\"\n        }\n      },\n      {\n        \"estimatedAffectedUsers\": 6232989,\n        \"impactType\": \"MOBILE\",\n        \"impactedEntity\": {\n          \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": \"laboris eu sed culpa commodo\"\n        }\n      }\n    ]\n  },\n  \"recentComments\": {\n    \"comments\": [\n      {\n        \"createdAtTimestamp\": -99658428,\n        \"authorName\": \"eiusmod\",\n        \"context\": \"amet officia\",\n        \"id\": \"officia non in\",\n        \"content\": \"Duis f\"\n      },\n      {\n        \"createdAtTimestamp\": -78444012,\n        \"authorName\": \"dolore in ex exercitation\",\n        \"context\": \"sunt dolore\",\n        \"id\": \"\",\n        \"content\": \"minim est id incididunt\"\n      }\n    ],\n    \"totalCount\": 26950483,\n    \"pageSize\": -25227533,\n    \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n  },\n  \"rootCauseEntity\": {\n    \"entityId\": {\n      \"id\": \"ut\",\n      \"type\": \"sit eu mollit\"\n    },\n    \"name\": \"consect\"\n  }\n}"
								}
							]
						},
						{
							"name": "Closes the specified problem and adds a closing comment on it",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message\": \"pariatur ex\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/problems/:problemId/close",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"problems",
										":problemId",
										"close"
									],
									"variable": [
										{
											"key": "problemId",
											"value": "nostrud",
											"description": "(Required) The ID of the required problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"message\": \"pariatur ex\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"close"
											],
											"variable": [
												{
													"key": "problemId",
													"value": "nostrud",
													"description": "(Required) The ID of the required problem."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"closeTimestamp\": 10217939,\n  \"closing\": true,\n  \"problemId\": \"ea veniam cupidatat\",\n  \"comment\": {\n    \"createdAtTimestamp\": -34031987,\n    \"authorName\": \"labore\",\n    \"context\": \"occaecat cillum \",\n    \"id\": \"cupidatat consectetur commodo magna\",\n    \"content\": \"ea sit\"\n  }\n}"
								},
								{
									"name": "The problem is closed already the request hasn't been executed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"message\": \"pariatur ex\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"close"
											],
											"variable": [
												{
													"key": "problemId",
													"value": "nostrud",
													"description": "(Required) The ID of the required problem."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists problems observed within the specified timeframe",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/problems?fields=nostrud&nextPageKey=nostrud&pageSize=88698957&from=nostrud&to=nostrud&problemSelector=nostrud&entitySelector=nostrud&sort=nostrud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"problems"
							],
							"query": [
								{
									"key": "fields",
									"value": "nostrud",
									"description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).\n\n The field is valid only for the current page of results. You must set it for each page you're requesting."
								},
								{
									"key": "nextPageKey",
									"value": "nostrud",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
								},
								{
									"key": "pageSize",
									"value": "88698957",
									"description": "The amount of problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
								},
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "problemSelector",
									"value": "nostrud",
									"description": "Defines the scope of the query. Only problems matching the specified criteria are included into response. \n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies. All values must be quoted. \n* Status: `status(\"open\")` or `status(\"closed\")`. You can specify only one status. \n* Severity level: `severityLevel(\"level-1\",\"level-2\")`. Find the possible values in the description of the **severityLevel** field of the response.\n* Impact level: `impactLevel(\"level-11\",\"level-2\")` Find the possible values in the description of the **impactLevel** field of the response.\n* Root cause entity: `rootCauseEntity(\"id-1\", \"id-2\")`. \n* Management zone ID: `managementZoneIds(\"mZId-1\", \"mzId-2\")`. \n* Management zone name: `managementZones(\"value-1\",\"value-2\")`. \n* Impacted entities: `impactedEntities(\"id-1\", \"id-2\")`. \n* Affected entities: `affectedEntities(\"id-1\", \"id-2\")`. \n* Type of affected entities: `affectedEntityTypes(\"value-1\",\"value-2\")`. \n* Problem ID: `problemId(\"id-1\", \"id-2\")`. \n* Alerting profile ID: `problemFilterIds(\"id-1\", \"id-2\")`. \n* Alerting profile name (contains, case-insensitive): `problemFilterNames(\"value-1\",\"value-2\")`. \n* Alerting profile name (exact match, case-insensitive): `problemFilterNames.equals(\"value-1\",\"value-2\")`. \n* Entity tags: `entityTags(\"[context]key:value\",\"key:value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value tag`. All tag values are case-sensitive.\n* Display ID of the problem: `displayId(\"id-1\", \"id-2\")`. \n* Under maintenance: `underMaintenance(true|false)`. Shows (true) or hides (false) all problems created during maintenance mode.\n* Text search: `text(\"value\")`. Text search on the following fields: problem title, event titles, displayId and the id of affected and impacted entities. The text search is case insensitive, partial matching and based on a relevance score. Therefore the `relevance` sort option should be used to get the most relevant problems first. The special characters `~` and `\"` need to be escaped using a `~` (e.g. double quote search `text(\"~\"\")`). \n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response. \n\n"
								},
								{
									"key": "entitySelector",
									"value": "nostrud",
									"description": "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\nThe maximum number of entities that may be selected is limited to 10000.\n\n"
								},
								{
									"key": "sort",
									"value": "nostrud",
									"description": "Specifies a set of comma-separated (`,`) fields for sorting in the problem list.\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n * `status`: problem status (`+` open problems first or `-` closed problems first)\n * `startTime`: problem start time (`+` old problems first or `-` new problems first) \n * `relevance`: problem relevance (`+` least relevant problems first or `-` most relevant problems first) - can be used only in combination with text search \n\nIf no prefix is set, `+` is used. \n\nYou can specify several levels of sorting. For example, `+status,-startTime` sorts problems by status, open problems first. Within the status, problems are sorted by start time, oldest first."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/problems?fields=nostrud&nextPageKey=nostrud&pageSize=88698957&from=nostrud&to=nostrud&problemSelector=nostrud&entitySelector=nostrud&sort=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"problems"
									],
									"query": [
										{
											"key": "fields",
											"value": "nostrud"
										},
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "problemSelector",
											"value": "nostrud"
										},
										{
											"key": "entitySelector",
											"value": "nostrud"
										},
										{
											"key": "sort",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"problems\": [\n    {\n      \"affectedEntities\": [\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"ea\"\n        },\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"dolor Lorem in Excepte\"\n        }\n      ],\n      \"displayId\": \"in irure c\",\n      \"endTime\": 57193558,\n      \"impactLevel\": \"INFRASTRUCTURE\",\n      \"impactedEntities\": [\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"dolore dolor\"\n        },\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"anim culpa dolor nulla\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"name\": \"irure nisi consectetur fugiat culpa\",\n          \"id\": \"culpa officia dolor\"\n        },\n        {\n          \"name\": \"fugiat in\",\n          \"id\": \"sint nu\"\n        }\n      ],\n      \"problemFilters\": [\n        {\n          \"id\": \"eiusmod ut\",\n          \"name\": \"nostrud eu\"\n        },\n        {\n          \"id\": \"incididunt dolore dolore in\",\n          \"name\": \"esse cupidatat enim\"\n        }\n      ],\n      \"problemId\": \"ut eu Duis nulla ad\",\n      \"severityLevel\": \"PERFORMANCE\",\n      \"startTime\": -77433258,\n      \"status\": \"CLOSED\",\n      \"title\": \"cupidat\",\n      \"entityTags\": [\n        {\n          \"stringRepresentation\": \"eiusmod\",\n          \"value\": \"veniam quis amet ut\",\n          \"key\": \"sit cupidatat\",\n          \"context\": \"ut dolor consectetur occaecat anim\"\n        },\n        {\n          \"stringRepresentation\": \"cillum id\",\n          \"value\": \"dolor amet\",\n          \"key\": \"reprehenderit id aute\",\n          \"context\": \"fugiat ullamco\"\n        }\n      ],\n      \"evidenceDetails\": {\n        \"details\": [\n          {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"entity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"evidenceType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rootCauseRelevant\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"startTime\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"groupingEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"entity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"evidenceType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rootCauseRelevant\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"startTime\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"groupingEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"totalCount\": -51170132\n      },\n      \"linkedProblemInfo\": {\n        \"displayId\": \"magna nisi\",\n        \"problemId\": \"quis Lorem Ut\"\n      },\n      \"impactAnalysis\": {\n        \"impacts\": [\n          {\n            \"estimatedAffectedUsers\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactedEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"estimatedAffectedUsers\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactedEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"recentComments\": {\n        \"comments\": [\n          {\n            \"createdAtTimestamp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"authorName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"context\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"content\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"createdAtTimestamp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"authorName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"context\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"content\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"totalCount\": 87103836,\n        \"pageSize\": -47222074,\n        \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n      },\n      \"rootCauseEntity\": {\n        \"entityId\": {\n          \"id\": \"proid\",\n          \"type\": \"sint est cillum\"\n        },\n        \"name\": \"culpa ut dolore\"\n      }\n    },\n    {\n      \"affectedEntities\": [\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"fugiat elit exercitation\"\n        },\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"et\"\n        }\n      ],\n      \"displayId\": \"ex tempor incididunt\",\n      \"endTime\": 31956153,\n      \"impactLevel\": \"INFRASTRUCTURE\",\n      \"impactedEntities\": [\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"magna minim non\"\n        },\n        {\n          \"entityId\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"name\": \"ex\"\n        }\n      ],\n      \"managementZones\": [\n        {\n          \"name\": \"ad\",\n          \"id\": \"nulla elit in\"\n        },\n        {\n          \"name\": \"eiusmod esse labore incididunt ad\",\n          \"id\": \"eu sint magna consectetur\"\n        }\n      ],\n      \"problemFilters\": [\n        {\n          \"id\": \"mollit aute pariatur\",\n          \"name\": \"dolore\"\n        },\n        {\n          \"id\": \"minim consectetur\",\n          \"name\": \"ad laboris\"\n        }\n      ],\n      \"problemId\": \"sit exercitation in\",\n      \"severityLevel\": \"PERFORMANCE\",\n      \"startTime\": 45534103,\n      \"status\": \"OPEN\",\n      \"title\": \"irure qui\",\n      \"entityTags\": [\n        {\n          \"stringRepresentation\": \"Duis dolore\",\n          \"value\": \"adipisicing veniam Excepteur deserunt\",\n          \"key\": \"veniam id est l\",\n          \"context\": \"et ea Ut veniam\"\n        },\n        {\n          \"stringRepresentation\": \"sunt esse laborum dolore\",\n          \"value\": \"Lorem Duis Excepteur est exercitation\",\n          \"key\": \"pariatur do\",\n          \"context\": \"irure qui occaecat Ut\"\n        }\n      ],\n      \"evidenceDetails\": {\n        \"details\": [\n          {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"entity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"evidenceType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rootCauseRelevant\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"startTime\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"groupingEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"displayName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"entity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"evidenceType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rootCauseRelevant\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"startTime\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"groupingEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"totalCount\": 90167648\n      },\n      \"linkedProblemInfo\": {\n        \"displayId\": \"aliqua eu\",\n        \"problemId\": \"aute\"\n      },\n      \"impactAnalysis\": {\n        \"impacts\": [\n          {\n            \"estimatedAffectedUsers\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactedEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"estimatedAffectedUsers\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactType\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"impactedEntity\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"recentComments\": {\n        \"comments\": [\n          {\n            \"createdAtTimestamp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"authorName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"context\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"content\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"createdAtTimestamp\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"authorName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"context\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"content\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"totalCount\": -95382823,\n        \"pageSize\": -853446,\n        \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n      },\n      \"rootCauseEntity\": {\n        \"entityId\": {\n          \"id\": \"laborum\",\n          \"type\": \"occaecat eu\"\n        },\n        \"name\": \"consectetur dolore velit\"\n      }\n    }\n  ],\n  \"totalCount\": 38717463,\n  \"pageSize\": -52557358,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"warnings\": [\n    \"nulla et\",\n    \"est\"\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "logs",
			"item": [
				{
					"name": "Pushes log records to Dynatrace | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"content\": \"example log content 1\",\n    \"log.source\": \"/var/log/syslog\",\n    \"log.tag\": [\n      \"tag1\",\n      \"tag2\"\n    ]\n  },\n  {\n    \"content\": \"example log content 2\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/logs/ingest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logs",
								"ingest"
							]
						},
						"description": "Ingested logs are stored in the indexed log storage. \n\nThis endpoint requires an ActiveGate with the **Log Analytics Collector** module enabled."
					},
					"response": [
						{
							"name": "Only a part of input events were ingested due to event size limits or JSON parsing issues.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"content\": \"example log content 1\",\n    \"log.source\": \"/var/log/syslog\",\n    \"log.tag\": [\n      \"tag1\",\n      \"tag2\"\n    ]\n  },\n  {\n    \"content\": \"example log content 2\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"details\": {\n    \"message\": \"aute nostrud in\",\n    \"code\": 17370679\n  }\n}"
						},
						{
							"name": "Success. Response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"content\": \"example log content 1\",\n    \"log.source\": \"/var/log/syslog\",\n    \"log.tag\": [\n      \"tag1\",\n      \"tag2\"\n    ]\n  },\n  {\n    \"content\": \"example log content 2\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"content\": \"example log content 1\",\n    \"log.source\": \"/var/log/syslog\",\n    \"log.tag\": [\n      \"tag1\",\n      \"tag2\"\n    ]\n  },\n  {\n    \"content\": \"example log content 2\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						},
						{
							"name": "Failed. You can't add more logs to the storage, because you are out of [Davis Data Units](https://dt-url.net/dduLog) (DDU). Purchase additional DDUs.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"content\": \"example log content 1\",\n    \"log.source\": \"/var/log/syslog\",\n    \"log.tag\": [\n      \"tag1\",\n      \"tag2\"\n    ]\n  },\n  {\n    \"content\": \"example log content 2\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist. This may happen when no ActiveGate is available with the Log Analytics Collector module enabled.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"content\": \"example log content 1\",\n    \"log.source\": \"/var/log/syslog\",\n    \"log.tag\": [\n      \"tag1\",\n      \"tag2\"\n    ]\n  },\n  {\n    \"content\": \"example log content 2\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				},
				{
					"name": "Gets aggregated log records | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/logs/aggregate?from=nostrud&to=nostrud&query=&timeBuckets=1&maxGroupValues=10&groupBy=aliqua aute Lorem commodo&groupBy=amet dolore",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logs",
								"aggregate"
							],
							"query": [
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "query",
									"value": "",
									"description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f). \n\nThe query has a limit of 20 relations (logical operators between simple expressions (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`) in simple expressions)."
								},
								{
									"key": "timeBuckets",
									"value": "1",
									"description": "The number of time slots in the result. \n\nThe query timeframe is divided equally into the specified number of slots. \n\nThe minimum length of a slot is 1 ms. \n\nIf not set, 1 is used."
								},
								{
									"key": "maxGroupValues",
									"value": "10",
									"description": "The maximum number of values in each group. \n\nYou can get up to 100 values per group. \n\nIf not set, 10 is used."
								},
								{
									"key": "groupBy",
									"value": "aliqua aute Lorem commodo",
									"description": "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values. \n\nUnique log data attributes (high-cardinality attributes) for example, `span_id` or `trace_id` cannot be used for grouping."
								},
								{
									"key": "groupBy",
									"value": "amet dolore",
									"description": "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values. \n\nUnique log data attributes (high-cardinality attributes) for example, `span_id` or `trace_id` cannot be used for grouping."
								}
							]
						},
						"description": "Returns the aggregated number of occurrences of log values divided into time slots. \n\nIt is possible that the timeframe covered by results exceeds the specified timeframe. In that case the request returns fewer time slots than specified in the **timeBuckets** query parameter."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs/aggregate?from=nostrud&to=nostrud&query=&timeBuckets=1&maxGroupValues=10&groupBy=aute nostrud adipisi&groupBy=exercitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"aggregate"
									],
									"query": [
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "query",
											"value": ""
										},
										{
											"key": "timeBuckets",
											"value": "1"
										},
										{
											"key": "maxGroupValues",
											"value": "10"
										},
										{
											"key": "groupBy",
											"value": "aute nostrud adipisi"
										},
										{
											"key": "groupBy",
											"value": "exercitation"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"aggregationResult\": {\n    \"nostrud5\": {\n      \"consectetur_d\": {\n        \"sunt7cb\": 86842827,\n        \"et5a\": 46795784\n      },\n      \"aute6_d\": {\n        \"aliqua_c4\": 31904765\n      },\n      \"dolor_a7\": {\n        \"Excepteur__6\": -95905667\n      },\n      \"Duis_bb5\": {\n        \"aliqua6f_\": -16715880,\n        \"Excepteure8\": 3992817\n      }\n    },\n    \"et_b\": {\n      \"eiusmod_4c\": {\n        \"Ut_\": 41372615\n      }\n    },\n    \"velit_4\": {\n      \"eua\": {\n        \"nisi_b54\": 29467715,\n        \"eiusmod_486\": -63095739,\n        \"tempor7_\": 956458\n      },\n      \"commodo_a\": {\n        \"in__\": -42578805\n      }\n    }\n  }\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs/aggregate?from=nostrud&to=nostrud&query=&timeBuckets=1&maxGroupValues=10&groupBy=aute nostrud adipisi&groupBy=exercitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"aggregate"
									],
									"query": [
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "query",
											"value": ""
										},
										{
											"key": "timeBuckets",
											"value": "1"
										},
										{
											"key": "maxGroupValues",
											"value": "10"
										},
										{
											"key": "groupBy",
											"value": "aute nostrud adipisi"
										},
										{
											"key": "groupBy",
											"value": "exercitation"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				},
				{
					"name": "Reads log records | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/logs/search?from=nostrud&to=nostrud&limit=1000&query=&sort=-timestamp&nextSliceKey=nostrud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logs",
								"search"
							],
							"query": [
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "limit",
									"value": "1000",
									"description": "The desired amount of log records. \n\nThe maximal allowed limit is 1000. \n\nIf not set, 1000 is used."
								},
								{
									"key": "query",
									"value": "",
									"description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f). \n\nThe query has a limit of 20 relations (logical operators between simple expressions (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`) in simple expressions)."
								},
								{
									"key": "sort",
									"value": "-timestamp",
									"description": "Defines the ordering of the log records.\n\nEach field has a sign prefix (+/-) for sorting order. If no sign prefix is set, then the `+` option will be applied. \n\nCurrently, ordering is available only for the timestamp (+timestamp for the oldest records first, or -timestamp for the newest records first). \n\nWhen millisecond resolution provided by the timestamp is not enough, log records are sorted based on the order in which they appear in the log source (remote process writing to REST API endpoint or remote process from which logs are collected)."
								},
								{
									"key": "nextSliceKey",
									"value": "nostrud",
									"description": "The cursor for the next slice of results. You can find it in the **nextSliceKey** field of the previous response. \n\nThe first slice is always returned if you don't specify this parameter. \n\nIf this parameter is set, all other query parameters are ignored."
								}
							]
						},
						"description": "Returns the first *X* records (specified in the **limit** query parameter). Log records are sorted by the criteria specified in the **sort** query parameter. \n\nIf the query is too large to be processed in a single request, it is divided into slices. In that case the first response contains the **nextSliceKey** cursor for the second slice. Use it in the **nextSliceKey** query parameter to obtain the second slice, which contains **nextSliceKey** cursor for the third slice, and so on. \n\nResults can be distributed unevenly between slices and some slices might be empty."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs/search?from=nostrud&to=nostrud&limit=1000&query=&sort=-timestamp&nextSliceKey=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"search"
									],
									"query": [
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "limit",
											"value": "1000"
										},
										{
											"key": "query",
											"value": ""
										},
										{
											"key": "sort",
											"value": "-timestamp"
										},
										{
											"key": "nextSliceKey",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"nextSliceKey\": \"aliquip\",\n  \"sliceSize\": -68467919,\n  \"results\": [\n    {\n      \"additionalColumns\": {\n        \"cupidatat285\": [\n          \"sunt eu\",\n          \"occaecat ut laborum eu\"\n        ],\n        \"laboriscf\": [\n          \"culpa adipisicing veniam in ut\",\n          \"labore irure in\"\n        ],\n        \"culpa_5\": [\n          \"id\",\n          \"dolor nisi\"\n        ],\n        \"anim_a66\": [\n          \"ad sint reprehenderit in\",\n          \"dolor sint\"\n        ]\n      },\n      \"timestamp\": 85262899,\n      \"eventType\": \"K8S\",\n      \"content\": \"sint consequat sit dolore\",\n      \"status\": \"ERROR\"\n    },\n    {\n      \"additionalColumns\": {\n        \"Excepteur_82\": [\n          \"nostrud et cillum tempor eu\",\n          \"dolor et proident fugiat\"\n        ],\n        \"enim1_\": [\n          \"ad cillum\",\n          \"sunt ipsum eu\"\n        ]\n      },\n      \"timestamp\": -87555415,\n      \"eventType\": \"SFM\",\n      \"content\": \"qui\",\n      \"status\": \"ERROR\"\n    }\n  ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs/search?from=nostrud&to=nostrud&limit=1000&query=&sort=-timestamp&nextSliceKey=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"search"
									],
									"query": [
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "limit",
											"value": "1000"
										},
										{
											"key": "query",
											"value": ""
										},
										{
											"key": "sort",
											"value": "-timestamp"
										},
										{
											"key": "nextSliceKey",
											"value": "nostrud"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "objects",
					"item": [
						{
							"name": "{object Id}",
							"item": [
								{
									"name": "Gets the specified settings object | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "nostrud",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId",
															"value": "nostrud",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"author\": \"john.doe@example.com\",\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"schemaVersion\": \"1.0.0\",\n  \"modified\": -87712108,\n  \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"scope\": \"HOST-D3A3C5A146830A79\",\n  \"summary\": \"sit\",\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"created\": 88069864\n}"
										},
										{
											"name": "No object available for the given objectId",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId",
															"value": "nostrud",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"code\": 8898941,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"sint culpa mollit officia consectetur\",\n        \"message\": \"pariatur aliquip ut\",\n        \"path\": \"dolor quis\"\n      },\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"laborum do Lorem in minim\",\n        \"message\": \"non Duis voluptate velit nostrud\",\n        \"path\": \"mollit eiusmod in \"\n      }\n    ],\n    \"message\": \"aliquip velit dolore sit\",\n    \"code\": -61660369\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}"
										}
									]
								},
								{
									"name": "Updates an existing settings object | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"schemaVersion\": \"1.0.0\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "nostrud",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"schemaVersion\": \"1.0.0\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId",
															"value": "nostrud",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"code\": 8898941,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"sint culpa mollit officia consectetur\",\n        \"message\": \"pariatur aliquip ut\",\n        \"path\": \"dolor quis\"\n      },\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"laborum do Lorem in minim\",\n        \"message\": \"non Duis voluptate velit nostrud\",\n        \"path\": \"mollit eiusmod in \"\n      }\n    ],\n    \"message\": \"aliquip velit dolore sit\",\n    \"code\": -61660369\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}"
										},
										{
											"name": "Failed. Schema validation failed.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"schemaVersion\": \"1.0.0\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId",
															"value": "nostrud",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"code\": 8898941,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"sint culpa mollit officia consectetur\",\n        \"message\": \"pariatur aliquip ut\",\n        \"path\": \"dolor quis\"\n      },\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"laborum do Lorem in minim\",\n        \"message\": \"non Duis voluptate velit nostrud\",\n        \"path\": \"mollit eiusmod in \"\n      }\n    ],\n    \"message\": \"aliquip velit dolore sit\",\n    \"code\": -61660369\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"schemaVersion\": \"1.0.0\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId",
															"value": "nostrud",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"code\": 8898941,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"sint culpa mollit officia consectetur\",\n        \"message\": \"pariatur aliquip ut\",\n        \"path\": \"dolor quis\"\n      },\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"laborum do Lorem in minim\",\n        \"message\": \"non Duis voluptate velit nostrud\",\n        \"path\": \"mollit eiusmod in \"\n      }\n    ],\n    \"message\": \"aliquip velit dolore sit\",\n    \"code\": -61660369\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}"
										},
										{
											"name": "Failed. Conflicting resource.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"schemaVersion\": \"1.0.0\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId",
															"value": "nostrud",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"code\": 8898941,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"sint culpa mollit officia consectetur\",\n        \"message\": \"pariatur aliquip ut\",\n        \"path\": \"dolor quis\"\n      },\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"laborum do Lorem in minim\",\n        \"message\": \"non Duis voluptate velit nostrud\",\n        \"path\": \"mollit eiusmod in \"\n      }\n    ],\n    \"message\": \"aliquip velit dolore sit\",\n    \"code\": -61660369\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}"
										}
									]
								},
								{
									"name": "Deletes the specified settings object | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=nostrud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"query": [
												{
													"key": "updateToken",
													"value": "nostrud",
													"description": "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks."
												}
											],
											"variable": [
												{
													"key": "objectId",
													"value": "nostrud",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=nostrud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "nostrud"
														}
													],
													"variable": [
														{
															"key": "objectId",
															"value": "nostrud",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. Schema validation failed.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=nostrud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "nostrud"
														}
													],
													"variable": [
														{
															"key": "objectId",
															"value": "nostrud",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"code\": 8898941,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"sint culpa mollit officia consectetur\",\n        \"message\": \"pariatur aliquip ut\",\n        \"path\": \"dolor quis\"\n      },\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"laborum do Lorem in minim\",\n        \"message\": \"non Duis voluptate velit nostrud\",\n        \"path\": \"mollit eiusmod in \"\n      }\n    ],\n    \"message\": \"aliquip velit dolore sit\",\n    \"code\": -61660369\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=nostrud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "nostrud"
														}
													],
													"variable": [
														{
															"key": "objectId",
															"value": "nostrud",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"code\": 8898941,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"sint culpa mollit officia consectetur\",\n        \"message\": \"pariatur aliquip ut\",\n        \"path\": \"dolor quis\"\n      },\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"laborum do Lorem in minim\",\n        \"message\": \"non Duis voluptate velit nostrud\",\n        \"path\": \"mollit eiusmod in \"\n      }\n    ],\n    \"message\": \"aliquip velit dolore sit\",\n    \"code\": -61660369\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}"
										},
										{
											"name": "Failed. Conflicting resource.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=nostrud",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "nostrud"
														}
													],
													"variable": [
														{
															"key": "objectId",
															"value": "nostrud",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"code\": 8898941,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"sint culpa mollit officia consectetur\",\n        \"message\": \"pariatur aliquip ut\",\n        \"path\": \"dolor quis\"\n      },\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"laborum do Lorem in minim\",\n        \"message\": \"non Duis voluptate velit nostrud\",\n        \"path\": \"mollit eiusmod in \"\n      }\n    ],\n    \"message\": \"aliquip velit dolore sit\",\n    \"code\": -61660369\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists available settings objects | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settings/objects?schemaIds=nostrud&scopes=nostrud&fields=objectId,value&nextPageKey=nostrud&pageSize=88698957",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "schemaIds",
											"value": "nostrud",
											"description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "scopes",
											"value": "nostrud",
											"description": "A list of comma-separated scopes, that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scopes. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "fields",
											"value": "objectId,value",
											"description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `objectId,value`)."
										},
										{
											"key": "nextPageKey",
											"value": "nostrud",
											"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
										},
										{
											"key": "pageSize",
											"value": "88698957",
											"description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=nostrud&scopes=nostrud&fields=objectId,value&nextPageKey=nostrud&pageSize=88698957",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "nostrud"
												},
												{
													"key": "scopes",
													"value": "nostrud"
												},
												{
													"key": "fields",
													"value": "objectId,value"
												},
												{
													"key": "nextPageKey",
													"value": "nostrud"
												},
												{
													"key": "pageSize",
													"value": "88698957"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 16148692,\n  \"items\": [\n    {\n      \"author\": \"john.doe@example.com\",\n      \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"schemaVersion\": \"1.0.0\",\n      \"modified\": -31905914,\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"value\": {\n        \"autoMonitoring\": true\n      },\n      \"scope\": \"HOST-D3A3C5A146830A79\",\n      \"summary\": \"nisi magna in\",\n      \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"created\": -75436747\n    },\n    {\n      \"author\": \"john.doe@example.com\",\n      \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"schemaVersion\": \"1.0.0\",\n      \"modified\": 12352216,\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"value\": {\n        \"autoMonitoring\": true\n      },\n      \"scope\": \"HOST-D3A3C5A146830A79\",\n      \"summary\": \"fugiat proident pariatur in\",\n      \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"created\": 20673022\n    }\n  ],\n  \"pageSize\": -81890290,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
								},
								{
									"name": "Failed. The specified schema or scope is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=nostrud&scopes=nostrud&fields=objectId,value&nextPageKey=nostrud&pageSize=88698957",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "nostrud"
												},
												{
													"key": "scopes",
													"value": "nostrud"
												},
												{
													"key": "fields",
													"value": "objectId,value"
												},
												{
													"key": "nextPageKey",
													"value": "nostrud"
												},
												{
													"key": "pageSize",
													"value": "88698957"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								}
							]
						},
						{
							"name": "Creates a new settings object | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false",
											"description": "If `true`, the request runs only validation of the submitted settings objects, without saving them."
										}
									]
								},
								"description": "You can upload several objects at once. In that case each object returns its own response code. Check the response body for details."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"code\": 19427302,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"in\",\n          \"message\": \"aliquip enim\",\n          \"path\": \"sunt cupidatat exercitation\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"consectetur Ut\",\n          \"message\": \"cupidatat\",\n          \"path\": \"minim sint esse\"\n        }\n      ],\n      \"message\": \"sunt veniam fugiat\",\n      \"code\": -89648954\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  },\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"code\": 583320,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"magna\",\n          \"message\": \"anim ad\",\n          \"path\": \"do laboris ad\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"incididunt aliquip\",\n          \"message\": \"irure in\",\n          \"path\": \"commodo Ut veniam non\"\n        }\n      ],\n      \"message\": \"ad nostrud fugiat\",\n      \"code\": 42846172\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  }\n]"
								},
								{
									"name": "Multi-status: different objects in the payload resulted in different statuses.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"code\": 19427302,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"in\",\n          \"message\": \"aliquip enim\",\n          \"path\": \"sunt cupidatat exercitation\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"consectetur Ut\",\n          \"message\": \"cupidatat\",\n          \"path\": \"minim sint esse\"\n        }\n      ],\n      \"message\": \"sunt veniam fugiat\",\n      \"code\": -89648954\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  },\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"code\": 583320,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"magna\",\n          \"message\": \"anim ad\",\n          \"path\": \"do laboris ad\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"incididunt aliquip\",\n          \"message\": \"irure in\",\n          \"path\": \"commodo Ut veniam non\"\n        }\n      ],\n      \"message\": \"ad nostrud fugiat\",\n      \"code\": 42846172\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  }\n]"
								},
								{
									"name": "Failed. Schema validation failed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"code\": 19427302,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"in\",\n          \"message\": \"aliquip enim\",\n          \"path\": \"sunt cupidatat exercitation\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"consectetur Ut\",\n          \"message\": \"cupidatat\",\n          \"path\": \"minim sint esse\"\n        }\n      ],\n      \"message\": \"sunt veniam fugiat\",\n      \"code\": -89648954\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  },\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"code\": 583320,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"magna\",\n          \"message\": \"anim ad\",\n          \"path\": \"do laboris ad\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"incididunt aliquip\",\n          \"message\": \"irure in\",\n          \"path\": \"commodo Ut veniam non\"\n        }\n      ],\n      \"message\": \"ad nostrud fugiat\",\n      \"code\": 42846172\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  }\n]"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"code\": 19427302,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"in\",\n          \"message\": \"aliquip enim\",\n          \"path\": \"sunt cupidatat exercitation\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"consectetur Ut\",\n          \"message\": \"cupidatat\",\n          \"path\": \"minim sint esse\"\n        }\n      ],\n      \"message\": \"sunt veniam fugiat\",\n      \"code\": -89648954\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  },\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"code\": 583320,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"magna\",\n          \"message\": \"anim ad\",\n          \"path\": \"do laboris ad\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"incididunt aliquip\",\n          \"message\": \"irure in\",\n          \"path\": \"commodo Ut veniam non\"\n        }\n      ],\n      \"message\": \"ad nostrud fugiat\",\n      \"code\": 42846172\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  }\n]"
								},
								{
									"name": "Failed. Conflicting resource.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"schemaVersion\": \"1.0.0\",\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"code\": 19427302,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"in\",\n          \"message\": \"aliquip enim\",\n          \"path\": \"sunt cupidatat exercitation\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"consectetur Ut\",\n          \"message\": \"cupidatat\",\n          \"path\": \"minim sint esse\"\n        }\n      ],\n      \"message\": \"sunt veniam fugiat\",\n      \"code\": -89648954\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  },\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"code\": 583320,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"magna\",\n          \"message\": \"anim ad\",\n          \"path\": \"do laboris ad\"\n        },\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"incididunt aliquip\",\n          \"message\": \"irure in\",\n          \"path\": \"commodo Ut veniam non\"\n        }\n      ],\n      \"message\": \"ad nostrud fugiat\",\n      \"code\": 42846172\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "schemas",
					"item": [
						{
							"name": "Lists available settings schemas | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"latestSchemaVersion\": \"1.4.2\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"displayName\": \"Built-in container monitoring rules\"\n    },\n    {\n      \"latestSchemaVersion\": \"1.4.2\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"displayName\": \"Built-in container monitoring rules\"\n    }\n  ],\n  \"totalCount\": 1\n}"
								}
							]
						},
						{
							"name": "Gets parameters of the specified settings schema | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas",
										":schemaId"
									],
									"query": [
										{
											"key": "schemaVersion",
											"value": "nostrud",
											"description": "The version of the required schema. \n\n If not set, the most recent version is returned."
										}
									],
									"variable": [
										{
											"key": "schemaId",
											"value": "nostrud",
											"description": "(Required) The ID of the required schema."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=nostrud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"query": [
												{
													"key": "schemaVersion",
													"value": "nostrud"
												}
											],
											"variable": [
												{
													"key": "schemaId",
													"value": "nostrud",
													"description": "(Required) The ID of the required schema."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "null"
								},
								{
									"name": "Failed. The specified schema doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=nostrud",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"query": [
												{
													"key": "schemaVersion",
													"value": "nostrud"
												}
											],
											"variable": [
												{
													"key": "schemaId",
													"value": "nostrud",
													"description": "(Required) The ID of the required schema."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "slo",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets parameters and the calculated value of an SLO",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/slo/:id?from=nostrud&to=nostrud&timeFrame=CURRENT",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo",
										":id"
									],
									"query": [
										{
											"key": "from",
											"value": "nostrud",
											"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
										},
										{
											"key": "to",
											"value": "nostrud",
											"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
										},
										{
											"key": "timeFrame",
											"value": "CURRENT",
											"description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "36532977-5a93-8063-d7e2-2b1f5a26cf04",
											"description": "(Required) The ID of the required SLO."
										}
									]
								},
								"description": "If **from** and **to** parameters are provided, the SLO is calculated for that timeframe; otherwise the SLO's own timeframe is used."
							},
							"response": [
								{
									"name": "Success. The response contains the parameters and calculated values of the requested SLO.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id?from=nostrud&to=nostrud&timeFrame=CURRENT",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "nostrud"
												},
												{
													"key": "to",
													"value": "nostrud"
												},
												{
													"key": "timeFrame",
													"value": "CURRENT"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "36532977-5a93-8063-d7e2-2b1f5a26cf04",
													"description": "(Required) The ID of the required SLO."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"timeframe\": \"-1d\",\n  \"evaluatedPercentage\": 96.25,\n  \"numeratorValue\": 80,\n  \"denominatorValue\": 90,\n  \"problemFilter\": \"type(\\\"SERVICE\\\")\",\n  \"relatedOpenProblems\": -72455616,\n  \"relatedTotalProblems\": -49744721,\n  \"hasAccess\": true,\n  \"errorBudget\": 1.25,\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"name\": \"Payment service availability\",\n  \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n  \"target\": 95,\n  \"description\": \"Rate of successful payments per week\",\n  \"enabled\": true,\n  \"status\": \"WARNING\",\n  \"warning\": 97.5,\n  \"error\": \"NONE\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id?from=nostrud&to=nostrud&timeFrame=CURRENT",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "nostrud"
												},
												{
													"key": "to",
													"value": "nostrud"
												},
												{
													"key": "timeFrame",
													"value": "CURRENT"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "36532977-5a93-8063-d7e2-2b1f5a26cf04",
													"description": "(Required) The ID of the required SLO."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id?from=nostrud&to=nostrud&timeFrame=CURRENT",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "nostrud"
												},
												{
													"key": "to",
													"value": "nostrud"
												},
												{
													"key": "timeFrame",
													"value": "CURRENT"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "36532977-5a93-8063-d7e2-2b1f5a26cf04",
													"description": "(Required) The ID of the required SLO."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								}
							]
						},
						{
							"name": "Updates an existing SLO",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"customDescription\": \"Rate of successful payments per week\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/slo/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "36532977-5a93-8063-d7e2-2b1f5a26cf04",
											"description": "(Required) The ID of the required SLO."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"customDescription\": \"Rate of successful payments per week\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "36532977-5a93-8063-d7e2-2b1f5a26cf04",
													"description": "(Required) The ID of the required SLO."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"customDescription\": \"Rate of successful payments per week\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "36532977-5a93-8063-d7e2-2b1f5a26cf04",
													"description": "(Required) The ID of the required SLO."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"customDescription\": \"Rate of successful payments per week\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "36532977-5a93-8063-d7e2-2b1f5a26cf04",
													"description": "(Required) The ID of the required SLO."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes an SLO",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/slo/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "36532977-5a93-8063-d7e2-2b1f5a26cf04",
											"description": "(Required) The ID of the required SLO."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The SLO has been deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "36532977-5a93-8063-d7e2-2b1f5a26cf04",
													"description": "(Required) The ID of the required SLO."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "36532977-5a93-8063-d7e2-2b1f5a26cf04",
													"description": "(Required) The ID of the required SLO."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								},
								{
									"name": "Failed. Conflicting resource.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "36532977-5a93-8063-d7e2-2b1f5a26cf04",
													"description": "(Required) The ID of the required SLO."
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "36532977-5a93-8063-d7e2-2b1f5a26cf04",
													"description": "(Required) The ID of the required SLO."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available SLOs along with calculated values",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/slo?nextPageKey=nostrud&pageSize=88698957&from=nostrud&to=nostrud&sloSelector=&sort=name&timeFrame=CURRENT&pageIdx=1&demo=false&evaluate=false&enabledSlos=true&showGlobalSlos=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"slo"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "nostrud",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "88698957",
									"description": "The amount of SLOs in a single response payload. \n\nThe maximal allowed page size is 10000. \n\nIf not set, 10 is used."
								},
								{
									"key": "from",
									"value": "nostrud",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "nostrud",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "sloSelector",
									"value": "",
									"description": "The scope of the query. Only SLOs matching the provided criteria are included in the response. \n\nYou can add one or several of the criteria listed below.\n* ID: id(\"id\"). Filters for an SLO with the given ID.\n* Name: name(\"name\"). Filters for an SLO with the given name. The filter is case-sensitive.\n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Text: text(\"value\"). Filters for all SLOs that contain the given value in their name or description. The filter is case-insensitive.\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/slo?sloSelector=name(\"Service Availability\"), .../api/v2/slo?sloSelector=id(\"id\"), .../api/v2/slo?sloSelector=text(\"Description\"),healthState(\"HEALTHY\").\n\nThe special characters ~ and \" need to be escaped using a ~ (e.g. double quote search text(\"~\"\")."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "The sorting of SLO entries: \n* `name`: Names in ascending order. \n* `-name`: Names in descending order. \n\nIf not set, the ascending order is used."
								},
								{
									"key": "timeFrame",
									"value": "CURRENT",
									"description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
								},
								{
									"key": "pageIdx",
									"value": "1",
									"description": "Only SLOs on the given page are included in the response. The first page has the index '1'."
								},
								{
									"key": "demo",
									"value": "false",
									"description": "Get your SLOs (`false`) or a set of demo SLOs (`true`)."
								},
								{
									"key": "evaluate",
									"value": "false",
									"description": "Get your SLOs without them being evaluated (`false`) or with evaluations (`true`) with maximum `pageSize` of 25."
								},
								{
									"key": "enabledSlos",
									"value": "true",
									"description": "Get your enabled SLOs (`true`) or disabled ones (`false`)"
								},
								{
									"key": "showGlobalSlos",
									"value": "true",
									"description": "Get your global SLOs (`true`) regardless of the selected filter or filter them out (`false`)."
								}
							]
						},
						"description": "By default the values are calculated for the SLO's own timeframe. You can use a custom timeframe: \n\n1. Set the **timeFrame** parameter to `GTF`. \n2. Provide the timeframe in **from** and **to** parameters."
					},
					"response": [
						{
							"name": "Success. The response contains the parameters and calculated values of the requested SLO.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/slo?nextPageKey=nostrud&pageSize=88698957&from=nostrud&to=nostrud&sloSelector=&sort=name&timeFrame=CURRENT&pageIdx=1&demo=false&evaluate=false&enabledSlos=true&showGlobalSlos=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "sloSelector",
											"value": ""
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "timeFrame",
											"value": "CURRENT"
										},
										{
											"key": "pageIdx",
											"value": "1"
										},
										{
											"key": "demo",
											"value": "false"
										},
										{
											"key": "evaluate",
											"value": "false"
										},
										{
											"key": "enabledSlos",
											"value": "true"
										},
										{
											"key": "showGlobalSlos",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": -84225253,\n  \"slo\": [\n    {\n      \"timeframe\": \"-1d\",\n      \"evaluatedPercentage\": 96.25,\n      \"numeratorValue\": 80,\n      \"denominatorValue\": 90,\n      \"problemFilter\": \"type(\\\"SERVICE\\\")\",\n      \"relatedOpenProblems\": 79500843,\n      \"relatedTotalProblems\": 14849020,\n      \"hasAccess\": true,\n      \"errorBudget\": 1.25,\n      \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n      \"useRateMetric\": true,\n      \"metricRate\": \"builtin:service.successes.server.rate\",\n      \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n      \"metricDenominator\": \"builtin:service.requestCount.server\",\n      \"evaluationType\": \"AGGREGATE\",\n      \"filter\": \"type(\\\"SERVICE\\\")\",\n      \"name\": \"Payment service availability\",\n      \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n      \"target\": 95,\n      \"description\": \"Rate of successful payments per week\",\n      \"enabled\": true,\n      \"status\": \"WARNING\",\n      \"warning\": 97.5,\n      \"error\": \"NONE\"\n    },\n    {\n      \"timeframe\": \"-1d\",\n      \"evaluatedPercentage\": 96.25,\n      \"numeratorValue\": 80,\n      \"denominatorValue\": 90,\n      \"problemFilter\": \"type(\\\"SERVICE\\\")\",\n      \"relatedOpenProblems\": 34910138,\n      \"relatedTotalProblems\": -5344770,\n      \"hasAccess\": true,\n      \"errorBudget\": 1.25,\n      \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n      \"useRateMetric\": true,\n      \"metricRate\": \"builtin:service.successes.server.rate\",\n      \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n      \"metricDenominator\": \"builtin:service.requestCount.server\",\n      \"evaluationType\": \"AGGREGATE\",\n      \"filter\": \"type(\\\"SERVICE\\\")\",\n      \"name\": \"Payment service availability\",\n      \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n      \"target\": 95,\n      \"description\": \"Rate of successful payments per week\",\n      \"enabled\": true,\n      \"status\": \"WARNING\",\n      \"warning\": 97.5,\n      \"error\": \"NONE\"\n    }\n  ],\n  \"pageSize\": 48024143,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/slo?nextPageKey=nostrud&pageSize=88698957&from=nostrud&to=nostrud&sloSelector=&sort=name&timeFrame=CURRENT&pageIdx=1&demo=false&evaluate=false&enabledSlos=true&showGlobalSlos=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "nostrud"
										},
										{
											"key": "pageSize",
											"value": "88698957"
										},
										{
											"key": "from",
											"value": "nostrud"
										},
										{
											"key": "to",
											"value": "nostrud"
										},
										{
											"key": "sloSelector",
											"value": ""
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "timeFrame",
											"value": "CURRENT"
										},
										{
											"key": "pageIdx",
											"value": "1"
										},
										{
											"key": "demo",
											"value": "false"
										},
										{
											"key": "evaluate",
											"value": "false"
										},
										{
											"key": "enabledSlos",
											"value": "true"
										},
										{
											"key": "showGlobalSlos",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				},
				{
					"name": "Creates a new SLO",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"customDescription\": \"Rate of successful payments per week\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/slo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"slo"
							]
						}
					},
					"response": [
						{
							"name": "Success. The new SLO has been created. Response doesn't have a body. The **location** response header contains the ID of the new SLO.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"customDescription\": \"Rate of successful payments per week\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "location",
									"value": "",
									"description": "The location of the new resource created by this request."
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"customDescription\": \"Rate of successful payments per week\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"customDescription\": \"Rate of successful payments per week\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						},
						{
							"name": "Failed. Conflicting resource.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"customDescription\": \"Rate of successful payments per week\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						},
						{
							"name": "Internal server error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"name\": \"Payment service availability\",\n  \"customDescription\": \"Rate of successful payments per week\",\n  \"metricExpression\": \"(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())\",\n  \"useRateMetric\": true,\n  \"metricRate\": \"builtin:service.successes.server.rate\",\n  \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n  \"metricDenominator\": \"builtin:service.requestCount.server\",\n  \"evaluationType\": \"AGGREGATE\",\n  \"filter\": \"type(\\\"SERVICE\\\")\",\n  \"target\": 95,\n  \"warning\": 97.5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "synthetic",
			"item": [
				{
					"name": "config",
					"item": [
						{
							"name": "Gets set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/synthetic/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"config"
									]
								}
							},
							"response": [
								{
									"name": "Success. The response contains synthetic related parameters defined for whole tenant.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"bmMonitorTimeout\": 2176238,\n  \"bmStepTimeout\": 261057\n}"
								}
							]
						},
						{
							"name": "Updates set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations). | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bmMonitorTimeout\": 2176238,\n  \"bmStepTimeout\": 261057\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/synthetic/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"config"
									]
								}
							},
							"response": [
								{
									"name": "Success. The set of synthetic related parameters has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bmMonitorTimeout\": 2176238,\n  \"bmStepTimeout\": 261057\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"config"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"bmMonitorTimeout\": 2176238,\n  \"bmStepTimeout\": 261057\n}"
								}
							]
						}
					]
				},
				{
					"name": "locations",
					"item": [
						{
							"name": "{location Id}",
							"item": [
								{
									"name": "Gets properties of the specified location",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "nostrud",
													"description": "(Required) The Dynatrace entity ID of the required location."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains parameters of the synthetic location.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId",
															"value": "nostrud",
															"description": "(Required) The Dynatrace entity ID of the required location."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"entityId\": \"consectetur in\",\n  \"latitude\": 57083650.334665984,\n  \"longitude\": 76448870.38707137,\n  \"name\": \"officia dolore\",\n  \"type\": \"CLUSTER\",\n  \"countryCode\": \"nostrud \",\n  \"regionCode\": \"nisi Lorem eu\",\n  \"city\": \"amet\",\n  \"status\": \"DISABLED\",\n  \"geoLocationId\": \"quis nostrud adipisicing nisi\"\n}"
										}
									]
								},
								{
									"name": "Updates the specified synthetic location",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"PUBLIC\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "nostrud",
													"description": "(Required) The Dynatrace entity ID of the synthetic location to be updated."
												}
											]
										},
										"description": "For public locations you can only change the location status."
									},
									"response": [
										{
											"name": "Success. The location has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"PUBLIC\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId",
															"value": "nostrud",
															"description": "(Required) The Dynatrace entity ID of the synthetic location to be updated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes the specified private synthetic location",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "nostrud",
													"description": "(Required) The Dynatrace entity ID of the private synthetic location to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The location has been deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId",
															"value": "nostrud",
															"description": "(Required) The Dynatrace entity ID of the private synthetic location to be deleted."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "status",
							"item": [
								{
									"name": "Checks the status of public synthetic locations",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains the public locations status.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"publicLocationsEnabled\": true\n}"
										}
									]
								},
								{
									"name": "Changes the status of public synthetic locations",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"publicLocationsEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Success. Locations status has been updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"publicLocationsEnabled\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict. Public locations couldn't be disabled because there are monitors assigned to them.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"publicLocationsEnabled\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Lists all synthetic locations (both public and private) available for your environment",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations?cloudPlatform=OTHER&type=PRIVATE",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									],
									"query": [
										{
											"key": "cloudPlatform",
											"value": "OTHER",
											"description": "Filters the resulting set of locations to those which are hosted on a specific cloud platform."
										},
										{
											"key": "type",
											"value": "PRIVATE",
											"description": "Filters the resulting set of locations to those of a specific type."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations?cloudPlatform=OTHER&type=PRIVATE",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											],
											"query": [
												{
													"key": "cloudPlatform",
													"value": "OTHER"
												},
												{
													"key": "type",
													"value": "PRIVATE"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"locations\": [\n    {\n      \"name\": \"Gdansk\",\n      \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n      \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n      \"type\": \"PUBLIC\",\n      \"cloudPlatform\": \"AMAZON_EC2\",\n      \"ips\": [\n        \"134.189.153.97\",\n        \"134.189.153.98\"\n      ],\n      \"stage\": \"GA\",\n      \"status\": \"ENABLED\",\n      \"capabilities\": [\n        \"BROWSER\",\n        \"HTTP\"\n      ]\n    },\n    {\n      \"name\": \"My private location\",\n      \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n      \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n      \"type\": \"PRIVATE\",\n      \"status\": \"ENABLED\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Creates a new private synthetic location",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityId\": \"laboris aute\",\n  \"latitude\": 72159799.7920734,\n  \"longitude\": 26518590.265142187,\n  \"name\": \"eu eiusmod nisi officia\",\n  \"type\": \"CLUSTER\",\n  \"countryCode\": \"non Ut eu\",\n  \"regionCode\": \"pariatur quis\",\n  \"city\": \"ipsum in dolore sunt laboris\",\n  \"status\": \"HIDDEN\",\n  \"geoLocationId\": \"nisi\",\n  \"nodes\": [\n    \"laboris in incididunt elit\",\n    \"aliquip quis\"\n  ],\n  \"availabilityLocationOutage\": false,\n  \"availabilityNodeOutage\": false,\n  \"locationNodeOutageDelayInMinutes\": 4,\n  \"availabilityNotificationsEnabled\": true,\n  \"autoUpdateChromium\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									]
								}
							},
							"response": [
								{
									"name": "Success. The private location has been created. The response contains the ID of the new location.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityId\": \"reprehender\",\n  \"latitude\": -4562434.899999306,\n  \"longitude\": -5413142.740228593,\n  \"name\": \"Ut laborum\",\n  \"type\": \"PRIVATE\",\n  \"countryCode\": \"aliqua velit ex\",\n  \"regionCode\": \"sint\",\n  \"city\": \"adipisicing aut\",\n  \"status\": \"DISABLED\",\n  \"geoLocationId\": \"id ad dolore\",\n  \"nodes\": [\n    \"dolore sed rep\",\n    \"fugiat Duis tempor veniam\"\n  ],\n  \"availabilityLocationOutage\": true,\n  \"availabilityNodeOutage\": false,\n  \"locationNodeOutageDelayInMinutes\": 1,\n  \"availabilityNotificationsEnabled\": false,\n  \"autoUpdateChromium\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"entityId\": \"voluptate\",\n  \"geoLocationId\": \"exercitation velit Duis\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "nodes",
					"item": [
						{
							"name": "Lists all synthetic nodes available in your environment",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"nodes\": [\n    {\n      \"activeGateVersion\": \"ad dolore\",\n      \"autoUpdateEnabled\": false,\n      \"browserMonitorsEnabled\": false,\n      \"entityId\": \"in proident m\",\n      \"healthCheckStatus\": \"ullamco fugiat minim dolore dolor\",\n      \"hostname\": \"Lorem veniam quis minim cupida\",\n      \"ips\": [\n        \"magna dolor ad tempor\",\n        \"dolor aute\"\n      ],\n      \"oneAgentRoutingEnabled \": false,\n      \"operatingSystem\": \"et est consectetur\",\n      \"playerVersion\": \"voluptate et pariatur\",\n      \"status\": \"do\",\n      \"version\": \"incididunt labore minim culpa\"\n    },\n    {\n      \"activeGateVersion\": \"dolore adipisicing\",\n      \"autoUpdateEnabled\": false,\n      \"browserMonitorsEnabled\": true,\n      \"entityId\": \"elit deserun\",\n      \"healthCheckStatus\": \"Excepteur adipisicing eu fugiat\",\n      \"hostname\": \"est Duis\",\n      \"ips\": [\n        \"aute proident fugiat\",\n        \"commodo mollit Excepteur pariatur\"\n      ],\n      \"oneAgentRoutingEnabled \": true,\n      \"operatingSystem\": \"culpa\",\n      \"playerVersion\": \"cillum reprehenderit culpa Ut\",\n      \"status\": \"velit cup\",\n      \"version\": \"ipsum deserunt aliquip\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Lists properties of the specified synthetic node",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes",
										":nodeId"
									],
									"variable": [
										{
											"key": "nodeId",
											"value": "nostrud",
											"description": "(Required) The ID of the required synthetic node."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId",
													"value": "nostrud",
													"description": "(Required) The ID of the required synthetic node."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"activeGateVersion\": \"nulla pariatur\",\n  \"autoUpdateEnabled\": false,\n  \"browserMonitorsEnabled\": false,\n  \"browserType\": \"Duis eu\",\n  \"browserVersion\": \"dolor aliqua aliquip ad\",\n  \"entityId\": \"aliqua enim in\",\n  \"healthCheckStatus\": \"sed incididunt consequat cillu\",\n  \"hostname\": \"ullamco in elit laborum\",\n  \"ips\": [\n    \"nisi labore proident\",\n    \"dolor\"\n  ],\n  \"oneAgentRoutingEnabled \": true,\n  \"operatingSystem\": \"sed voluptate veniam lab\",\n  \"playerVersion\": \"cillum dolor reprehenderit\",\n  \"status\": \"laborum id dolor minim eiusmod\",\n  \"version\": \"ullamco quis culpa\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns detailed information about last HTTP monitor execution. | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/synthetic/execution/:monitorId/:resultType?locationId=nostrud",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"synthetic",
								"execution",
								":monitorId",
								":resultType"
							],
							"query": [
								{
									"key": "locationId",
									"value": "nostrud",
									"description": "Filters the results to those executed by specified Synthetic location. Specify the ID of the location."
								}
							],
							"variable": [
								{
									"key": "monitorId",
									"value": "nostrud",
									"description": "(Required) Identifier of the HTTP monitor for which last execution result is returned."
								},
								{
									"key": "resultType",
									"value": "SUCCESS",
									"description": "(Required) Defines the result type of the last HTTP monitor's execution."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success. The response contains detailed data.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/synthetic/execution/:monitorId/:resultType?locationId=nostrud",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"execution",
										":monitorId",
										":resultType"
									],
									"query": [
										{
											"key": "locationId",
											"value": "nostrud"
										}
									],
									"variable": [
										{
											"key": "monitorId",
											"value": "nostrud",
											"description": "(Required) Identifier of the HTTP monitor for which last execution result is returned."
										},
										{
											"key": "resultType",
											"value": "SUCCESS",
											"description": "(Required) Defines the result type of the last HTTP monitor's execution."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"monitorId\": \"proident ea irure\",\n  \"locationsExecutionResults\": [\n    {\n      \"locationId\": \"sint minim\",\n      \"executionId\": \"in consequat enim occaecat\",\n      \"requestResults\": [\n        {\n          \"requestId\": \"anim aliquip consectetur ullamco Duis\",\n          \"requestName\": \"do proident \",\n          \"sequenceNumber\": 52249482,\n          \"startTimestamp\": -87579834,\n          \"engineId\": -70563007,\n          \"publicLocation\": true,\n          \"url\": \"minim ullamco consequat\",\n          \"method\": \"labore qui aute\",\n          \"requestBody\": \"pariatur adipisicing dolore\",\n          \"requestHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"responseStatusCode\": 45606281,\n          \"responseBody\": \"irure cillum dolore velit\",\n          \"responseSize\": -71354387,\n          \"responseBodySizeLimitExceeded\": false,\n          \"responseHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"resolvedIps\": [\n            \"incididunt tempor\",\n            \"dolore ipsum consequat\"\n          ],\n          \"healthStatusCode\": 16514090,\n          \"healthStatus\": \"veniam dolor\",\n          \"responseMessage\": \"tempor Excepteur\",\n          \"peerCertificateExpiryDate\": 5757526,\n          \"peerCertificateDetails\": \"amet esse anim\",\n          \"totalTime\": -25542435,\n          \"hostNameResolutionTime\": 78218547,\n          \"tcpConnectTime\": 26424331,\n          \"tlsHandshakeTime\": -18098794,\n          \"timeToFirstByte\": -68132754,\n          \"redirectionTime\": 88595806,\n          \"waitingTime\": 28163169,\n          \"redirectsCount\": -76590103,\n          \"failureMessage\": \"eu proid\"\n        },\n        {\n          \"requestId\": \"nostrud ut\",\n          \"requestName\": \"officia\",\n          \"sequenceNumber\": 40783955,\n          \"startTimestamp\": 84360771,\n          \"engineId\": -7180370,\n          \"publicLocation\": false,\n          \"url\": \"eiusmod eu et\",\n          \"method\": \"ad in aute anim\",\n          \"requestBody\": \"dolor amet sunt eu culpa\",\n          \"requestHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"responseStatusCode\": 45353873,\n          \"responseBody\": \"ipsum ullamco in\",\n          \"responseSize\": 71770838,\n          \"responseBodySizeLimitExceeded\": false,\n          \"responseHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"resolvedIps\": [\n            \"eiusmod nostrud\",\n            \"cupidatat do ex\"\n          ],\n          \"healthStatusCode\": -49721087,\n          \"healthStatus\": \"ut laborum nulla \",\n          \"responseMessage\": \"reprehenderit minim esse\",\n          \"peerCertificateExpiryDate\": -13884023,\n          \"peerCertificateDetails\": \"dolor ut tempor sed\",\n          \"totalTime\": 71655525,\n          \"hostNameResolutionTime\": -40487847,\n          \"tcpConnectTime\": 62103601,\n          \"tlsHandshakeTime\": 94088388,\n          \"timeToFirstByte\": -27033588,\n          \"redirectionTime\": 16740715,\n          \"waitingTime\": -43781367,\n          \"redirectsCount\": -19161546,\n          \"failureMessage\": \"laboris ullamco sunt\"\n        }\n      ]\n    },\n    {\n      \"locationId\": \"dolore tempor ea\",\n      \"executionId\": \"occaecat\",\n      \"requestResults\": [\n        {\n          \"requestId\": \"nostrud occaecat sint minim\",\n          \"requestName\": \"cupidatat\",\n          \"sequenceNumber\": 97778212,\n          \"startTimestamp\": -14622817,\n          \"engineId\": 86910494,\n          \"publicLocation\": true,\n          \"url\": \"Except\",\n          \"method\": \"sint aliquip aliqua\",\n          \"requestBody\": \"consequat dolore enim\",\n          \"requestHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"responseStatusCode\": 13456075,\n          \"responseBody\": \"dolore sint commodo laborum\",\n          \"responseSize\": 98553017,\n          \"responseBodySizeLimitExceeded\": false,\n          \"responseHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"resolvedIps\": [\n            \"voluptate commodo\",\n            \"id proident\"\n          ],\n          \"healthStatusCode\": -5798457,\n          \"healthStatus\": \"dolore sed\",\n          \"responseMessage\": \"Duis aliqua\",\n          \"peerCertificateExpiryDate\": -68774915,\n          \"peerCertificateDetails\": \"magna voluptate cillum\",\n          \"totalTime\": 2220623,\n          \"hostNameResolutionTime\": -55580077,\n          \"tcpConnectTime\": -75605887,\n          \"tlsHandshakeTime\": -58943689,\n          \"timeToFirstByte\": 68332708,\n          \"redirectionTime\": -5028536,\n          \"waitingTime\": -22904537,\n          \"redirectsCount\": -8428943,\n          \"failureMessage\": \"magna\"\n        },\n        {\n          \"requestId\": \"magna ullamco no\",\n          \"requestName\": \"la\",\n          \"sequenceNumber\": -16295600,\n          \"startTimestamp\": -69740372,\n          \"engineId\": 79393257,\n          \"publicLocation\": true,\n          \"url\": \"nostrud consequat Excepteur aliqua\",\n          \"method\": \"labore ad fugiat aute do\",\n          \"requestBody\": \"ad do dolore deserunt\",\n          \"requestHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"responseStatusCode\": 7698641,\n          \"responseBody\": \"sunt Lorem\",\n          \"responseSize\": -72953021,\n          \"responseBodySizeLimitExceeded\": true,\n          \"responseHeaders\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"resolvedIps\": [\n            \"proident comm\",\n            \"consequat cupidatat\"\n          ],\n          \"healthStatusCode\": 69610357,\n          \"healthStatus\": \"est exercitation sint\",\n          \"responseMessage\": \"vo\",\n          \"peerCertificateExpiryDate\": 97758844,\n          \"peerCertificateDetails\": \"eu\",\n          \"totalTime\": 72363009,\n          \"hostNameResolutionTime\": -55029252,\n          \"tcpConnectTime\": 80956102,\n          \"tlsHandshakeTime\": -65414910,\n          \"timeToFirstByte\": 44386951,\n          \"redirectionTime\": 75232596,\n          \"waitingTime\": 1071314,\n          \"redirectsCount\": 24667754,\n          \"failureMessage\": \"culpa\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "tenant Token Rotation",
			"item": [
				{
					"name": "Cancels tenant token rotation",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tenantTokenRotation/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenantTokenRotation",
								"cancel"
							]
						},
						"description": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation."
					},
					"response": [
						{
							"name": "Success. Rotation process has been cancelled. The current tenant token remains valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"cancel"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"active\": {\n    \"value\": \"eiusmod occaecat ullamco eli\"\n  },\n  \"old\": {\n    \"value\": \"in quis sunt\"\n  }\n}"
						},
						{
							"name": "Failed. There is no ongoing rotation process.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"cancel"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				},
				{
					"name": "Finishes tenant token rotation",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tenantTokenRotation/finish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenantTokenRotation",
								"finish"
							]
						},
						"description": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation."
					},
					"response": [
						{
							"name": "Success. The rotation process is completed. The **active** field of the response contains the new tenant token.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/finish",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"finish"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"active\": {\n    \"value\": \"eiusmod occaecat ullamco eli\"\n  },\n  \"old\": {\n    \"value\": \"in quis sunt\"\n  }\n}"
						},
						{
							"name": "No ongoing rotation process.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/finish",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"finish"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				},
				{
					"name": "Starts tenant token rotation",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tenantTokenRotation/start",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenantTokenRotation",
								"start"
							]
						},
						"description": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation."
					},
					"response": [
						{
							"name": "Success. The new tenant token is created and will replace the old one. The **active** field of the response contains the new tenant token.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"start"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"active\": {\n    \"value\": \"eiusmod occaecat ullamco eli\"\n  },\n  \"old\": {\n    \"value\": \"in quis sunt\"\n  }\n}"
						},
						{
							"name": "Failed. Another rotation process is already in progress.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"start"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"in Ut proident\",\n        \"message\": \"laboris aliqua tempo\",\n        \"path\": \"Lorem dolore deserunt\"\n      },\n      {\n        \"parameterLocation\": \"PATH\",\n        \"location\": \"aliquip consequat in ut\",\n        \"message\": \"ut Duis\",\n        \"path\": \"dolore nostrud dolor sint \"\n      }\n    ],\n    \"message\": \"dolore aliquip\",\n    \"code\": 8470570\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Provides advice for security problems. | maturity=EARLY_ADOPTER",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						},
						{
							"key": "value",
							"value": "Api-Token {{DT_TOKEN}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json; charset=utf-8"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/davis/securityAdvices?managementZoneFilter=nostrud&nextPageKey=nostrud&pageSize=88698957",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"davis",
						"securityAdvices"
					],
					"query": [
						{
							"key": "managementZoneFilter",
							"value": "nostrud",
							"description": "To specify management zones, use one of the options listed below. For each option you can specify multiple comma-separated values. If several values are specified, the **OR** logic applies. All values are case-sensitive and must be quoted. \n\n* Management zone ID: ids(\"mzId-1\", \"mzId-2\"). \n* Management zone names: names(\"mz-1\", \"mz-2\"). \n\nYou can specify several comma-separated criteria (for example, `names(\"myMz\"),ids(\"9130632296508575249\")`)."
						},
						{
							"key": "nextPageKey",
							"value": "nostrud",
							"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
						},
						{
							"key": "pageSize",
							"value": "88698957",
							"description": "The amount of security advices in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 5 is used."
						}
					]
				},
				"description": "You can narrow down the output by providing the management zone and pagination. If you specify a management zone, only problems originating from that zone are included to the request."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "Api-Token {{DT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/davis/securityAdvices?managementZoneFilter=nostrud&nextPageKey=nostrud&pageSize=88698957",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"davis",
								"securityAdvices"
							],
							"query": [
								{
									"key": "managementZoneFilter",
									"value": "nostrud"
								},
								{
									"key": "nextPageKey",
									"value": "nostrud"
								},
								{
									"key": "pageSize",
									"value": "88698957"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						}
					],
					"cookie": [],
					"body": "{\n  \"totalCount\": -11633116,\n  \"pageSize\": -68859120,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n  \"advices\": [\n    {\n      \"name\": \"eiusmod dolore Excepteur adipisicing dolor\",\n      \"vulnerableComponent\": \"veniam sint ut cupidatat\",\n      \"technology\": \"NODE_JS\",\n      \"adviceType\": \"UPGRADE\",\n      \"critical\": [\n        \"dolor aliqua sit pariatur\",\n        \"eu\"\n      ],\n      \"high\": [\n        \"tempor dolore ut\",\n        \"exercitation\"\n      ],\n      \"medium\": [\n        \"pa\",\n        \"commodo in id est\"\n      ],\n      \"low\": [\n        \"mollit in\",\n        \"eu Excepteur\"\n      ],\n      \"none\": [\n        \"adipisicing\",\n        \"voluptate exercitation in sint nostrud\"\n      ]\n    },\n    {\n      \"name\": \"elit quis\",\n      \"vulnerableComponent\": \"cillum culpa\",\n      \"technology\": \"DOTNET\",\n      \"adviceType\": \"UPGRADE\",\n      \"critical\": [\n        \"occaecat aliqua\",\n        \"est\"\n      ],\n      \"high\": [\n        \"exercitation adipisicing reprehenderit in\",\n        \"amet voluptate Lorem\"\n      ],\n      \"medium\": [\n        \"nulla dolor\",\n        \"Duis laboris\"\n      ],\n      \"low\": [\n        \"officia reprehenderit est anim\",\n        \"velit eiusmod exercitation ut culpa\"\n      ],\n      \"none\": [\n        \"magna eu reprehenderit ad\",\n        \"dolor ut proident sunt\"\n      ]\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Implementation of the OTLP/HTTP protocol for trace ingest.",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						},
						{
							"key": "value",
							"value": "Api-Token {{DT_TOKEN}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-protobuf"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  \"aliqua aute Lorem commodo\",\n  \"amet dolore\"\n]"
				},
				"url": {
					"raw": "{{baseUrl}}/otlp/v1/traces",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"otlp",
						"v1",
						"traces"
					]
				},
				"description": "This endpoint can be targeted by OpenTelemetry exporters. Ingested traces are forwarded to the server."
			},
			"response": [
				{
					"name": "The request has been received and will be processed.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "Api-Token {{DT_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"aute nostrud adipisi\",\n  \"exercitation\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/otlp/v1/traces",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otlp",
								"v1",
								"traces"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "The request could not be processed. This may happen if the message is malformed.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "Api-Token {{DT_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"aute nostrud adipisi\",\n  \"exercitation\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/otlp/v1/traces",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otlp",
								"v1",
								"traces"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "The request could not be processed due to an internal server error.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "Api-Token {{DT_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"aute nostrud adipisi\",\n  \"exercitation\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/otlp/v1/traces",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otlp",
								"v1",
								"traces"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "The service is currently unavailable. This may happen if the module is paused.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "Api-Token {{DT_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"aute nostrud adipisi\",\n  \"exercitation\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/otlp/v1/traces",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"otlp",
								"v1",
								"traces"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Returns all releases | maturity=EARLY_ADOPTER",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						},
						{
							"key": "value",
							"value": "Api-Token {{DT_TOKEN}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json; charset=utf-8"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/releases?from=nostrud&to=nostrud&nextPageKey=nostrud&pageSize=88698957&demo=false&releasesSelector=&sort=name",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"releases"
					],
					"query": [
						{
							"key": "from",
							"value": "nostrud",
							"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
						},
						{
							"key": "to",
							"value": "nostrud",
							"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
						},
						{
							"key": "nextPageKey",
							"value": "nostrud",
							"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
						},
						{
							"key": "pageSize",
							"value": "88698957",
							"description": "The amount of Releases in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
						},
						{
							"key": "demo",
							"value": "false",
							"description": "Get your Releases (`false`) or a set of demo Releases (`true`)."
						},
						{
							"key": "releasesSelector",
							"value": "",
							"description": "Defines the scope of the query. Only Releases matching the provided criteria are included in the response.\n\nYou can add one or several of the criteria listed below.\n* ManagementZone: type(PROCESS_GROUP_INSTANCE),mzName(\"ManagementZone-A\"). Filters for all releases in the given ManagementZone. The filter is case-sensitive.\n* Monitoring state: monitoringState(\"Active\") or monitoringState(\"Inactive\"). You can specify only one monitoring state. \n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Name: entityName(\"name\"). Filters for all releases that contain the given value in their name. The filter is case-insensitive.\n* Entity ID: entityId(\"id\").\n* Product: releasesProduct(\"product\"). Filters for all releases that contain the given value in their product. The filter is case-insensitive.\n* Stage: releasesStage(\"stage\"). Filters for all releases that contain the given value in their stage. The filter is case-insensitive.\n* Version: releasesVersion(\"version\"). Filters for all releases that contain the given value in their version. The filter is case-insensitive.\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/releases?releasesSelector=name(\"Server\"),monitoringState(\"Active\"),healthState(\"HEALTHY\"),releasesVersion(\"1.0.7\").\n\nThe special characters ~ and \" need to be escaped using a ~ (e.g. double quote search entityName(\"~\"\")."
						},
						{
							"key": "sort",
							"value": "name",
							"description": "Specifies the field that is used for sorting the releases list.\nThe field has a sign prefix (+/-) which corresponds to the sorting order ('+' for ascending and '-' for descending). If no sign prefix is set, then the default ascending sorting order will be applied. You can sort by the following properties:\n* 'product': Product name\n* 'name': Release name\n* 'stage': Stage name\n* 'version': Version\n* 'instances': Instances\n* 'traffic': Traffic\n\nIf not set, the ascending order sorting for name is applied."
						}
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "Api-Token {{DT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/releases?from=nostrud&to=nostrud&nextPageKey=nostrud&pageSize=88698957&demo=false&releasesSelector=&sort=name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"releases"
							],
							"query": [
								{
									"key": "from",
									"value": "nostrud"
								},
								{
									"key": "to",
									"value": "nostrud"
								},
								{
									"key": "nextPageKey",
									"value": "nostrud"
								},
								{
									"key": "pageSize",
									"value": "88698957"
								},
								{
									"key": "demo",
									"value": "false"
								},
								{
									"key": "releasesSelector",
									"value": ""
								},
								{
									"key": "sort",
									"value": "name"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						}
					],
					"cookie": [],
					"body": "{\n  \"totalCount\": 550429,\n  \"releases\": [\n    {\n      \"instances\": [\n        {\n          \"securityVulnerabilities\": [\n            \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n          ],\n          \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n          \"buildVersion\": \"223005\",\n          \"problems\": [\n            \"573177299181554914_1616573184015V2\"\n          ]\n        },\n        {\n          \"securityVulnerabilities\": [\n            \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n          ],\n          \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n          \"buildVersion\": \"223005\",\n          \"problems\": [\n            \"573177299181554914_1616573184015V2\"\n          ]\n        }\n      ],\n      \"throughput\": 923234,\n      \"affectedBySecurityVulnerabilities\": true,\n      \"releaseEntityId\": \"PROCESS_GROUP-DFDBAC9CBF104253\",\n      \"securityVulnerabilitiesCount\": 4,\n      \"affectedByProblems\": true,\n      \"product\": \"Sockshop\",\n      \"softwareTechs\": [\n        {\n          \"technology\": \"JAVA\",\n          \"edition\": \"OpenJDK\",\n          \"version\": \"1.8.0_242\",\n          \"verbatimType\": \"Java\"\n        }\n      ],\n      \"securityVulnerabilitiesEnabled\": true,\n      \"version\": \"1.195.34.12341232423-012342\",\n      \"running\": true,\n      \"name\": \"cluster\",\n      \"problemCount\": 4,\n      \"stage\": \"staging\"\n    },\n    {\n      \"instances\": [\n        {\n          \"securityVulnerabilities\": [\n            \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n          ],\n          \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n          \"buildVersion\": \"223005\",\n          \"problems\": [\n            \"573177299181554914_1616573184015V2\"\n          ]\n        },\n        {\n          \"securityVulnerabilities\": [\n            \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n          ],\n          \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n          \"buildVersion\": \"223005\",\n          \"problems\": [\n            \"573177299181554914_1616573184015V2\"\n          ]\n        }\n      ],\n      \"throughput\": 923234,\n      \"affectedBySecurityVulnerabilities\": true,\n      \"releaseEntityId\": \"PROCESS_GROUP-DFDBAC9CBF104253\",\n      \"securityVulnerabilitiesCount\": 4,\n      \"affectedByProblems\": true,\n      \"product\": \"Sockshop\",\n      \"softwareTechs\": [\n        {\n          \"technology\": \"JAVA\",\n          \"edition\": \"OpenJDK\",\n          \"version\": \"1.8.0_242\",\n          \"verbatimType\": \"Java\"\n        }\n      ],\n      \"securityVulnerabilitiesEnabled\": true,\n      \"version\": \"1.195.34.12341232423-012342\",\n      \"running\": true,\n      \"name\": \"cluster\",\n      \"problemCount\": 4,\n      \"stage\": \"staging\"\n    }\n  ],\n  \"releasesWithProblems\": 33532803,\n  \"pageSize\": 71657736,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://{{DT_HOST}}/api/v2",
			"type": "string"
		}
	]
}