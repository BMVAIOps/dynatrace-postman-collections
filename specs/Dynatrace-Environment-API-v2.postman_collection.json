{
	"info": {
		"_postman_id": "1a005ba9-853a-4c3b-9bb8-2fa15e070a26",
		"name": "Dynatrace Environment API v2",
		"description": "\nDocumentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress. \n\nIf you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "active Gates",
			"item": [
				{
					"name": "{ag Id}",
					"item": [
						{
							"name": "auto Update",
							"item": [
								{
									"name": "Gets the configuration of auto-update for the specified ActiveGate",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate"
											],
											"variable": [
												{
													"key": "agId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"setting\": \"INHERITED\",\n \"effectiveSetting\": \"ENABLED\"\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								},
								{
									"name": "Updates the configuration of auto-update for the specified ActiveGate",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"setting\": \"INHERITED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate"
											],
											"variable": [
												{
													"key": "agId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The auto-update configuration have been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"setting\": \"INHERITED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted auto-update configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "update Jobs",
							"item": [
								{
									"name": "{job Id}",
									"item": [
										{
											"name": "Gets the parameters of the specified update job",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "deserunt anim occaecat",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "deserunt anim occaecat",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"targetVersion\": \"1.190.0.20200301-130000\",\n \"jobId\": \"-3524498778810258605\",\n \"jobState\": \"SUCCEED\",\n \"updateMethod\": \"AUTOMATIC\",\n \"updateType\": \"ACTIVE_GATE\",\n \"cancelable\": false,\n \"startVersion\": \"1.185.0.20200201-120000\",\n \"timestamp\": 1582031917814,\n \"agType\": \"ENVIRONMENT\",\n \"environments\": [\n  \"et adipisicing amet qui\",\n  \"sed in\"\n ],\n \"error\": \"enim aute\",\n \"duration\": 3608000\n}"
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified update job",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "deserunt anim occaecat",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "deserunt anim occaecat",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The update-job have been deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists update jobs for the specified ActiveGate",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=deserunt anim occaecat&to=deserunt anim occaecat&startVersionCompareType=EQUAL&startVersion=deserunt anim occaecat&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=deserunt anim occaecat&lastUpdates=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"query": [
												{
													"key": "from",
													"value": "deserunt anim occaecat",
													"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days."
												},
												{
													"key": "to",
													"value": "deserunt anim occaecat",
													"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
												},
												{
													"key": "startVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
												},
												{
													"key": "startVersion",
													"value": "deserunt anim occaecat",
													"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "updateType",
													"value": "ACTIVE_GATE",
													"description": "Filters the resulting set of update-jobs by the update type."
												},
												{
													"key": "targetVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
												},
												{
													"key": "targetVersion",
													"value": "deserunt anim occaecat",
													"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "lastUpdates",
													"value": "false",
													"description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
												}
											],
											"variable": [
												{
													"key": "agId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										},
										"description": "The job can update the ActiveGate to the specified version or the latest available one."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=deserunt anim occaecat&to=deserunt anim occaecat&startVersionCompareType=EQUAL&startVersion=deserunt anim occaecat&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=deserunt anim occaecat&lastUpdates=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "to",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "lastUpdates",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"agId\": \"0x3efdd092\",\n \"updateJobs\": [\n  {\n   \"agType\": \"ENVIRONMENT_MULTI\",\n   \"environments\": [\n    \"exercitation reprehenderit\",\n    \"cillum quis nulla proident\"\n   ],\n   \"updateMethod\": \"ON_DEMAND\",\n   \"startVersion\": \"nisi ut\",\n   \"jobState\": \"SCHEDULED\",\n   \"updateType\": \"ACTIVE_GATE\",\n   \"jobId\": \"esse id\",\n   \"cancelable\": true,\n   \"timestamp\": 45472159,\n   \"duration\": -74556300,\n   \"targetVersion\": \"Excepteur\",\n   \"error\": \"in eu tempor voluptate\"\n  },\n  {\n   \"agType\": \"ENVIRONMENT\",\n   \"environments\": [\n    \"pariatur enim labore cupidatat\",\n    \"elit officia tempor ex id\"\n   ],\n   \"updateMethod\": \"ON_DEMAND\",\n   \"startVersion\": \"magna eiusmod culpa commodo veniam\",\n   \"jobState\": \"SCHEDULED\",\n   \"updateType\": \"REMOTE_PLUGIN_AGENT\",\n   \"jobId\": \"eiusmod ad incididunt\",\n   \"cancelable\": true,\n   \"timestamp\": -73411354,\n   \"duration\": 98978157,\n   \"targetVersion\": \"est occaecat\",\n   \"error\": \"exercitation qui in aliqua magna\"\n  }\n ]\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=deserunt anim occaecat&to=deserunt anim occaecat&startVersionCompareType=EQUAL&startVersion=deserunt anim occaecat&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=deserunt anim occaecat&lastUpdates=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "to",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "lastUpdates",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								},
								{
									"name": "Creates a new update job for the specified ActiveGate",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"variable": [
												{
													"key": "agId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The update-job have been created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"targetVersion\": \"1.190.0.20200301-130000\",\n \"jobId\": \"-3524498778810258605\",\n \"jobState\": \"SUCCEED\",\n \"updateMethod\": \"AUTOMATIC\",\n \"updateType\": \"ACTIVE_GATE\",\n \"cancelable\": false,\n \"startVersion\": \"1.185.0.20200201-120000\",\n \"timestamp\": 1582031917814,\n \"agType\": \"ENVIRONMENT\",\n \"environments\": [\n  \"minim est quis Lorem exercitati\",\n  \"ad\"\n ],\n \"error\": \"elit est esse\",\n \"duration\": 3608000\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted update-job is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the details of the specified ActiveGate",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/activeGates/:agId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										":agId"
									],
									"variable": [
										{
											"key": "agId",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the required ActiveGate."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"0x3efdd091\",\n \"networkAddresses\": [\n  \"enim anim labore\",\n  \"exercitation\"\n ],\n \"loadBalancerAddresses\": [\n  \"irure commodo\",\n  \"tempor in aliqua exercitation\"\n ],\n \"osType\": \"WINDOWS\",\n \"autoUpdateStatus\": \"OUTDATED\",\n \"offlineSince\": 1582031917814,\n \"version\": \"1.185.0.20200201-120000\",\n \"type\": \"ENVIRONMENT\",\n \"hostname\": \"exampleHostname\",\n \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n \"environments\": [\n  \"aute eu nisi\",\n  \"exercitation ex\"\n ],\n \"autoUpdateSettings\": {\n  \"setting\": \"INHERITED\",\n  \"effectiveSetting\": \"ENABLED\"\n },\n \"networkZone\": \"exampleNetworkZone\",\n \"group\": \"default\",\n \"modules\": [\n  {\n   \"misconfigured\": true,\n   \"version\": \"ullamco fugia\",\n   \"type\": \"KUBERNETES\",\n   \"attributes\": {},\n   \"enabled\": false\n  },\n  {\n   \"misconfigured\": false,\n   \"version\": \"officia dolor eiusmod sint\",\n   \"type\": \"KUBERNETES\",\n   \"attributes\": {},\n   \"enabled\": false\n  }\n ],\n \"containerized\": true\n}"
								},
								{
									"name": "Not found. See response body for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "auto Update",
					"item": [
						{
							"name": "Gets the global auto-update configuration of environment ActiveGates.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"globalSetting\": \"DISABLED\",\n \"metadata\": {\n  \"configurationVersions\": [\n   4,\n   2\n  ],\n  \"currentConfigurationVersions\": [\n   \"1.0.4\",\n   \"1.23\"\n  ],\n  \"clusterVersion\": \"1.192.1\"\n }\n}"
								}
							]
						},
						{
							"name": "Puts the global auto-update configuration of environment ActiveGates.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"globalSetting\": \"DISABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate"
									]
								}
							},
							"response": [
								{
									"name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"DISABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"DISABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"globalSetting\": \"DISABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"DISABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"DISABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available ActiveGates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/activeGates?hostname=deserunt anim occaecat&osType=LINUX&networkAddress=deserunt anim occaecat&loadBalancerAddress=deserunt anim occaecat&type=ENVIRONMENT_MULTI&networkZone=deserunt anim occaecat&updateStatus=UPDATE_PROBLEM&versionCompareType=EQUAL&version=deserunt anim occaecat&autoUpdate=DISABLED&group=deserunt anim occaecat&online=false&enabledModule=EXTENSIONS_V1&enabledModule=KUBERNETES&disabledModule=EXTENSIONS_V1&disabledModule=KUBERNETES&containerized=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates"
							],
							"query": [
								{
									"key": "hostname",
									"value": "deserunt anim occaecat",
									"description": "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "osType",
									"value": "LINUX",
									"description": "Filters the resulting set of ActiveGates by the OS type of the host it's running on."
								},
								{
									"key": "networkAddress",
									"value": "deserunt anim occaecat",
									"description": "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "loadBalancerAddress",
									"value": "deserunt anim occaecat",
									"description": "Filters the resulting set of ActiveGates by the Load Balancer address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "type",
									"value": "ENVIRONMENT_MULTI",
									"description": "Filters the resulting set of ActiveGates by the ActiveGate type."
								},
								{
									"key": "networkZone",
									"value": "deserunt anim occaecat",
									"description": "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "updateStatus",
									"value": "UPDATE_PROBLEM",
									"description": "Filters the resulting set of ActiveGates by the auto-update status."
								},
								{
									"key": "versionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here."
								},
								{
									"key": "version",
									"value": "deserunt anim occaecat",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here."
								},
								{
									"key": "autoUpdate",
									"value": "DISABLED",
									"description": "Filters the resulting set of ActiveGates by the actual state of auto-update."
								},
								{
									"key": "group",
									"value": "deserunt anim occaecat",
									"description": "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "online",
									"value": "false",
									"description": "Filters the resulting set of ActiveGates by the communication status."
								},
								{
									"key": "enabledModule",
									"value": "EXTENSIONS_V1",
									"description": "Filters the resulting set of ActiveGates by the enabled modules."
								},
								{
									"key": "enabledModule",
									"value": "KUBERNETES",
									"description": "Filters the resulting set of ActiveGates by the enabled modules."
								},
								{
									"key": "disabledModule",
									"value": "EXTENSIONS_V1",
									"description": "Filters the resulting set of ActiveGates by the disabled modules."
								},
								{
									"key": "disabledModule",
									"value": "KUBERNETES",
									"description": "Filters the resulting set of ActiveGates by the disabled modules."
								},
								{
									"key": "containerized",
									"value": "false",
									"description": "Filters the resulting set of ActiveGates to those which are running in container (`true`) or not (`false`)."
								}
							]
						},
						"description": "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=deserunt anim occaecat&osType=LINUX&networkAddress=deserunt anim occaecat&loadBalancerAddress=deserunt anim occaecat&type=ENVIRONMENT_MULTI&networkZone=deserunt anim occaecat&updateStatus=UPDATE_PROBLEM&versionCompareType=EQUAL&version=deserunt anim occaecat&autoUpdate=DISABLED&group=deserunt anim occaecat&online=false&enabledModule=ONE_AGENT_ROUTING&enabledModule=VMWARE&disabledModule=ONE_AGENT_ROUTING&disabledModule=VMWARE&containerized=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "osType",
											"value": "LINUX"
										},
										{
											"key": "networkAddress",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "loadBalancerAddress",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "type",
											"value": "ENVIRONMENT_MULTI"
										},
										{
											"key": "networkZone",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "updateStatus",
											"value": "UPDATE_PROBLEM"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "autoUpdate",
											"value": "DISABLED"
										},
										{
											"key": "group",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "online",
											"value": "false"
										},
										{
											"key": "enabledModule",
											"value": "ONE_AGENT_ROUTING"
										},
										{
											"key": "enabledModule",
											"value": "VMWARE"
										},
										{
											"key": "disabledModule",
											"value": "ONE_AGENT_ROUTING"
										},
										{
											"key": "disabledModule",
											"value": "VMWARE"
										},
										{
											"key": "containerized",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"activeGates\": [\n  {\n   \"id\": \"0x3efdd091\",\n   \"networkAddresses\": [\n    \"deserunt in do\",\n    \"in non temp\"\n   ],\n   \"loadBalancerAddresses\": [\n    \"ea mollit Ut\",\n    \"quis ullamco Excepteur\"\n   ],\n   \"osType\": \"WINDOWS\",\n   \"autoUpdateStatus\": \"OUTDATED\",\n   \"offlineSince\": 1582031917814,\n   \"version\": \"1.185.0.20200201-120000\",\n   \"type\": \"ENVIRONMENT\",\n   \"hostname\": \"exampleHostname\",\n   \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n   \"environments\": [\n    \"in\",\n    \"ut in deserunt aliqua\"\n   ],\n   \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n   },\n   \"networkZone\": \"exampleNetworkZone\",\n   \"group\": \"default\",\n   \"modules\": [\n    {\n     \"misconfigured\": false,\n     \"version\": \"minim laborum\",\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {},\n     \"enabled\": true\n    },\n    {\n     \"misconfigured\": false,\n     \"version\": \"consectetur sint mollit\",\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {},\n     \"enabled\": false\n    }\n   ],\n   \"containerized\": true\n  },\n  {\n   \"id\": \"0x3efdd091\",\n   \"networkAddresses\": [\n    \"Duis pariatur anim\",\n    \"Duis ullamco cillum non\"\n   ],\n   \"loadBalancerAddresses\": [\n    \"qui in\",\n    \"labore proident\"\n   ],\n   \"osType\": \"WINDOWS\",\n   \"autoUpdateStatus\": \"OUTDATED\",\n   \"offlineSince\": 1582031917814,\n   \"version\": \"1.185.0.20200201-120000\",\n   \"type\": \"ENVIRONMENT\",\n   \"hostname\": \"exampleHostname\",\n   \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n   \"environments\": [\n    \"qui\",\n    \"nisi in aute\"\n   ],\n   \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n   },\n   \"networkZone\": \"exampleNetworkZone\",\n   \"group\": \"default\",\n   \"modules\": [\n    {\n     \"misconfigured\": true,\n     \"version\": \"nostrud qui\",\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {},\n     \"enabled\": false\n    },\n    {\n     \"misconfigured\": false,\n     \"version\": \"dolor sit enim\",\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {},\n     \"enabled\": false\n    }\n   ],\n   \"containerized\": true\n  }\n ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=deserunt anim occaecat&osType=LINUX&networkAddress=deserunt anim occaecat&loadBalancerAddress=deserunt anim occaecat&type=ENVIRONMENT_MULTI&networkZone=deserunt anim occaecat&updateStatus=UPDATE_PROBLEM&versionCompareType=EQUAL&version=deserunt anim occaecat&autoUpdate=DISABLED&group=deserunt anim occaecat&online=true&enabledModule=ONE_AGENT_ROUTING&enabledModule=VMWARE&disabledModule=ONE_AGENT_ROUTING&disabledModule=VMWARE&containerized=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "osType",
											"value": "LINUX"
										},
										{
											"key": "networkAddress",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "loadBalancerAddress",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "type",
											"value": "ENVIRONMENT_MULTI"
										},
										{
											"key": "networkZone",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "updateStatus",
											"value": "UPDATE_PROBLEM"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "autoUpdate",
											"value": "DISABLED"
										},
										{
											"key": "group",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "online",
											"value": "true"
										},
										{
											"key": "enabledModule",
											"value": "ONE_AGENT_ROUTING"
										},
										{
											"key": "enabledModule",
											"value": "VMWARE"
										},
										{
											"key": "disabledModule",
											"value": "ONE_AGENT_ROUTING"
										},
										{
											"key": "disabledModule",
											"value": "VMWARE"
										},
										{
											"key": "containerized",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				},
				{
					"name": "List ActiveGates with update jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/activeGates/updateJobs?from=deserunt anim occaecat&to=deserunt anim occaecat&startVersionCompareType=EQUAL&startVersion=deserunt anim occaecat&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=deserunt anim occaecat&lastUpdates=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates",
								"updateJobs"
							],
							"query": [
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days."
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "startVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
								},
								{
									"key": "startVersion",
									"value": "deserunt anim occaecat",
									"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "updateType",
									"value": "ACTIVE_GATE",
									"description": "Filters the resulting set of update-jobs by the update type."
								},
								{
									"key": "targetVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
								},
								{
									"key": "targetVersion",
									"value": "deserunt anim occaecat",
									"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "lastUpdates",
									"value": "false",
									"description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
								}
							]
						},
						"description": "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=deserunt anim occaecat&to=deserunt anim occaecat&startVersionCompareType=EQUAL&startVersion=deserunt anim occaecat&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=deserunt anim occaecat&lastUpdates=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "lastUpdates",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"allUpdateJobs\": [\n  {\n   \"agId\": \"cupidatat est\",\n   \"updateJobs\": [\n    {\n     \"agType\": \"ENVIRONMENT_MULTI\",\n     \"environments\": [\n      \"sunt aute in anim\",\n      \"sit aliqua deserunt t\"\n     ],\n     \"updateMethod\": \"ON_DEMAND\",\n     \"startVersion\": \"ad enim dolore dolore sit\",\n     \"jobState\": \"ROLLBACK\",\n     \"updateType\": \"Z_REMOTE\",\n     \"jobId\": \"Duis aliqua\",\n     \"cancelable\": true,\n     \"timestamp\": 20513336,\n     \"duration\": 94486822,\n     \"targetVersion\": \"aliqua do\",\n     \"error\": \"do id in\"\n    },\n    {\n     \"agType\": \"ENVIRONMENT\",\n     \"environments\": [\n      \"culpa qui et\",\n      \"proident ad\"\n     ],\n     \"updateMethod\": \"AUTOMATIC\",\n     \"startVersion\": \"magna\",\n     \"jobState\": \"SKIPPED\",\n     \"updateType\": \"REMOTE_PLUGIN_AGENT\",\n     \"jobId\": \"eiusmod irure laborum magna ut\",\n     \"cancelable\": true,\n     \"timestamp\": 36628827,\n     \"duration\": -99303086,\n     \"targetVersion\": \"tempor id i\",\n     \"error\": \"officia magna\"\n    }\n   ]\n  },\n  {\n   \"agId\": \"sit\",\n   \"updateJobs\": [\n    {\n     \"agType\": \"ENVIRONMENT\",\n     \"environments\": [\n      \"par\",\n      \"eu\"\n     ],\n     \"updateMethod\": \"MANUAL_INSTALLATION\",\n     \"startVersion\": \"aliquip\",\n     \"jobState\": \"FAILED\",\n     \"updateType\": \"REMOTE_PLUGIN_AGENT\",\n     \"jobId\": \"id au\",\n     \"cancelable\": false,\n     \"timestamp\": -95005050,\n     \"duration\": 34128310,\n     \"targetVersion\": \"ut proident\",\n     \"error\": \"Excepteur aliqua cillum ex in\"\n    },\n    {\n     \"agType\": \"ENVIRONMENT_MULTI\",\n     \"environments\": [\n      \"exercitation labore\",\n      \"dolor\"\n     ],\n     \"updateMethod\": \"AUTOMATIC\",\n     \"startVersion\": \"et sed Ut\",\n     \"jobState\": \"IN_PROGRESS\",\n     \"updateType\": \"SYNTHETIC\",\n     \"jobId\": \"cillum tempor ad pariatur\",\n     \"cancelable\": false,\n     \"timestamp\": 49751602,\n     \"duration\": 68210596,\n     \"targetVersion\": \"enim nulla\",\n     \"error\": \"veniam culpa aute\"\n    }\n   ]\n  }\n ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=deserunt anim occaecat&to=deserunt anim occaecat&startVersionCompareType=EQUAL&startVersion=deserunt anim occaecat&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=deserunt anim occaecat&lastUpdates=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "lastUpdates",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "entities",
			"item": [
				{
					"name": "Gets the information about monitored entities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/entities?nextPageKey=deserunt anim occaecat&pageSize=-84735961&entitySelector=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat&fields=deserunt anim occaecat&sort=deserunt anim occaecat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entities"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "deserunt anim occaecat",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-84735961",
									"description": "The amount of entities. \n\nIf not set, 50 is used."
								},
								{
									"key": "entitySelector",
									"value": "deserunt anim occaecat",
									"description": "Defines the scope of the query. Only entities matching the specified criteria are included into response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET all entity types](https://dt-url.net/dw03s7h) and check the **properties** field. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET all entity types](https://dt-url.net/dw03s7h) and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\nThe field is **required** when you're querying the first page of results."
								},
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "fields",
									"value": "deserunt anim occaecat",
									"description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
								},
								{
									"key": "sort",
									"value": "deserunt anim occaecat",
									"description": "Defines the ordering of the entities returned. \n\nThis field is **optional**, each field has a sign prefix (+/-), which corresponds to sorting order ( + for ascending and - for descending). If no sign prefix is set, then default ascending sorting order will be applied. \n\nCurrently ordering is only available for the display name (for example `sort=name or sort =+name for ascending, sort=-name for descending`)"
								}
							]
						},
						"description": "Lists entities observed within the specified timeframe along with their properties. \n\nWhen you query entities of the `SERVICE_METHOD` type, only the following requests are returned: \n\n* [Key requests](https://dt-url.net/a903u9s) \n* Top X requests that are used for [baselining](https://dt-url.net/0j23uqb) \n* Requests that have caused a [problem](https://dt-url.net/pf43uqg) \n\nYou can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entities?nextPageKey=deserunt anim occaecat&pageSize=-84735961&entitySelector=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat&fields=deserunt anim occaecat&sort=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-84735961"
										},
										{
											"key": "entitySelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "fields",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "sort",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": 69480996,\n \"pageSize\": -54239903,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"entities\": [\n  {\n   \"managementZones\": [\n    {\n     \"name\": \"consequat ex incididunt do\",\n     \"id\": \"culpa voluptate dolore\"\n    },\n    {\n     \"name\": \"commodo eiusmod mollit\",\n     \"id\": \"ullamco sit\"\n    }\n   ],\n   \"entityId\": \"et esse\",\n   \"toRelationships\": {},\n   \"fromRelationships\": {},\n   \"lastSeenTms\": 24873151,\n   \"firstSeenTms\": 56626400,\n   \"icon\": {\n    \"primaryIconType\": \"nostrud irure velit\",\n    \"secondaryIconType\": \"velit labore\",\n    \"customIconPath\": \"Ut cupidatat ir\"\n   },\n   \"properties\": {},\n   \"displayName\": \"sunt qui\",\n   \"tags\": [\n    {\n     \"stringRepresentation\": \"proident aliquip\",\n     \"value\": \"proident\",\n     \"key\": \"id\",\n     \"context\": \"\"\n    },\n    {\n     \"stringRepresentation\": \"in aliqua\",\n     \"value\": \"exercitation voluptate laboris cupidatat\",\n     \"key\": \"Duis esse consectetur in\",\n     \"context\": \"magna ea\"\n    }\n   ]\n  },\n  {\n   \"managementZones\": [\n    {\n     \"name\": \"ipsum adipisicing ut\",\n     \"id\": \"do anim amet non\"\n    },\n    {\n     \"name\": \"cillum ut nisi Ut cupidatat\",\n     \"id\": \"adipisicing reprehenderi\"\n    }\n   ],\n   \"entityId\": \"sint dolore consectetur dolore\",\n   \"toRelationships\": {},\n   \"fromRelationships\": {},\n   \"lastSeenTms\": -85407251,\n   \"firstSeenTms\": 9653437,\n   \"icon\": {\n    \"primaryIconType\": \"dolore do\",\n    \"secondaryIconType\": \"non repre\",\n    \"customIconPath\": \"deserunt eiusmod dolore\"\n   },\n   \"properties\": {},\n   \"displayName\": \"officia\",\n   \"tags\": [\n    {\n     \"stringRepresentation\": \"culpa ex in\",\n     \"value\": \"aliquip sed officia sint\",\n     \"key\": \"velit sint ex inci\",\n     \"context\": \"tempor in ea\"\n    },\n    {\n     \"stringRepresentation\": \"sed elit quis commodo qui\",\n     \"value\": \"nulla ullamco Duis qui\",\n     \"key\": \"do sint qui\",\n     \"context\": \"magna aute eu incididunt\"\n    }\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Creates or updates a custom device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/entities/custom",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entities",
								"custom"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/entities/custom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"entityId\": \"ea enim magna\",\n \"groupId\": \"esse\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/entities/custom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customDeviceId\": \"customDeviceId\",\n    \"displayName\": \"coffeeMachine\",\n    \"group\": \"myCustomDeviceGroup\",\n    \"ipAddresses\": [\n        \"10.0.0.1\"\n    ],\n    \"listenPorts\": [\n        80\n    ],\n    \"faviconUrl\": \"https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png\",\n    \"configUrl\": \"http://coffee-machine.dynatrace.internal.com/coffeemachine/manage\",\n    \"type\": \"coffee machine\",\n    \"properties\": {},\n    \"dnsNames\": [\n        \"coffee-machine.dynatrace.internal.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/entities/custom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										"custom"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Gets the properties of the specified monitored entity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/entities/:entityId?from=deserunt anim occaecat&to=deserunt anim occaecat&fields=deserunt anim occaecat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entities",
								":entityId"
							],
							"query": [
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`)."
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "fields",
									"value": "deserunt anim occaecat",
									"description": "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`)."
								}
							],
							"variable": [
								{
									"key": "entityId",
									"value": "deserunt anim occaecat",
									"description": "(Required) The ID of the required entity."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entities/:entityId?from=deserunt anim occaecat&to=deserunt anim occaecat&fields=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entities",
										":entityId"
									],
									"query": [
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "fields",
											"value": "deserunt anim occaecat"
										}
									],
									"variable": [
										{
											"key": "entityId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"managementZones\": [\n  {\n   \"name\": \"consequat\",\n   \"id\": \"quis deserunt\"\n  },\n  {\n   \"name\": \"ut irure sunt\",\n   \"id\": \"proident reprehenderit minim anim\"\n  }\n ],\n \"entityId\": \"culpa dolore amet\",\n \"toRelationships\": {},\n \"fromRelationships\": {},\n \"lastSeenTms\": 2574795,\n \"firstSeenTms\": 38531076,\n \"icon\": {\n  \"primaryIconType\": \"ea sit do\",\n  \"secondaryIconType\": \"dolor Duis ea ad\",\n  \"customIconPath\": \"id eu enim\"\n },\n \"properties\": {},\n \"displayName\": \"amet et dolore est\",\n \"tags\": [\n  {\n   \"stringRepresentation\": \"proident in sint magna\",\n   \"value\": \"ut ut\",\n   \"key\": \"Excepteur dolore pro\",\n   \"context\": \"cupidatat\"\n  },\n  {\n   \"stringRepresentation\": \"est tempor nulla enim cillum\",\n   \"value\": \"commodo pariatur Duis\",\n   \"key\": \"in\",\n   \"context\": \"sunt proident qui eu culpa\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "entity Types",
			"item": [
				{
					"name": "Gets a list of properties for all entity types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/entityTypes?nextPageKey=deserunt anim occaecat&pageSize=-84735961",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entityTypes"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "deserunt anim occaecat",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-84735961",
									"description": "The amount of entity types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes?nextPageKey=deserunt anim occaecat&pageSize=-84735961",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-84735961"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": 29265865,\n \"pageSize\": -57422045,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"types\": [\n  {\n   \"managementZones\": \"enim id culpa in\",\n   \"toRelationships\": [\n    {\n     \"fromTypes\": [\n      \"irure laboris Duis\",\n      \"sed ad commodo\"\n     ],\n     \"id\": \"officia\"\n    },\n    {\n     \"fromTypes\": [\n      \"labore sed ipsum\",\n      \"fugiat ipsum Lorem laboris dolore\"\n     ],\n     \"id\": \"velit enim\"\n    }\n   ],\n   \"fromRelationships\": [\n    {\n     \"toTypes\": [\n      \"ut\",\n      \"dolore eu cillum\"\n     ],\n     \"id\": \"veniam ea velit mollit\"\n    },\n    {\n     \"toTypes\": [\n      \"ullamco Duis fugiat pariatur\",\n      \"qui\"\n     ],\n     \"id\": \"anim consequat proident amet\"\n    }\n   ],\n   \"entityLimitExceeded\": false,\n   \"dimensionKey\": \"in mollit dolor sunt esse\",\n   \"properties\": [\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\",\n     \"displayName\": \"cpu cores\"\n    },\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\",\n     \"displayName\": \"cpu cores\"\n    }\n   ],\n   \"type\": \"eiusmod ut laborum minim\",\n   \"displayName\": \"esse incididunt sit sint deserunt\",\n   \"tags\": \"nulla quis consectetur ad\"\n  },\n  {\n   \"managementZones\": \"eiusmod eu\",\n   \"toRelationships\": [\n    {\n     \"fromTypes\": [\n      \"Duis\",\n      \"aliqua in culpa ad\"\n     ],\n     \"id\": \"consequat qui sed\"\n    },\n    {\n     \"fromTypes\": [\n      \"non\",\n      \"sit dolor nostrud enim nulla\"\n     ],\n     \"id\": \"aliquip nulla consectetur sed\"\n    }\n   ],\n   \"fromRelationships\": [\n    {\n     \"toTypes\": [\n      \"nisi elit laboris qui\",\n      \"et id veniam\"\n     ],\n     \"id\": \"irure pariatur nostrud est\"\n    },\n    {\n     \"toTypes\": [\n      \"officia do incididunt enim\",\n      \"nisi aliquip exercitation elit dolor\"\n     ],\n     \"id\": \"dolore magna vo\"\n    }\n   ],\n   \"entityLimitExceeded\": false,\n   \"dimensionKey\": \"dolor voluptate et tempor\",\n   \"properties\": [\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\",\n     \"displayName\": \"cpu cores\"\n    },\n    {\n     \"id\": \"cpuCores\",\n     \"type\": \"Number\",\n     \"displayName\": \"cpu cores\"\n    }\n   ],\n   \"type\": \"Ut ex\",\n   \"displayName\": \"eu offici\",\n   \"tags\": \"mollit minim Excepteur tempor in\"\n  }\n ]\n}"
						},
						{
							"name": "Failed. There are no more entity types to export.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes?nextPageKey=deserunt anim occaecat&pageSize=-84735961",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-84735961"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Gets a list of properties for the specified entity type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/entityTypes/:type",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entityTypes",
								":type"
							],
							"variable": [
								{
									"key": "type",
									"value": "deserunt anim occaecat",
									"description": "(Required) The required entity type."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes",
										":type"
									],
									"variable": [
										{
											"key": "type"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"managementZones\": \"est dolor\",\n \"toRelationships\": [\n  {\n   \"fromTypes\": [\n    \"exercitation est amet elit\",\n    \"cupidatat pariatur magna mollit\"\n   ],\n   \"id\": \"nulla ipsum laboris incididunt\"\n  },\n  {\n   \"fromTypes\": [\n    \"cupidatat ut\",\n    \"dolor Excepteur quis cillum do\"\n   ],\n   \"id\": \"non cillum Lorem in a\"\n  }\n ],\n \"fromRelationships\": [\n  {\n   \"toTypes\": [\n    \"incid\",\n    \"laborum veniam aute\"\n   ],\n   \"id\": \"id elit ea sit labore\"\n  },\n  {\n   \"toTypes\": [\n    \"nisi non\",\n    \"cillum ullamco ex voluptate\"\n   ],\n   \"id\": \"cillum tempor amet\"\n  }\n ],\n \"entityLimitExceeded\": false,\n \"dimensionKey\": \"velit ea Ut in\",\n \"properties\": [\n  {\n   \"id\": \"cpuCores\",\n   \"type\": \"Number\",\n   \"displayName\": \"cpu cores\"\n  },\n  {\n   \"id\": \"cpuCores\",\n   \"type\": \"Number\",\n   \"displayName\": \"cpu cores\"\n  }\n ],\n \"type\": \"consectetur eu officia\",\n \"displayName\": \"ea anim\",\n \"tags\": \"sunt sit in\"\n}"
						},
						{
							"name": "Failed. The requested monitored entity type is not exportable or doesn't exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entityTypes/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entityTypes",
										":type"
									],
									"variable": [
										{
											"key": "type"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "logs",
			"item": [
				{
					"name": "Gets aggregated log records | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/logs/aggregate?from=deserunt anim occaecat&to=deserunt anim occaecat&query=&timeBuckets=1&maxGroupValues=10&groupBy=dolor&groupBy=non aliquip qui fugiat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logs",
								"aggregate"
							],
							"query": [
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "query",
									"value": "",
									"description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f). \n\nThe query has a limit of 20 relations (logical operators between simple expressions (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`) in simple expressions)."
								},
								{
									"key": "timeBuckets",
									"value": "1",
									"description": "The number of time slots in the result. \n\nThe query timeframe is divided equally into the specified number of slots. \n\nThe minimum length of a slot is 1 ms. \n\nIf not set, 1 is used."
								},
								{
									"key": "maxGroupValues",
									"value": "10",
									"description": "The maximum number of values in each group. \n\nYou can get up to 100 values per group. \n\nIf not set, 10 is used."
								},
								{
									"key": "groupBy",
									"value": "dolor",
									"description": "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values."
								},
								{
									"key": "groupBy",
									"value": "non aliquip qui fugiat",
									"description": "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values."
								}
							]
						},
						"description": "Returns the aggregated number of occurrences of log values divided into time slots. \n\nIt is possible that the timeframe covered by results exceeds the specified timeframe. In that case the request returns fewer time slots than specified in the **timeBuckets** query parameter."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs/aggregate?from=deserunt anim occaecat&to=deserunt anim occaecat&query=&timeBuckets=1&maxGroupValues=10&groupBy=proident sunt occaecat sint aute&groupBy=et qui",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"aggregate"
									],
									"query": [
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "query",
											"value": ""
										},
										{
											"key": "timeBuckets",
											"value": "1"
										},
										{
											"key": "maxGroupValues",
											"value": "10"
										},
										{
											"key": "groupBy",
											"value": "proident sunt occaecat sint aute"
										},
										{
											"key": "groupBy",
											"value": "et qui"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"aggregationResult\": {}\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs/aggregate?from=deserunt anim occaecat&to=deserunt anim occaecat&query=&timeBuckets=1&maxGroupValues=10&groupBy=proident sunt occaecat sint aute&groupBy=et qui",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"aggregate"
									],
									"query": [
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "query",
											"value": ""
										},
										{
											"key": "timeBuckets",
											"value": "1"
										},
										{
											"key": "maxGroupValues",
											"value": "10"
										},
										{
											"key": "groupBy",
											"value": "proident sunt occaecat sint aute"
										},
										{
											"key": "groupBy",
											"value": "et qui"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				},
				{
					"name": "Reads log records | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/logs/search?from=deserunt anim occaecat&to=deserunt anim occaecat&limit=1000&query=&sort=-timestamp&nextSliceKey=deserunt anim occaecat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logs",
								"search"
							],
							"query": [
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "limit",
									"value": "1000",
									"description": "The desired amount of log records. \n\nThe maximal allowed limit is 1000. \n\nIf not set, 1000 is used."
								},
								{
									"key": "query",
									"value": "",
									"description": "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f). \n\nThe query has a limit of 20 relations (logical operators between simple expressions (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`) in simple expressions)."
								},
								{
									"key": "sort",
									"value": "-timestamp",
									"description": "Defines the ordering of the log records.\n\nEach field has a sign prefix (+/-) for sorting order. If no sign prefix is set, then the `+` option will be applied. \n\nCurrently, ordering is available only for the timestamp (+timestamp for the oldest records first, or -timestamp for the newest records first)."
								},
								{
									"key": "nextSliceKey",
									"value": "deserunt anim occaecat",
									"description": "The cursor for the next slice of results. You can find it in the **nextSliceKey** field of the previous response. \n\nThe first slice is always returned if you don't specify this parameter. \n\nIf this parameter is set, all other query parameters are ignored."
								}
							]
						},
						"description": "Returns the first *X* records (specified in the **limit** query parameter). Log records are sorted by the criteria specified in the **sort** query parameter. \n\nIf the query is too large to be processed in a single request, it is divided into slices. In that case the first response contains the **nextSliceKey** cursor for the second slice. Use it in the **nextSliceKey** query parameter to obtain the second slice, which contains **nextSliceKey** cursor for the third slice, and so on. \n\nResults can be distributed unevenly between slices and some slices might be empty."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs/search?from=deserunt anim occaecat&to=deserunt anim occaecat&limit=1000&query=&sort=-timestamp&nextSliceKey=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"search"
									],
									"query": [
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "limit",
											"value": "1000"
										},
										{
											"key": "query",
											"value": ""
										},
										{
											"key": "sort",
											"value": "-timestamp"
										},
										{
											"key": "nextSliceKey",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"results\": [\n  {\n   \"additionalColumns\": {},\n   \"timestamp\": \"1965-07-09T18:44:38.457Z\",\n   \"content\": \"occaecat irure dolore\",\n   \"status\": \"NONE\"\n  },\n  {\n   \"additionalColumns\": {},\n   \"timestamp\": \"2013-07-09T15:50:10.111Z\",\n   \"content\": \"aliquip officia anim\",\n   \"status\": \"WARN\"\n  }\n ],\n \"sliceSize\": 79513272,\n \"nextSliceKey\": \"ullamco veniam\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs/search?from=deserunt anim occaecat&to=deserunt anim occaecat&limit=1000&query=&sort=-timestamp&nextSliceKey=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"search"
									],
									"query": [
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "limit",
											"value": "1000"
										},
										{
											"key": "query",
											"value": ""
										},
										{
											"key": "sort",
											"value": "-timestamp"
										},
										{
											"key": "nextSliceKey",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				},
				{
					"name": "Pushes log records to Dynatrace | maturity=EARLY_ADOPTER",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"content\": \"example log content 1\",\n        \"log.source\": \"/var/log/syslog\"\n    },\n    {\n        \"content\": \"example log content 2\"\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/logs/ingest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logs",
								"ingest"
							]
						},
						"description": "Ingested logs are stored in the indexed log storage. \n\nThis endpoint requires an Environment or Cluster ActiveGate with the **Log Analytics Collector** module enabled."
					},
					"response": [
						{
							"name": "Success. Some log events were limited.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"content\": \"example log content 1\",\n        \"log.source\": \"/var/log/syslog\"\n    },\n    {\n        \"content\": \"example log content 2\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"details\": {\n  \"message\": \"aliquip in\",\n  \"code\": 35072321\n }\n}"
						},
						{
							"name": "Success. Response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"content\": \"example log content 1\",\n        \"log.source\": \"/var/log/syslog\"\n    },\n    {\n        \"content\": \"example log content 2\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"content\": \"example log content 1\",\n        \"log.source\": \"/var/log/syslog\"\n    },\n    {\n        \"content\": \"example log content 2\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist. This may happen when no Environment or Cluster ActiveGate is available with Log Analytics Collector module enabled.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"content\": \"example log content 1\",\n        \"log.source\": \"/var/log/syslog\"\n    },\n    {\n        \"content\": \"example log content 2\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/logs/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs",
										"ingest"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "metrics",
			"item": [
				{
					"name": "{metric Id}",
					"item": [
						{
							"name": "Gets the descriptor of the specified metric",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/metrics/:metricId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":metricId"
									],
									"variable": [
										{
											"key": "metricId",
											"value": "deserunt anim occaecat",
											"description": "(Required) The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations.\n\n The length of the string is limited to 5,000 characters."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricId"
											],
											"variable": [
												{
													"key": "metricId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"metricId\": \"fugiat\",\n \"lastWritten\": 97560029,\n \"dduBillable\": true,\n \"entityType\": [\n  \"enim ipsum in anim\",\n  \"in aute ad\"\n ],\n \"minimumValue\": -48376099.453802764,\n \"latency\": 49452059,\n \"defaultAggregation\": {\n  \"type\": \"median\",\n  \"parameter\": -58912921.9452111\n },\n \"metricValueType\": {\n  \"type\": \"score\"\n },\n \"rootCauseRelevant\": false,\n \"maximumValue\": -96136096.59489067,\n \"dimensionDefinitions\": [\n  {\n   \"displayName\": \"amet aliquip veniam in\",\n   \"index\": 54645446,\n   \"key\": \"proident\",\n   \"name\": \"sunt offic\",\n   \"type\": \"VOID\"\n  },\n  {\n   \"displayName\": \"Duis sed\",\n   \"index\": 66344166,\n   \"key\": \"commodo labore\",\n   \"name\": \"sit\",\n   \"type\": \"OTHER\"\n  }\n ],\n \"impactRelevant\": false,\n \"aggregationTypes\": [\n  \"value\",\n  \"median\"\n ],\n \"displayName\": \"in officia sed esse\",\n \"description\": \"Lorem sit aute\",\n \"tags\": [\n  \"sit\",\n  \"elit labore\"\n ],\n \"transformations\": [\n  \"last\",\n  \"fold\"\n ],\n \"unit\": \"Percent\",\n \"warnings\": [\n  \"aliquip qui voluptate\",\n  \"et quis incididunt consequat\"\n ],\n \"created\": -87057243\n}"
								},
								{
									"name": "Not found. The requested resource is not found or the query is incorrect.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricId"
											],
											"variable": [
												{
													"key": "metricId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricId"
											],
											"variable": [
												{
													"key": "metricId"
												}
											]
										}
									},
									"status": "Not Acceptable",
									"code": 406,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes the specified metric",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/metrics/:metricId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										":metricId"
									],
									"variable": [
										{
											"key": "metricId",
											"value": "deserunt anim occaecat",
											"description": "(Required) "
										}
									]
								},
								"description": "Deletion cannot be undone! You can't delete a metric if it has data points ingested within the last two hours."
							},
							"response": [
								{
									"name": "Success. The deletion of the metric has been triggered.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricId"
											],
											"variable": [
												{
													"key": "metricId"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The metric has been written within the last two hours.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricId"
											],
											"variable": [
												{
													"key": "metricId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The metric cannot be found or the key cannot be parsed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricId"
											],
											"variable": [
												{
													"key": "metricId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The deletion of metric dimensions failed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metricId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metricId"
											],
											"variable": [
												{
													"key": "metricId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all available metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/metrics?nextPageKey=deserunt anim occaecat&pageSize=-84735961&metricSelector=deserunt anim occaecat&text=deserunt anim occaecat&fields=deserunt anim occaecat&writtenSince=deserunt anim occaecat&metadataSelector=deserunt anim occaecat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "deserunt anim occaecat",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-84735961",
									"description": "The amount of primary entities in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.\n\n If a value higher than 500 is used, only 500 results per page are returned."
								},
								{
									"key": "metricSelector",
									"value": "deserunt anim occaecat",
									"description": "Selects metrics for the query by their keys.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can select a full set of related metrics by using a trailing asterisk (`*`) wildcard. For example, `builtin:host.*` selects all host-based metrics and `builtin:*` selects all Dynatrace-provided metrics. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations.\n\n Only `aggregation`, `merge`, `parents`, and `splitBy` transformations are supported by this endpoint.\n\n The length of the string is limited to 5,000 characters.\n\n To find metrics based on a search term, rather than metricId, use the **text** query parameter instead of this one."
								},
								{
									"key": "text",
									"value": "deserunt anim occaecat",
									"description": "Metric registry search term. Only show metrics that contain the term in their key, display name, or description. Use the `metricSelector` parameter instead of this one to select a complete metric hierarchy instead of doing a text-based search."
								},
								{
									"key": "fields",
									"value": "deserunt anim occaecat",
									"description": "Defines the list of metric properties included in the response. \n\n`metricId` is **always** included in the result. The following additional properties are available: \n\n* `displayName`: The name of the metric in the user interface. Enabled by default. \n* `description`: A short description of the metric. Enabled by default. \n* `unit`: The unit of the metric. Enabled by default. \n* `tags`: The tags of the metric. \n+ `dduBillable`:  An indicator whether the usage of metric consumes [Davis data units](https://dt-url.net/ddu). \n* `created`:  The timestamp (UTC milliseconds) when the metrics has been created. \n* `lastWritten`:  The timestamp (UTC milliseconds) when metric data points have been written for the last time. \n* `aggregationTypes`: The list of allowed aggregations for the metric. Note that it may be different after a [transformation](https://dt-url.net/metricSelector) is applied. \n* `defaultAggregation`: The default aggregation of the metric. It is used when no aggregation is specified or the `:auto` transformation is set. \n* `dimensionDefinitions`: The fine metric division (for example, process group and process ID for some process-related metric). \n* `transformations`: A list of [transformations](https://dt-url.net/metricSelector) that can be applied to the metric.\n* `entityType`: A list of entity types supported by the metric.\n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`. \n\nTo specify several properties, join them with a comma (for example `fields=+aggregationTypes,-description`).\n\nIf you specify just one property, the response contains the metric key and the specified property. To return metric keys only, specify `metricId` here."
								},
								{
									"key": "writtenSince",
									"value": "deserunt anim occaecat",
									"description": "Filters the resulted set of metrics to those that have data points within the specified timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
								},
								{
									"key": "metadataSelector",
									"value": "deserunt anim occaecat",
									"description": "The metadata scope of the query. Only metrics with specified properties are included to the response. \n\nYou can set one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used. If several values are specified, the **OR** logic applies. \n\n* `unit(\"unit-1\",\"unit-2\")` \n* `tags(\"tag-1\",\"tag-2\")` \n\nTo set several criteria, separate them with a comma (`,`). For example, `tags(\"feature\",\"cloud\"),unit(\"Percent\")`. Only results matching **all** criteria are included in response. \n\nFor example, to list metrics that have the tags **feature** AND **cloud** with a unit of **Percent** OR **MegaByte**, use this **metadataSelector**: `tags(\"feature\"),unit(\"Percent\",\"MegaByte\"),tags(\"cloud\")`."
								}
							]
						},
						"description": "You can narrow down the output by selecting metrics in the **metricSelector** field. \n\nYou can additionally limit the output by using pagination: \n\n1. Specify the number of results per page in the **pageSize** query parameter. \n\n2. Then use the cursor from the **nextPageKey** field of the response in the **nextPageKey** query parameter to obtain subsequent pages. All other query parameters must be omitted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=deserunt anim occaecat&pageSize=-84735961&metricSelector=deserunt anim occaecat&text=deserunt anim occaecat&fields=deserunt anim occaecat&writtenSince=deserunt anim occaecat&metadataSelector=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-84735961"
										},
										{
											"key": "metricSelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "text",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "fields",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "writtenSince",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "metadataSelector",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"nextPageKey\": \"consectetur\",\n \"totalCount\": 97917165,\n \"metrics\": [\n  {\n   \"metricId\": \"sit officia laboris\",\n   \"lastWritten\": -60019451,\n   \"dduBillable\": true,\n   \"entityType\": [\n    \"tempor\",\n    \"deserunt ad pariatur dolore\"\n   ],\n   \"minimumValue\": -52394363.19448832,\n   \"latency\": -56247190,\n   \"defaultAggregation\": {\n    \"type\": \"sum\",\n    \"parameter\": 27306349.76403205\n   },\n   \"metricValueType\": {\n    \"type\": \"score\"\n   },\n   \"rootCauseRelevant\": false,\n   \"maximumValue\": -19721775.994209215,\n   \"dimensionDefinitions\": [\n    {\n     \"displayName\": \"quis occaecat velit ut\",\n     \"index\": 35269301,\n     \"key\": \"culpa adipisicing i\",\n     \"name\": \"in consectetur dolor\",\n     \"type\": \"STRING\"\n    },\n    {\n     \"displayName\": \"in Excepteur amet sed\",\n     \"index\": 28993415,\n     \"key\": \"ut consequat\",\n     \"name\": \"et occaecat ullamco culp\",\n     \"type\": \"OTHER\"\n    }\n   ],\n   \"impactRelevant\": false,\n   \"aggregationTypes\": [\n    \"sum\",\n    \"percentile\"\n   ],\n   \"displayName\": \"ex nostrud dolor ut\",\n   \"description\": \"quis enim\",\n   \"tags\": [\n    \"irure occaecat eiusmod fugiat\",\n    \"laboris ipsum exercitation proident\"\n   ],\n   \"transformations\": [\n    \"parents\",\n    \"splitBy\"\n   ],\n   \"unit\": \"Cores\",\n   \"warnings\": [\n    \"magna in\",\n    \"elit cupidatat\"\n   ],\n   \"created\": -22769993\n  },\n  {\n   \"metricId\": \"Ut Excepteur cillum ullamco dolor\",\n   \"lastWritten\": -2387497,\n   \"dduBillable\": true,\n   \"entityType\": [\n    \"aute\",\n    \"ad Ut\"\n   ],\n   \"minimumValue\": -90704716.14206253,\n   \"latency\": 54735513,\n   \"defaultAggregation\": {\n    \"type\": \"min\",\n    \"parameter\": 99207609.420351\n   },\n   \"metricValueType\": {\n    \"type\": \"unknown\"\n   },\n   \"rootCauseRelevant\": false,\n   \"maximumValue\": 82714627.48306996,\n   \"dimensionDefinitions\": [\n    {\n     \"displayName\": \"enim fugiat anim\",\n     \"index\": -60627728,\n     \"key\": \"sunt magna elit\",\n     \"name\": \"dolor\",\n     \"type\": \"STRING\"\n    },\n    {\n     \"displayName\": \"magna eiusmod laboris reprehenderit\",\n     \"index\": 55141932,\n     \"key\": \"laborum nisi ut\",\n     \"name\": \"sed officia dolore cillum labore\",\n     \"type\": \"ENTITY\"\n    }\n   ],\n   \"impactRelevant\": false,\n   \"aggregationTypes\": [\n    \"min\",\n    \"max\"\n   ],\n   \"displayName\": \"commodo occaecat minim\",\n   \"description\": \"nisi aliqua\",\n   \"tags\": [\n    \"ut sed Ut laboris non\",\n    \"proident quis minim\"\n   ],\n   \"transformations\": [\n    \"splitBy\",\n    \"timeshift\"\n   ],\n   \"unit\": \"Bit\",\n   \"warnings\": [\n    \"anim id qui\",\n    \"occaecat veniam cillum dolore\"\n   ],\n   \"created\": 51373221\n  }\n ],\n \"warnings\": [\n  \"pariatur Lorem occaecat Ut ex\",\n  \"elit dolore dolor pariatur cupidatat\"\n ]\n}"
						},
						{
							"name": "Syntax or validation error. **metricSelector** or **fields** have syntactic or semantic errors.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=deserunt anim occaecat&pageSize=-84735961&metricSelector=deserunt anim occaecat&text=deserunt anim occaecat&fields=deserunt anim occaecat&writtenSince=deserunt anim occaecat&metadataSelector=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-84735961"
										},
										{
											"key": "metricSelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "text",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "fields",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "writtenSince",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "metadataSelector",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found. The requested resource is not found or the query is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=deserunt anim occaecat&pageSize=-84735961&metricSelector=deserunt anim occaecat&text=deserunt anim occaecat&fields=deserunt anim occaecat&writtenSince=deserunt anim occaecat&metadataSelector=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-84735961"
										},
										{
											"key": "metricSelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "text",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "fields",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "writtenSince",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "metadataSelector",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?nextPageKey=deserunt anim occaecat&pageSize=-84735961&metricSelector=deserunt anim occaecat&text=deserunt anim occaecat&fields=deserunt anim occaecat&writtenSince=deserunt anim occaecat&metadataSelector=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-84735961"
										},
										{
											"key": "metricSelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "text",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "fields",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "writtenSince",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "metadataSelector",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Gets data points of the specified metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/metrics/query?metricSelector=deserunt anim occaecat&resolution=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat&entitySelector=deserunt anim occaecat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								"query"
							],
							"query": [
								{
									"key": "metricSelector",
									"value": "deserunt anim occaecat",
									"description": "Selects metrics for the query by their keys. You can select up to 10 metrics for one query.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations.\n\n If the metric key contains whitespaces, they must be escaped with a tilde (`~`). For example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents of Type 'APACHE'** you must specify this selector: \n\n`ext:selfmonitoring.jmx.Agents~ of~ Type~ 'APACHE'`\n\n The length of the string is limited to 5,000 characters."
								},
								{
									"key": "resolution",
									"value": "deserunt anim occaecat",
									"description": "The desired resolution of data points. \n\nYou can use one of the following options: \n* One aggregated data point of each series. Set `Inf` to use this option. \n* The desired amount of data points. This is the default option. This is a reference number of points, which is not necessarily equal to the number of the returned data points. \n* The desired timespan between data points. This is a reference timespan, which is not necessarily equal to the returned timespan. To use this option, specify the unit of the timespan. \n\nValid units for the timespan are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the default is **120 data points**.\n\nFor example: \n\n* Get data points which are 10 minutes apart: `resolution=10m` \n* Get data points which are 3 weeks apart: `resolution=3w`"
								},
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "entitySelector",
									"value": "deserunt anim occaecat",
									"description": "Specifies the entity scope of the query. Only data points delivered by matched entities are included in response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET all entity types](https://dt-url.net/dw03s7h) and check the **properties** field. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET all entity types](https://dt-url.net/dw03s7h) and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\nUse the [`GET /metrics/{metricId}`](https://dt-url.net/6z23ifk) call to fetch the list of possible entity types for your metric. \n\nTo set a universal scope matching all entities, omit this parameter."
								}
							]
						},
						"description": "The following limits apply: \n* The amount of aggregated data points in the response is limited to 1,000 \n* The amount of series in the response is limited to 1,000 \n   * The amount of data points per series is limited to 10,080 (minutes of one week) \n   * The overall amount of data points is limited to 100,000 \n"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=deserunt anim occaecat&resolution=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat&entitySelector=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "resolution",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "entitySelector",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"nextPageKey\": \"commodo\",\n \"totalCount\": -24455430,\n \"result\": [\n  {\n   \"metricId\": \"aliquip dolor Excepteur\",\n   \"data\": [\n    {\n     \"dimensionMap\": {},\n     \"timestamps\": [\n      66424704,\n      -23996258\n     ],\n     \"dimensions\": [\n      \"laborum ea\",\n      \"do\"\n     ],\n     \"values\": [\n      -43252243.62979636,\n      70791669.3904357\n     ]\n    },\n    {\n     \"dimensionMap\": {},\n     \"timestamps\": [\n      87570467,\n      -30347356\n     ],\n     \"dimensions\": [\n      \"officia dolor ea\",\n      \"elit ullamco voluptate sit incididunt\"\n     ],\n     \"values\": [\n      -29518457.039281204,\n      44621863.488597184\n     ]\n    }\n   ],\n   \"warnings\": [\n    \"esse inci\",\n    \"sit in exercitation\"\n   ]\n  },\n  {\n   \"metricId\": \"tempor ad ullamco\",\n   \"data\": [\n    {\n     \"dimensionMap\": {},\n     \"timestamps\": [\n      16479125,\n      378802\n     ],\n     \"dimensions\": [\n      \"laboris dolore id fugiat voluptate\",\n      \"nisi dolore exercitation es\"\n     ],\n     \"values\": [\n      94871459.88058624,\n      36320133.48672962\n     ]\n    },\n    {\n     \"dimensionMap\": {},\n     \"timestamps\": [\n      -22737705,\n      66894294\n     ],\n     \"dimensions\": [\n      \"do cillum\",\n      \"magna ullamco sunt\"\n     ],\n     \"values\": [\n      69193914.72194326,\n      2703903.91555129\n     ]\n    }\n   ],\n   \"warnings\": [\n    \"labore\",\n    \"eu incididunt\"\n   ]\n  }\n ],\n \"warnings\": [\n  \"est tempor in anim\",\n  \"incididunt eiusmod nostrud in\"\n ]\n}"
						},
						{
							"name": "Syntax or validation error. From and to parameters, scope or resolution are incorrect individually or in their combined meaning.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=deserunt anim occaecat&resolution=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat&entitySelector=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "resolution",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "entitySelector",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The request is valid but the response is too big to process. Split your query into several queries with limited scopes.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=deserunt anim occaecat&resolution=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat&entitySelector=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "resolution",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "entitySelector",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found. The requested resource is not found or the query is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=deserunt anim occaecat&resolution=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat&entitySelector=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "resolution",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "entitySelector",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/query?metricSelector=deserunt anim occaecat&resolution=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat&entitySelector=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"query"
									],
									"query": [
										{
											"key": "metricSelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "resolution",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "entitySelector",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Pushes metric data points to Dynatrace",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"server.cpu.temperature,cpu.id=0 42\""
						},
						"url": {
							"raw": "{{baseUrl}}/metrics/ingest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								"ingest"
							]
						}
					},
					"response": [
						{
							"name": "The provided metric data points are accepted and will be processed in the background.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"server.cpu.temperature,cpu.id=0 42\""
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"ingest"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Some data points are invalid. Valid data points are accepted and will be processed in the background.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"server.cpu.temperature,cpu.id=0 42\""
								},
								"url": {
									"raw": "{{baseUrl}}/metrics/ingest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"ingest"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "network Zones",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets parameters of the specified network zone | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the required network zone."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"alternativeZones\": [\n  \"amet dolore culpa irure pariatur\",\n  \"labor\"\n ],\n \"numOfOneAgentsUsing\": 91279366,\n \"numOfConfiguredOneAgents\": -86426665,\n \"numOfOneAgentsFromOtherZones\": 47455020,\n \"numOfConfiguredActiveGates\": 10909687,\n \"id\": \"in anim\",\n \"description\": \"id consectetur adipisicing\"\n}"
								}
							]
						},
						{
							"name": "Updates an existing network zone or creates a new one | maturity=EARLY_ADOPTER",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alternativeZones\": [\n        \"mollit aliqua velit\",\n        \"occaecat dolor consequat\"\n    ],\n    \"description\": \"aliquip eiusmod enim minim\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
										}
									]
								},
								"description": "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
							},
							"response": [
								{
									"name": "Success. The new network zone has been created. The response body contains the ID of the new network zone.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"mollit aliqua velit\",\n        \"occaecat dolor consequat\"\n    ],\n    \"description\": \"aliquip eiusmod enim minim\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"sint cillum culpa et\",\n \"name\": \"sit mollit eiusmod\",\n \"description\": \"\"\n}"
								},
								{
									"name": "Success. The network zone has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"mollit aliqua velit\",\n        \"occaecat dolor consequat\"\n    ],\n    \"description\": \"aliquip eiusmod enim minim\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"mollit aliqua velit\",\n        \"occaecat dolor consequat\"\n    ],\n    \"description\": \"aliquip eiusmod enim minim\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified network zone | maturity=EARLY_ADOPTER",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the network zone to be deleted."
										}
									]
								},
								"description": "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives."
							},
							"response": [
								{
									"name": "Deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. See error message in the response body for details.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all existing network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/networkZones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZones"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"networkZones\": [\n  {\n   \"alternativeZones\": [\n    \"voluptate\",\n    \"irure \"\n   ],\n   \"numOfOneAgentsUsing\": -7187679,\n   \"numOfConfiguredOneAgents\": -24482827,\n   \"numOfOneAgentsFromOtherZones\": 52040586,\n   \"numOfConfiguredActiveGates\": -32424091,\n   \"id\": \"exercitatio\",\n   \"description\": \"tempor mollit aute\"\n  },\n  {\n   \"alternativeZones\": [\n    \"magna pariatur\",\n    \"Ut pariatur\"\n   ],\n   \"numOfOneAgentsUsing\": -82553070,\n   \"numOfConfiguredOneAgents\": -17583887,\n   \"numOfOneAgentsFromOtherZones\": 3971326,\n   \"numOfConfiguredActiveGates\": 88643848,\n   \"id\": \"cupidatat\",\n   \"description\": \"sint elit eiusmod ut\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "network Zone Settings",
			"item": [
				{
					"name": "Gets the global configuration of network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/networkZoneSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZoneSettings"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZoneSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZoneSettings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"networkZonesEnabled\": true\n}"
						}
					]
				},
				{
					"name": "Updates the global configuration of network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"networkZonesEnabled\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/networkZoneSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZoneSettings"
							]
						}
					},
					"response": [
						{
							"name": "Success. The global network zones configuration has been updated. Response doesn't have a body.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"networkZonesEnabled\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networkZoneSettings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZoneSettings"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "tags",
			"item": [
				{
					"name": "Gets a list of custom tags applied to the specified entities | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags?entitySelector=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "entitySelector",
									"value": "deserunt anim occaecat",
									"description": "(Required) Specifies the entities where you want to read tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET all entity types](https://dt-url.net/dw03s7h) and check the **properties** field. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET all entity types](https://dt-url.net/dw03s7h) and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								},
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								}
							]
						},
						"description": "Automatically applied tags and imported tags are not included."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?entitySelector=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "entitySelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"tags\": {\n  \"empty\": true\n },\n \"totalCount\": 7307300\n}"
						}
					]
				},
				{
					"name": "Adds custom tags to the specified entities | maturity=EARLY_ADOPTER",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tags\": [\n        {\n            \"key\": \"mainApp\"\n        },\n        {\n            \"key\": \"bookings\",\n            \"value\": \"42\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tags?entitySelector=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "entitySelector",
									"value": "deserunt anim occaecat",
									"description": "(Required) Specifies the entities where you want to update tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET all entity types](https://dt-url.net/dw03s7h) and check the **properties** field. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET all entity types](https://dt-url.net/dw03s7h) and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								},
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								}
							]
						},
						"description": "All existing tags remain unaffected."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tags\": [\n        {\n            \"key\": \"mainApp\"\n        },\n        {\n            \"key\": \"bookings\",\n            \"value\": \"42\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tags?entitySelector=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "entitySelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"appliedTags\": {\n  \"empty\": true\n },\n \"matchedEntitiesCount\": -53265421\n}"
						}
					]
				},
				{
					"name": "Deletes the specified tag from the specified entities | maturity=EARLY_ADOPTER",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags?key=officia veniam dolor laboris&value=deserunt anim occaecat&deleteAllWithKey=true&entitySelector=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "key",
									"value": "officia veniam dolor laboris",
									"description": "(Required) The tag to be deleted."
								},
								{
									"key": "value",
									"value": "deserunt anim occaecat",
									"description": "The tag to be deleted."
								},
								{
									"key": "deleteAllWithKey",
									"value": "true",
									"description": "The tag to be deleted."
								},
								{
									"key": "entitySelector",
									"value": "deserunt anim occaecat",
									"description": "(Required) Specifies the entities where you want to delete tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET all entity types](https://dt-url.net/dw03s7h) and check the **properties** field. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET all entity types](https://dt-url.net/dw03s7h) and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\n"
								},
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`)."
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?key=officia veniam dolor laboris&value=deserunt anim occaecat&deleteAllWithKey=true&entitySelector=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "key",
											"value": "officia veniam dolor laboris"
										},
										{
											"key": "value",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "deleteAllWithKey",
											"value": "true"
										},
										{
											"key": "entitySelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"matchedEntitiesCount\": 2\n}"
						}
					]
				}
			]
		},
		{
			"name": "api Tokens",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets API token metadata by token ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apiTokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the token."
										}
									]
								},
								"description": "The token secret is **not** exposed."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n \"personalAccessToken\": true,\n \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n \"lastUsedIpAddress\": \"34.197.2.44\",\n \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n \"scopes\": [\n  \"metrics.read\",\n  \"metrics.read\"\n ],\n \"name\": \"myToken\",\n \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n \"owner\": \"john.smith\",\n \"enabled\": true\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates an API token",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"myToken\",\n    \"enabled\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"myToken\",\n    \"enabled\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"myToken\",\n    \"enabled\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								}
							]
						},
						{
							"name": "Deletes an API token",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apiTokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. You can't delete the token you're using for authentication of the request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apiTokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apiTokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all available API tokens",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/apiTokens?nextPageKey=deserunt anim occaecat&pageSize=-80447556&apiTokenSelector=deserunt anim occaecat&fields=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat&sort=-creationDate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apiTokens"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "deserunt anim occaecat",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-80447556",
									"description": "The amount of API tokens in a single response payload. \n\nThe maximal allowed page size is 10000 and the minimal allowed page size is 100. \n\nIf not set, 200 is used."
								},
								{
									"key": "apiTokenSelector",
									"value": "deserunt anim occaecat",
									"description": "Filters the resulting sets of tokens. Only tokens matching the specified criteria are included into response. \n\nYou can set one or more of the following criteria: \n\n* Owner: `owner(\"value\")`. The user that owns the token. Case-sensitive.\n* Personal access token: `personalAccessToken(false)`. Set to `true` to include only personal access tokens or to `false` to include only API tokens.\n* Token scope: `scope(\"scope1\",\"scope2\")`. If several values are specified, the **OR** logic applies. \n\nTo set multiple criteria, separate them with commas (`,`). Only results matching **all** criteria are included into response."
								},
								{
									"key": "fields",
									"value": "deserunt anim occaecat",
									"description": "Specifies the fields to be included in the response.\n\nThe following fields are included by default: \n\n* `id` \n* `name` \n* `enabled` \n* `owner` \n* `creationDate` \n\nTo remove fields from the response, specify them with the minus (`-`) operator as a comma-separated list (for example, `-creationDate,-owner`). \n\nYou can include additional fields: \n\n* `personalAccessToken` \n* `expirationDate` \n* `lastUsedDate` \n* `lastUsedIpAddress` \n* `scopes` \n\nTo add fields to the response, specify them with the plus (`+`) operator as a comma-separated list (for example, `+expirationDate,+scopes`). You can combine adding and removing of fields (for example, `+scopes,-creationDate`). \n\nAlternatively, you can define the desired set of fields in the response. Specify the required fields as a comma-separated list, without operators (for example, `creationDate,expirationDate,owner`). The ID is always included in the response. \n\nThe **fields** string must be URL-encoded."
								},
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "Filters tokens based on the last usage time. \nThe start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n"
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "Filters tokens based on the last usage time. \nThe end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "sort",
									"value": "-creationDate",
									"description": "The sort order of the token list. \n\nYou can sort by the following properties with a sign prefix for the sort order: \n\n * `name`: token name (`+` a...z or `-` z...a) \n * `lastUsedDate` last used (`+` never used tokens first `-` most recently used tokens first) \n * `creationDate` (`+` oldest tokens first `-` newest tokens first) \n * `expirationDate` (`+` tokens that expire soon first `-` unlimited tokens first) \n\nIf no prefix is set, + is used. \n\nIf not set, tokens are sorted by creation date with newest first."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apiTokens?nextPageKey=deserunt anim occaecat&pageSize=-80447556&apiTokenSelector=deserunt anim occaecat&fields=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat&sort=-creationDate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-80447556"
										},
										{
											"key": "apiTokenSelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "fields",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "sort",
											"value": "-creationDate"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": 8135938,\n \"apiTokens\": [\n  {\n   \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n   \"personalAccessToken\": true,\n   \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n   \"lastUsedIpAddress\": \"34.197.2.44\",\n   \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n   \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n   ],\n   \"name\": \"myToken\",\n   \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n   \"owner\": \"john.smith\",\n   \"enabled\": true\n  },\n  {\n   \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n   \"personalAccessToken\": true,\n   \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n   \"lastUsedIpAddress\": \"34.197.2.44\",\n   \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n   \"scopes\": [\n    \"metrics.read\",\n    \"metrics.read\"\n   ],\n   \"name\": \"myToken\",\n   \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n   \"owner\": \"john.smith\",\n   \"enabled\": true\n  }\n ],\n \"pageSize\": 59623069,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apiTokens?nextPageKey=deserunt anim occaecat&pageSize=-80447556&apiTokenSelector=deserunt anim occaecat&fields=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat&sort=-creationDate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-80447556"
										},
										{
											"key": "apiTokenSelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "fields",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "sort",
											"value": "-creationDate"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				},
				{
					"name": "Creates a new API token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"tokenName\",\n    \"scopes\": [\n        \"metrics.read\"\n    ],\n    \"personalAccessToken\": false,\n    \"expirationDate\": \"now+14d\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/apiTokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apiTokens"
							]
						},
						"description": "The newly created token will be owned by the same user who owns the token used for authentication of the call."
					},
					"response": [
						{
							"name": "Success. The token has been created. The body of the response contains the token secret.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"tokenName\",\n    \"scopes\": [\n        \"metrics.read\"\n    ],\n    \"personalAccessToken\": false,\n    \"expirationDate\": \"now+14d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\",\n \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"tokenName\",\n    \"scopes\": [\n        \"metrics.read\"\n    ],\n    \"personalAccessToken\": false,\n    \"expirationDate\": \"now+14d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				},
				{
					"name": "Gets API token metadata by token secret",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/apiTokens/lookup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apiTokens",
								"lookup"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens/lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										"lookup"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"expirationDate\": \"2020-11-12T08:15:30.144Z\",\n \"personalAccessToken\": true,\n \"lastUsedDate\": \"2020-11-12T08:15:30.144Z\",\n \"lastUsedIpAddress\": \"34.197.2.44\",\n \"creationDate\": \"2020-11-05T08:15:30.144Z\",\n \"scopes\": [\n  \"metrics.read\",\n  \"metrics.read\"\n ],\n \"name\": \"myToken\",\n \"id\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN\",\n \"owner\": \"john.smith\",\n \"enabled\": true\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/apiTokens/lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apiTokens",
										"lookup"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "auditlogs",
			"item": [
				{
					"name": "Gets the audit log of your Dynatrace environment | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auditlogs?nextPageKey=deserunt anim occaecat&pageSize=-84735961&filter=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat&sort=-timestamp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auditlogs"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "deserunt anim occaecat",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-84735961",
									"description": "The amount of log entries in a single response payload. \n\nThe maximal allowed page size is 5000. \n\nIf not set, 1000 is used."
								},
								{
									"key": "filter",
									"value": "deserunt anim occaecat",
									"description": "Filters the audit log. You can use the following criteria: \n* User: `user(\"userIdentification\")`. The `EQUALS` operator applies. \n* Event type: `eventType(\"value\")`. The `EQUALS` operator applies. \n* Category of a logged operation: `category(\"value\")`. The `EQUALS` operator applies. \n* Entity ID: `entityId(\"id\")`. The `CONTAINS` operator applies. \n\nFor each criterion, you can specify multiple alternatives with comma-separated values. In this case, the OR logic applies. For example, `eventType(\"CREATE\",\"UPDATE\")` means eventType can be \"CREATE\" or \"UPDATE\". \n\nYou can specify multiple comma-separated criteria, such as `eventType(\"CREATE\",\"UPDATE\"),category(\"CONFIG\")`. Only results matching **all** criteria are included in response. \n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes: \n* Tilde `~` \n* Quote `\"`"
								},
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "sort",
									"value": "-timestamp",
									"description": "The sorting of audit log entries: \n* `timestamp`: Oldest first. \n* `-timestamp`: Newest first. \n\nIf not set, the newest first sorting is applied."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs?nextPageKey=deserunt anim occaecat&pageSize=-84735961&filter=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat&sort=-timestamp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-84735961"
										},
										{
											"key": "filter",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "sort",
											"value": "-timestamp"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -78215790,\n \"pageSize\": -995807,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"auditLogs\": [\n  {\n   \"category\": \"WEB_UI\",\n   \"environmentId\": \"sit\",\n   \"eventType\": \"READ\",\n   \"logId\": \"aute ess\",\n   \"success\": false,\n   \"timestamp\": -84835776,\n   \"user\": \"Duis est quis\",\n   \"userType\": \"TOKEN_HASH\",\n   \"entityId\": \"ex dolor Excepteur\",\n   \"userOrigin\": \"minim in consectetur ut\",\n   \"message\": \"consequat Duis non reprehenderit\",\n   \"patch\": {}\n  },\n  {\n   \"category\": \"WEB_UI\",\n   \"environmentId\": \"irure minim nisi\",\n   \"eventType\": \"UPDATE\",\n   \"logId\": \"e\",\n   \"success\": true,\n   \"timestamp\": 14489749,\n   \"user\": \"eu occaecat\",\n   \"userType\": \"PUBLIC_TOKEN_IDENTIFIER\",\n   \"entityId\": \"proident elit Duis ut aliqua\",\n   \"userOrigin\": \"eiusmod exercitation sint\",\n   \"message\": \"pariatur sed sint consectetur\",\n   \"patch\": {}\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Gets the specified entry of the audit log | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auditlogs/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auditlogs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "do",
									"description": "(Required) The ID of the required log entry."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"category\": \"CONFIG\",\n \"environmentId\": \"mollit culpa cupidatat\",\n \"eventType\": \"READ\",\n \"logId\": \"nostru\",\n \"success\": true,\n \"timestamp\": -45637379,\n \"user\": \"do\",\n \"userType\": \"PUBLIC_TOKEN_IDENTIFIER\",\n \"entityId\": \"fugiat in occaecat\",\n \"userOrigin\": \"cupidatat\",\n \"message\": \"laborum\",\n \"patch\": {}\n}"
						},
						{
							"name": "Failed. Invalid ID format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auditlogs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auditlogs",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "security Problems",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the specified security problem | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/securityProblems/:id?fields=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"securityProblems",
										":id"
									],
									"query": [
										{
											"key": "fields",
											"value": "deserunt anim occaecat",
											"description": "Defines the list of problem properties to be added to the response.\n\n`securityProblemId`, `displayId`, `status`, `muted`, `vulnerabilityId`, `vulnerabilityType`, `title`, `packageName` `url`, `technology`, `firstSeenTimestamp`, `lastUpdateTimestamp`, `cveIds` are **always** included in the result. To add more properties, list them with a leading plus `+`. Available fields are listed below. You can specify several properties, separated by a comma (for example `+riskAssessment,+managementZones`). \n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n* `description`: The description of the vulnerability.\n* `events`: A list of events of the security problem.\n* `vulnerableComponents`: A list of vulnerable components of the security problem. \n* `affectedEntities`: A list of affected entities of the security problem. \n* `exposedEntities`: A list of exposed entities of the security problem. \n* `reachableDataAssets`: A list of data assets reachable by affected entities of the security problem. \n* `relatedEntities`: A list of related entities of the security problem. \n* `relatedContainerImages`: A list of related container images of the security problem. \n"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the required security problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id?fields=deserunt anim occaecat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id"
											],
											"query": [
												{
													"key": "fields",
													"value": "deserunt anim occaecat"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"securityProblemId\": \"mollit veniam sed laborum consequat\",\n \"displayId\": \"ex ut\",\n \"status\": \"RESOLVED\",\n \"muted\": false,\n \"vulnerabilityId\": \"est Ut\",\n \"vulnerabilityType\": \"RUNTIME\",\n \"title\": \"consectetur do sed\",\n \"packageName\": \"dolore\",\n \"url\": \"cupidatat laborum consectetur nulla\",\n \"description\": \"exercitation sunt velit sit\",\n \"technology\": \"NODE_JS\",\n \"firstSeenTimestamp\": -79612522,\n \"lastUpdatedTimestamp\": -69418272,\n \"riskAssessment\": {\n  \"riskLevel\": \"HIGH\",\n  \"riskScore\": -89930676.70521286,\n  \"riskVector\": \"cillum in reprehe\",\n  \"baseRiskLevel\": \"NONE\",\n  \"baseRiskScore\": 18413898.875377208,\n  \"baseRiskVector\": \"do ut in\",\n  \"exposure\": \"NOT_AVAILABLE\",\n  \"dataAssets\": \"NOT_AVAILABLE\",\n  \"publicExploit\": \"NOT_AVAILABLE\"\n },\n \"managementZones\": [\n  {\n   \"name\": \"eiusmod dolor\",\n   \"id\": \"elit amet in et enim\"\n  },\n  {\n   \"name\": \"nisi enim\",\n   \"id\": \"eu cillum magna eiusmod\"\n  }\n ],\n \"cveIds\": [\n  \"est\",\n  \"dolore in Duis\"\n ],\n \"events\": [\n  {\n   \"timestamp\": -39563597,\n   \"reason\": \"SECURITY_PROBLEM_UNMUTED\",\n   \"riskAssessmentSnapshot\": {\n    \"numberOfAffectedEntities\": 13152755,\n    \"numberOfReachableDataAssets\": -49579730,\n    \"publicExploit\": \"AVAILABLE\",\n    \"exposure\": \"NOT_AVAILABLE\"\n   },\n   \"muteState\": {\n    \"user\": \"elit sint incididunt\",\n    \"reason\": \"AFFECTED\",\n    \"comment\": \"non nisi minim magna ut\"\n   }\n  },\n  {\n   \"timestamp\": 43847238,\n   \"reason\": \"SECURITY_PROBLEM_MUTED\",\n   \"riskAssessmentSnapshot\": {\n    \"numberOfAffectedEntities\": -37576796,\n    \"numberOfReachableDataAssets\": -33814539,\n    \"publicExploit\": \"NOT_AVAILABLE\",\n    \"exposure\": \"PUBLIC_NETWORK\"\n   },\n   \"muteState\": {\n    \"user\": \"reprehenderit consectetur quis dolore laborum\",\n    \"reason\": \"CONFIGURATION_NOT_AFFECTED\",\n    \"comment\": \"commodo magna Excepteur dolor minim\"\n   }\n  }\n ],\n \"vulnerableComponents\": [\n  {\n   \"id\": \"officia\",\n   \"displayName\": \"sed occaecat\",\n   \"fileName\": \"dolore nostrud\",\n   \"numberOfAffectedEntities\": -78610708,\n   \"affectedEntities\": [\n    \"ex laboris ea fugiat veniam\",\n    \"\"\n   ]\n  },\n  {\n   \"id\": \"veniam incididunt\",\n   \"displayName\": \"ipsum eu sint in\",\n   \"fileName\": \"sint velit irure\",\n   \"numberOfAffectedEntities\": 29712171,\n   \"affectedEntities\": [\n    \"qui labore sed pariatur\",\n    \"sit est\"\n   ]\n  }\n ],\n \"affectedEntities\": [\n  \"tempor adipisicing laborum irure\",\n  \"mollit\"\n ],\n \"exposedEntities\": [\n  \"nulla veniam\",\n  \"eiusmod dolore in Duis\"\n ],\n \"reachableDataAssets\": [\n  \"et officia\",\n  \"do est irure\"\n ],\n \"relatedEntities\": {\n  \"applications\": [\n   {\n    \"id\": \"aute consequat\",\n    \"numberOfAffectedEntities\": 35273909,\n    \"affectedEntities\": [\n     \"in sint ad culpa\",\n     \"magna tempor cupidatat officia\"\n    ]\n   },\n   {\n    \"id\": \"velit commodo pariatur\",\n    \"numberOfAffectedEntities\": 29542616,\n    \"affectedEntities\": [\n     \"sit proident adipisicing ex in\",\n     \"in\"\n    ]\n   }\n  ],\n  \"services\": [\n   {\n    \"id\": \"aliqua officia do\",\n    \"numberOfAffectedEntities\": 17585579,\n    \"affectedEntities\": [\n     \"dolore magna anim\",\n     \"nulla dolore amet magna\"\n    ],\n    \"exposure\": \"PUBLIC_NETWORK\"\n   },\n   {\n    \"id\": \"Duis veniam proident adipisicing\",\n    \"numberOfAffectedEntities\": -3050293,\n    \"affectedEntities\": [\n     \"dolore in veniam\",\n     \"dolor incididunt occaecat ut\"\n    ],\n    \"exposure\": \"NOT_AVAILABLE\"\n   }\n  ],\n  \"hosts\": [\n   {\n    \"id\": \"adipisicing labore sit nulla aute\",\n    \"numberOfAffectedEntities\": -18330052,\n    \"affectedEntities\": [\n     \"quis sed dolor eiusmod nostrud\",\n     \"aute quis\"\n    ]\n   },\n   {\n    \"id\": \"esse occaecat Lorem\",\n    \"numberOfAffectedEntities\": 96399802,\n    \"affectedEntities\": [\n     \"aliquip aute mollit dolor\",\n     \"ipsum a\"\n    ]\n   }\n  ],\n  \"databases\": [\n   \"exercitation sit adipisicing Ut\",\n   \"in in ullamco\"\n  ],\n  \"kubernetesWorkloads\": [\n   {\n    \"id\": \"fugiat dolore non\",\n    \"numberOfAffectedEntities\": -24351784,\n    \"affectedEntities\": [\n     \"nulla in Lorem\",\n     \"amet in ullamco elit\"\n    ]\n   },\n   {\n    \"id\": \"ut aliqua velit\",\n    \"numberOfAffectedEntities\": 13739780,\n    \"affectedEntities\": [\n     \"incididunt culpa\",\n     \"ut nostrud\"\n    ]\n   }\n  ],\n  \"kubernetesClusters\": [\n   {\n    \"id\": \"non esse nisi\",\n    \"numberOfAffectedEntities\": -43563087,\n    \"affectedEntities\": [\n     \"enim pariatur cillum\",\n     \"cillum minim\"\n    ]\n   },\n   {\n    \"id\": \"sint adipisicing nostrud id\",\n    \"numberOfAffectedEntities\": -1172046,\n    \"affectedEntities\": [\n     \"est ut\",\n     \"laborum nisi labore aliquip\"\n    ]\n   }\n  ]\n },\n \"relatedContainerImages\": [\n  {\n   \"containerImages\": [\n    {\n     \"imageId\": \"non cillum aliquip in\",\n     \"imageName\": \"in ullamco sed\",\n     \"numberOfAffectedEntities\": 61398586,\n     \"affectedEntities\": [\n      \"Ut\",\n      \"reprehenderit in sunt aliqua\"\n     ]\n    },\n    {\n     \"imageId\": \"laborum\",\n     \"imageName\": \"aliqua\",\n     \"numberOfAffectedEntities\": -40808852,\n     \"affectedEntities\": [\n      \"mollit\",\n      \"dolor Ut officia Duis eu\"\n     ]\n    }\n   ]\n  },\n  {\n   \"containerImages\": [\n    {\n     \"imageId\": \"velit sit incididu\",\n     \"imageName\": \"officia cu\",\n     \"numberOfAffectedEntities\": -68945085,\n     \"affectedEntities\": [\n      \"et id cupidatat\",\n      \"amet et aute aliquip\"\n     ]\n    },\n    {\n     \"imageId\": \"proid\",\n     \"imageName\": \"anim nisi\",\n     \"numberOfAffectedEntities\": -26806693,\n     \"affectedEntities\": [\n      \"et Duis\",\n      \"a\"\n     ]\n    }\n   ]\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Mutes the specified security problem. | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"sint oc\",\n    \"reason\": \"CONFIGURATION_NOT_AFFECTED\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/securityProblems/:id/mute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"securityProblems",
										":id",
										"mute"
									],
									"variable": [
										{
											"key": "id",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the required security problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The security problem has been muted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"sint oc\",\n    \"reason\": \"CONFIGURATION_NOT_AFFECTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/mute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"mute"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not executed. The security problem is already muted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"sint oc\",\n    \"reason\": \"CONFIGURATION_NOT_AFFECTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/mute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"mute"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Un-mutes the specified security problem. | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": \"ut amet\",\n    \"reason\": \"AFFECTED\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/securityProblems/:id/unmute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"securityProblems",
										":id",
										"unmute"
									],
									"variable": [
										{
											"key": "id",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the required security problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The security problem has been un-muted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"ut amet\",\n    \"reason\": \"AFFECTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/unmute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"unmute"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not executed. The security problem is already un-muted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": \"ut amet\",\n    \"reason\": \"AFFECTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/securityProblems/:id/unmute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"securityProblems",
												":id",
												"unmute"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all security problems | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/securityProblems?nextPageKey=deserunt anim occaecat&pageSize=-84735961&securityProblemSelector=deserunt anim occaecat&sort=deserunt anim occaecat&fields=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"securityProblems"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "deserunt anim occaecat",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-84735961",
									"description": "The amount of security problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
								},
								{
									"key": "securityProblemSelector",
									"value": "deserunt anim occaecat",
									"description": "Defines the scope of the query. Only security problems matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Status: `status(\"value\")`. Find the possible values in the description of the **status** field of the response. If not set, only open security problems are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Risk level: `riskLevel(\"value\")`. The Davis Risk Level. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum risk score: `minRiskScore(\"5.5\")`. The Davis minimum Risk Score. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum risk score: `maxRiskScore(\"5.5\")`. The Davis maximum Risk Score. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* Base risk level: `baseRiskLevel(\"value\")`. The Base Risk Level from the CVSS. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum base risk score: `minBaseRiskScore(\"5.5\")`. The Base minimum Risk Score from the CVSS. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum base risk score: `maxBaseRiskScore(\"5.5\")`. The Base maximum Risk Score from the CVSS. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* Vulnerability ID contains: `vulnerabilityIdContains(\"id-1\")`. The `CONTAINS` operator is used.\n* Vulnerability ID: `vulnerabilityId(\"id-1\",\"id-2\")`. Case insensitive `EQUALS` operator is used.\n* CVE ID: `cveId(\"id\")`.\n* Risk assessment `riskAssessment(\"value-1\",\"value-2\")` Possible values are `EXPOSED`, `SENSITIVE`, and `EXPLOIT`.\n* Related host ID: `relatedHostIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related host name: `relatedHostNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related host name contains: `relatedHostNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes cluster ID: `relatedKubernetesClusterIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes cluster name: `relatedKubernetesClusterNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes cluster name contains: `relatedKubernetesClusterNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes workload ID: `relatedKubernetesWorkloadIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes workload name: `relatedKubernetesWorkloadNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes workload name contains: `relatedKubernetesWorkloadNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Management zone ID: `managementZoneIds(\"mzId-1\",\"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\",\"name-2\")`. Values are case-sensitive.\n* Affected process group ID: `affectedPgIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Affected process group name: `affectedPgNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Affected process group name contains: `affectedPgNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Vulnerable component ID: `vulnerableComponentIds(\"componentId-1\", \"componentId-2\")`. Specify component IDs here.\n* Vulnerable component name: `vulnerableComponentNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Vulnerable component name contains: `vulnerableComponentNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Host tags: `hostTags(\"hostTag-1\")`. The `CONTAINS` operator is used.\n* Process group tags: `pgTags(\"pgTag-1\")`. The `CONTAINS` operator is used.\n* Process group instance tags: `pgiTags(\"pgiTag-1\")`. The `CONTAINS` operator is used.\n* Tags: `tags(\"tag-1\")`. The `CONTAINS` operator is used. This selector picks hosts, process groups, and process group instances at the same time.\n* Display ID: `displayIds(\"S-1234\",\"S-5678\")`. The `EQUALS` operator is used.\n* Technology: `technology(\"technology-1\",\"technology-2\")`. Find the possible values in the description of the **technology** field of the response. The `EQUALS` operator is used.\n\nRisk score and risk category are mutually exclusive (cannot be used at the same time).\n\nTo set several criteria, separate them with a comma (`,`). Only results matching (**all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`"
								},
								{
									"key": "sort",
									"value": "deserunt anim occaecat",
									"description": "Specifies a field for sorting the security problem list.\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n* `status`: The security problem status (`+` open first or `-` resolved first) \n* `muted`: The security problem mute state (`+` muted first or `-` unmuted first) \n* `technology`: The security problem technology (`+` ascending or `-` descending) \n* `firstSeenTimestamp`: The timestamp of the first occurrence of the security problem (`+` new problems first or `-` old problems first) \n* `securityProblemId`: The auto-generated ID of the security problem (`+` lower number first or `-` higher number first) \n* `vulnerabilityId`: The ID of the vulnerability (`+` lower number first or `-` higher number first) \n* `displayId`: The display ID (`+` lower number first or `-` higher number first) \n* `riskAssessment.riskScore`: The Davis security score (`+` lower score first or `-` higher score first) \n* `riskAssessment.riskLevel`: The Davis security level (`+` lower level first or `-` higher level first) \n* `riskAssessment.exposure`: Whether the problem is exposed to the internet (`+` unexposed first or `-` exposed first) \n* `riskAssessment.dataAssets`: Whether data assets are affected (`+` not affected first or `-` affected first) \n\nIf no prefix is set, `+` is used."
								},
								{
									"key": "fields",
									"value": "deserunt anim occaecat",
									"description": "Defines the list of problem properties to be added to the response.\n\n`securityProblemId`, `displayId`, `status`, `muted`, `vulnerabilityId`, `vulnerabilityType`, `title`, `packageName` `url`, `technology`, `firstSeenTimestamp`, `lastUpdateTimestamp`, `cveIds` are **always** included in the result. To add more properties, list them with a leading plus `+`. Available fields are listed below. You can specify several properties, separated by a comma (for example `+riskAssessment,+managementZones`). \n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n"
								},
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`)."
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/securityProblems?nextPageKey=deserunt anim occaecat&pageSize=-84735961&securityProblemSelector=deserunt anim occaecat&sort=deserunt anim occaecat&fields=deserunt anim occaecat&from=deserunt anim occaecat&to=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"securityProblems"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-84735961"
										},
										{
											"key": "securityProblemSelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "sort",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "fields",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -49776848,\n \"pageSize\": -27836672,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"securityProblems\": [\n  {\n   \"securityProblemId\": \"dolor in\",\n   \"displayId\": \"et est cupidatat Excepteur eu\",\n   \"status\": \"OPEN\",\n   \"muted\": false,\n   \"vulnerabilityId\": \"in deserunt\",\n   \"vulnerabilityType\": \"RUNTIME\",\n   \"title\": \"esse sint\",\n   \"packageName\": \"Excepteur in nisi qui amet\",\n   \"url\": \"ut aliqua cup\",\n   \"technology\": \"JAVA\",\n   \"firstSeenTimestamp\": 96313279,\n   \"lastUpdatedTimestamp\": -65444042,\n   \"riskAssessment\": {\n    \"riskLevel\": \"CRITICAL\",\n    \"riskScore\": 91959391.52729893,\n    \"riskVector\": \"nostrud pariatur\",\n    \"baseRiskLevel\": \"NONE\",\n    \"baseRiskScore\": 16346721.8560327,\n    \"baseRiskVector\": \"nostrud aliquip\",\n    \"exposure\": \"NOT_AVAILABLE\",\n    \"dataAssets\": \"REACHABLE\",\n    \"publicExploit\": \"NOT_AVAILABLE\"\n   },\n   \"managementZones\": [\n    {\n     \"name\": \"ea Duis veniam non est\",\n     \"id\": \"officia dolor sunt adipisicing\"\n    },\n    {\n     \"name\": \"Ut Duis Excepteur nisi sunt\",\n     \"id\": \"dolor elit dolore qui labore\"\n    }\n   ],\n   \"cveIds\": [\n    \"sit ex voluptate nisi\",\n    \"dolore aliquip commodo nulla\"\n   ]\n  },\n  {\n   \"securityProblemId\": \"c\",\n   \"displayId\": \"ut fugiat velit quis\",\n   \"status\": \"RESOLVED\",\n   \"muted\": false,\n   \"vulnerabilityId\": \"ipsum dolore\",\n   \"vulnerabilityType\": \"THIRD_PARTY\",\n   \"title\": \"nostrud eu esse\",\n   \"packageName\": \"sunt exercitation incididunt fugiat\",\n   \"url\": \"do aute\",\n   \"technology\": \"KUBERNETES\",\n   \"firstSeenTimestamp\": 26818254,\n   \"lastUpdatedTimestamp\": -8999224,\n   \"riskAssessment\": {\n    \"riskLevel\": \"CRITICAL\",\n    \"riskScore\": -94910409.25890219,\n    \"riskVector\": \"eiusmod id cillum nostrud\",\n    \"baseRiskLevel\": \"LOW\",\n    \"baseRiskScore\": 13643234.001935005,\n    \"baseRiskVector\": \"reprehenderit sed\",\n    \"exposure\": \"NOT_DETECTED\",\n    \"dataAssets\": \"NOT_DETECTED\",\n    \"publicExploit\": \"AVAILABLE\"\n   },\n   \"managementZones\": [\n    {\n     \"name\": \"ut culpa non esse\",\n     \"id\": \"enim ut id laboris\"\n    },\n    {\n     \"name\": \"voluptate mollit eu ut qui\",\n     \"id\": \"et adipisicing voluptate sed\"\n    }\n   ],\n   \"cveIds\": [\n    \"aute nulla\",\n    \"nisi laboris Lorem nulla\"\n   ]\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "extensions",
			"item": [
				{
					"name": "{extension Name}",
					"item": [
						{
							"name": "environment Configuration",
							"item": [
								{
									"name": "Gets the active environment configuration version of the specified extension 2.0",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "deserunt anim occaecat",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"1.2.3\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								},
								{
									"name": "Updates the active environment configuration version of the extension 2.0",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": \"1.2.3\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "deserunt anim occaecat",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"1.2.3\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"1.2.3\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"1.2.3\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"1.2.3\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								},
								{
									"name": "Activates the environment configuration from the specified version of the extension 2.0",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"version\": \"1.2.3\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "deserunt anim occaecat",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"1.2.3\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"1.2.3\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"1.2.3\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"version\": \"1.2.3\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								},
								{
									"name": "Deactivates the environment configuration of the specified extension 2.0",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "deserunt anim occaecat",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Environment configuration deactivated.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"version\": \"1.2.3\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								},
								{
									"name": "List of the latest extension environment configuration events",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"environmentConfiguration",
												"events"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "deserunt anim occaecat",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "List of the latest extension environment configuration events",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration",
														"events"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"extensionEvents\": [\n  {\n   \"timestamp\": \"consequat do elit adipi\",\n   \"severity\": \"commodo adipisicing sit consectetur\",\n   \"message\": \"in dolore\"\n  },\n  {\n   \"timestamp\": \"consectetur anim eiusmod\",\n   \"severity\": \"consequat\",\n   \"message\": \"nostrud do\"\n  }\n ]\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/environmentConfiguration/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"environmentConfiguration",
														"events"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "monitoring Configurations",
							"item": [
								{
									"name": "{configuration Id}",
									"item": [
										{
											"name": "Gets the details of the specified monitoring configuration",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "officia veniam dolor laboris",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "officia veniam dolor laboris",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"objectId\": \"in dolor in\",\n \"scope\": \"tempor commodo\",\n \"value\": \"ea\"\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
												}
											]
										},
										{
											"name": "Updates the specified monitoring configuration",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {}\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "officia veniam dolor laboris",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "officia veniam dolor laboris",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"value\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": -26990220\n}"
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"value\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"value\": {}\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified monitoring configuration",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "officia veniam dolor laboris",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "officia veniam dolor laboris",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
												}
											]
										},
										{
											"name": "Gets the list of the events linked to specific monitoring configuration",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/events",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations",
														":configurationId",
														"events"
													],
													"variable": [
														{
															"key": "extensionName",
															"value": "officia veniam dolor laboris",
															"description": "(Required) The name of the requested extension 2.0."
														},
														{
															"key": "configurationId",
															"value": "officia veniam dolor laboris",
															"description": "(Required) The ID of the requested monitoring configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/events",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId",
																"events"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"extensionEvents\": [\n  {\n   \"timestamp\": \"aute anim deserunt laborum eiusmod\",\n   \"severity\": \"nostrud minim consequat officia\",\n   \"message\": \"eiusmod veniam\"\n  },\n  {\n   \"timestamp\": \"anim\",\n   \"severity\": \"officia sed proident\",\n   \"message\": \"quis cupidatat laborum minim\"\n  }\n ]\n}"
												},
												{
													"name": "Failed. The requested resource doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations/:configurationId/events",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":extensionName",
																"monitoringConfigurations",
																":configurationId",
																"events"
															],
															"variable": [
																{
																	"key": "extensionName"
																},
																{
																	"key": "configurationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists all the monitoring configurations of the specified extension 2.0",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations?nextPageKey=deserunt anim occaecat&pageSize=-84735961&version=deserunt anim occaecat&active=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"monitoringConfigurations"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "deserunt anim occaecat",
													"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
												},
												{
													"key": "pageSize",
													"value": "-84735961",
													"description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
												},
												{
													"key": "version",
													"value": "deserunt anim occaecat",
													"description": "Filters the resulting set of configurations by extension 2.0 version."
												},
												{
													"key": "active",
													"value": "true",
													"description": "Filters the resulting set of configurations by the active state."
												}
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "officia veniam dolor laboris",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations?nextPageKey=deserunt anim occaecat&pageSize=-84735961&version=deserunt anim occaecat&active=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "pageSize",
															"value": "-84735961"
														},
														{
															"key": "version",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "active",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"totalCount\": 47370542,\n \"items\": [\n  {\n   \"objectId\": \"nulla velit aute consequat\",\n   \"scope\": \"Ut dolor\",\n   \"value\": \"eu\"\n  },\n  {\n   \"objectId\": \"voluptate tempor est\",\n   \"scope\": \"in\",\n   \"value\": \"anim ex id\"\n  }\n ],\n \"pageSize\": -44081191,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations?nextPageKey=deserunt anim occaecat&pageSize=-84735961&version=deserunt anim occaecat&active=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "pageSize",
															"value": "-84735961"
														},
														{
															"key": "version",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "active",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations?nextPageKey=deserunt anim occaecat&pageSize=-84735961&version=deserunt anim occaecat&active=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "pageSize",
															"value": "-84735961"
														},
														{
															"key": "version",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "active",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								},
								{
									"name": "Creates new monitoring configuration for the specified extension 2.0",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    },\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												"monitoringConfigurations"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "officia veniam dolor laboris",
													"description": "(Required) The name of the requested extension 2.0."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    },\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 18167387\n },\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 61274772\n }\n]"
										},
										{
											"name": "Multi-Status, if not all requests resulted in the same status",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    },\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Multi-Status (WebDAV) (RFC 4918)",
											"code": 207,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 18167387\n },\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": 61274772\n }\n]"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    },\n    {\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {}\n    }\n]"
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/monitoringConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														"monitoringConfigurations"
													],
													"variable": [
														{
															"key": "extensionName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "{extension Version}",
							"item": [
								{
									"name": "Gets details of the specified version of the extension 2.0",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												":extensionVersion"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "officia veniam dolor laboris",
													"description": "(Required) The name of the requested extension 2.0."
												},
												{
													"key": "extensionVersion",
													"value": "0",
													"description": "(Required) The version of the requested extension 2.0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
														"key": "Accept",
														"value": "deserunt anim occaecat"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"extensionName\": \"officia\",\n \"version\": \"1.2.3\",\n \"author\": {\n  \"name\": \"magna deserunt sit commodo\"\n },\n \"dataSources\": [\n  \"velit sunt deserunt eu\",\n  \"officia\"\n ],\n \"variables\": [\n  \"est volupta\",\n  \"exercitation dolore ex non\"\n ],\n \"featureSets\": [\n  \"anim qui pariatur deserunt\",\n  \"elit proident\"\n ],\n \"minDynatraceVersion\": \"aute\",\n \"fileHash\": \"velit elit Duis ut\"\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
														"key": "Accept",
														"value": "deserunt anim occaecat"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										},
										{
											"name": "Not acceptable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													},
													{
														"description": "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
														"key": "Accept",
														"value": "deserunt anim occaecat"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified version of the extension 2.0",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												":extensionVersion"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "officia veniam dolor laboris",
													"description": "(Required) The name of the requested extension 2.0."
												},
												{
													"key": "extensionVersion",
													"value": "0",
													"description": "(Required) The version of the requested extension 2.0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The extension 2.0 version has been deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"extensionName\": \"officia\",\n \"version\": \"1.2.3\",\n \"author\": {\n  \"name\": \"magna deserunt sit commodo\"\n },\n \"dataSources\": [\n  \"velit sunt deserunt eu\",\n  \"officia\"\n ],\n \"variables\": [\n  \"est volupta\",\n  \"exercitation dolore ex non\"\n ],\n \"featureSets\": [\n  \"anim qui pariatur deserunt\",\n  \"elit proident\"\n ],\n \"minDynatraceVersion\": \"aute\",\n \"fileHash\": \"velit elit Duis ut\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								},
								{
									"name": "Gets the configuration schema of the specified version of the extension 2.0",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName",
												":extensionVersion",
												"schema"
											],
											"variable": [
												{
													"key": "extensionName",
													"value": "officia veniam dolor laboris",
													"description": "(Required) The name of the requested extension 2.0."
												},
												{
													"key": "extensionVersion",
													"value": "0",
													"description": "(Required) The version of the requested extension 2.0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion",
														"schema"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"dynatrace\": \"1.0\",\n \"schemaId\": \"builtin:anomaly.infrastructure\",\n \"displayName\": \"Anomaly detection for infrastructure\",\n \"description\": \"Dynatrace automatically detects infrastructure-related performance anomalies such as high CPU saturation, memory outages, and low disk-space conditions\",\n \"documentation\": \"quis aute commodo ullamco ea\",\n \"version\": \"1.4.2\",\n \"multiObject\": true,\n \"ordered\": true,\n \"maxObjects\": 10,\n \"allowedScopes\": [\n  \"host\",\n  \"application\"\n ],\n \"enums\": {},\n \"types\": {},\n \"properties\": {},\n \"constraints\": [\n  {\n   \"minimumPropertyCount\": 1,\n   \"maximumPropertyCount\": 2,\n   \"customValidatorId\": \"my-min-max\",\n   \"customMessage\": \"veniam ut\",\n   \"properties\": [\n    \"esse aliqua\",\n    \"Duis cil\"\n   ],\n   \"type\": \"GREATER_THAN\"\n  },\n  {\n   \"minimumPropertyCount\": 1,\n   \"maximumPropertyCount\": 2,\n   \"customValidatorId\": \"my-min-max\",\n   \"customMessage\": \"ut sit\",\n   \"properties\": [\n    \"Ut aute reprehenderit veniam laborum\",\n    \"cupidatat fugiat\"\n   ],\n   \"type\": \"LESS_THAN_OR_EQUAL\"\n  }\n ],\n \"metadata\": {}\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:extensionName/:extensionVersion/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":extensionName",
														":extensionVersion",
														"schema"
													],
													"variable": [
														{
															"key": "extensionName"
														},
														{
															"key": "extensionVersion"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all versions of the extension 2.0",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/extensions/:extensionName?nextPageKey=deserunt anim occaecat&pageSize=-84735961",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										":extensionName"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat",
											"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
										},
										{
											"key": "pageSize",
											"value": "-84735961",
											"description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
										}
									],
									"variable": [
										{
											"key": "extensionName",
											"value": "officia veniam dolor laboris",
											"description": "(Required) The name of the requested extension 2.0."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName?nextPageKey=deserunt anim occaecat&pageSize=-84735961",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "deserunt anim occaecat"
												},
												{
													"key": "pageSize",
													"value": "-84735961"
												}
											],
											"variable": [
												{
													"key": "extensionName"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"totalCount\": 1615720,\n \"extensions\": [\n  {\n   \"extensionName\": \"ipsum in nisi\",\n   \"version\": \"1.2.3\"\n  },\n  {\n   \"extensionName\": \"Ut cillum est culpa\",\n   \"version\": \"1.2.3\"\n  }\n ],\n \"pageSize\": -23998379,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:extensionName?nextPageKey=deserunt anim occaecat&pageSize=-84735961",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":extensionName"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "deserunt anim occaecat"
												},
												{
													"key": "pageSize",
													"value": "-84735961"
												}
											],
											"variable": [
												{
													"key": "extensionName"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "schemas",
					"item": [
						{
							"name": "{schema Version}",
							"item": [
								{
									"name": "Lists all the files available for the specified extension 2.0 schema version",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"schemas",
												":schemaVersion"
											],
											"variable": [
												{
													"key": "schemaVersion",
													"value": "0",
													"description": "(Required) The version of the schema."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion"
													],
													"variable": [
														{
															"key": "schemaVersion"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"files\": [\n  \"officia incididunt ipsum \",\n  \"officia mo\"\n ]\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion"
													],
													"variable": [
														{
															"key": "schemaVersion"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								},
								{
									"name": "Gets the extension 2.0 schema file in the specified version",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion/:fileName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"schemas",
												":schemaVersion",
												":fileName"
											],
											"variable": [
												{
													"key": "schemaVersion",
													"value": "0",
													"description": "(Required) The version of the schema."
												},
												{
													"key": "fileName",
													"value": "officia veniam dolor laboris",
													"description": "(Required) The name of the schema file."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion/:fileName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion",
														":fileName"
													],
													"variable": [
														{
															"key": "schemaVersion"
														},
														{
															"key": "fileName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/schemas/:schemaVersion/:fileName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														"schemas",
														":schemaVersion",
														":fileName"
													],
													"variable": [
														{
															"key": "schemaVersion"
														},
														{
															"key": "fileName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all the extension 2.0 schemas versions available in your environment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/extensions/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"versions\": [\n  \"1.2.3\",\n  \"1.2.3\"\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all the extensions 2.0 available in your environment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/extensions?nextPageKey=deserunt anim occaecat&pageSize=-84735961&name=deserunt anim occaecat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "deserunt anim occaecat",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-84735961",
									"description": "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used."
								},
								{
									"key": "name",
									"value": "deserunt anim occaecat",
									"description": "Filters the resulting set of extensions 2.0 by name. You can specify a partial name. In that case, the CONTAINS operator is used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions?nextPageKey=deserunt anim occaecat&pageSize=-84735961&name=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-84735961"
										},
										{
											"key": "name",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -77995940,\n \"extensions\": [\n  {\n   \"extensionName\": \"et\",\n   \"version\": \"1.2.3\"\n  },\n  {\n   \"extensionName\": \"aliqua\",\n   \"version\": \"1.2.3\"\n  }\n ],\n \"pageSize\": 95156868,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						}
					]
				},
				{
					"name": "Uploads or verifies a new extension 2.0",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "sed",
									"description": "(Required) ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/extensions?validateOnly=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions"
							],
							"query": [
								{
									"key": "validateOnly",
									"value": "false",
									"description": "Only run validation but do not persist the extension even if validation was successful."
								}
							]
						}
					},
					"response": [
						{
							"name": "The extension is valid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "sed",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"extensionName\": \"eiusmod\",\n \"version\": \"1.2.3\",\n \"author\": {\n  \"name\": \"sint\"\n },\n \"dataSources\": [\n  \"reprehenderit ad et\",\n  \"in sed Excepteur nulla ullamco\"\n ],\n \"variables\": [\n  \"non\",\n  \"re\"\n ],\n \"featureSets\": [\n  \"esse occaecat non proident\",\n  \"pariatur id cupidatat in\"\n ],\n \"minDynatraceVersion\": \"sit cupidatat in nulla\",\n \"fileHash\": \"labore officia fugiat\"\n}"
						},
						{
							"name": "Success. The extension 2.0 has been uploaded.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "sed",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"extensionName\": \"officia\",\n \"version\": \"1.2.3\",\n \"author\": {\n  \"name\": \"magna deserunt sit commodo\"\n },\n \"dataSources\": [\n  \"velit sunt deserunt eu\",\n  \"officia\"\n ],\n \"variables\": [\n  \"est volupta\",\n  \"exercitation dolore ex non\"\n ],\n \"featureSets\": [\n  \"anim qui pariatur deserunt\",\n  \"elit proident\"\n ],\n \"minDynatraceVersion\": \"aute\",\n \"fileHash\": \"velit elit Duis ut\"\n}"
						},
						{
							"name": "Failed. The input file is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "sed",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						},
						{
							"name": "Upload not possible yet, please try again in a few seconds.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "sed",
											"description": "(Required) ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "problems",
			"item": [
				{
					"name": "{problem Id}",
					"item": [
						{
							"name": "comments",
							"item": [
								{
									"name": "{comment Id}",
									"item": [
										{
											"name": "Gets the specified comment on a problem | maturity=EARLY_ADOPTER",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "deserunt anim occaecat",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "deserunt anim occaecat",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"createdAtTimestamp\": -59901685,\n \"authorName\": \"anim laboris sunt ea dolore\",\n \"context\": \"dolore qui ad cupidatat\",\n \"id\": \"sint sit proident velit\",\n \"content\": \"id minim\"\n}"
												}
											]
										},
										{
											"name": "Updates the specified comment on a problem | maturity=EARLY_ADOPTER",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message\": \"dolor reprehenderit\",\n    \"context\": \"dolore ex sed Ut\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "deserunt anim occaecat",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "deserunt anim occaecat",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The comment has been updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"message\": \"dolor reprehenderit\",\n    \"context\": \"dolore ex sed Ut\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes the specified comment from a problem | maturity=EARLY_ADOPTER",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "problemId",
															"value": "deserunt anim occaecat",
															"description": "(Required) The ID of the required problem."
														},
														{
															"key": "commentId",
															"value": "deserunt anim occaecat",
															"description": "(Required) The ID of the required comment."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The comment has been deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/problems/:problemId/comments/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"problems",
																":problemId",
																"comments",
																":commentId"
															],
															"variable": [
																{
																	"key": "problemId"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Gets all comments on the specified problem | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/comments?nextPageKey=deserunt anim occaecat&pageSize=-84735961",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"comments"
											],
											"query": [
												{
													"key": "nextPageKey",
													"value": "deserunt anim occaecat",
													"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
												},
												{
													"key": "pageSize",
													"value": "-84735961",
													"description": "The amount of comments in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 10 is used."
												}
											],
											"variable": [
												{
													"key": "problemId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The ID of the required problem."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments?nextPageKey=deserunt anim occaecat&pageSize=-84735961",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments"
													],
													"query": [
														{
															"key": "nextPageKey",
															"value": "deserunt anim occaecat"
														},
														{
															"key": "pageSize",
															"value": "-84735961"
														}
													],
													"variable": [
														{
															"key": "problemId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"totalCount\": -3409119,\n \"comments\": [\n  {\n   \"createdAtTimestamp\": 83930257,\n   \"authorName\": \"dolore do eiusmod incididunt\",\n   \"context\": \"eu sed voluptate consectetur Lorem\",\n   \"id\": \"magna fugiat\",\n   \"content\": \"occaecat deserunt ipsum\"\n  },\n  {\n   \"createdAtTimestamp\": 48090345,\n   \"authorName\": \"voluptate commodo dolor\",\n   \"context\": \"eiusmod culpa anim Excepteur\",\n   \"id\": \"\",\n   \"content\": \"ea tempor nisi\"\n  }\n ],\n \"pageSize\": -60080482,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
										}
									]
								},
								{
									"name": "Adds a new comment on the specified problem | maturity=EARLY_ADOPTER",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"dolor reprehenderit\",\n    \"context\": \"dolore ex sed Ut\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"comments"
											],
											"variable": [
												{
													"key": "problemId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The ID of the required problem."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The comment has been added.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"message\": \"dolor reprehenderit\",\n    \"context\": \"dolore ex sed Ut\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/problems/:problemId/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"problems",
														":problemId",
														"comments"
													],
													"variable": [
														{
															"key": "problemId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Gets the properties of the specified problem | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/problems/:problemId?fields=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"problems",
										":problemId"
									],
									"query": [
										{
											"key": "fields",
											"value": "deserunt anim occaecat",
											"description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`)."
										}
									],
									"variable": [
										{
											"key": "problemId",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the required problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId?fields=deserunt anim occaecat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId"
											],
											"query": [
												{
													"key": "fields",
													"value": "deserunt anim occaecat"
												}
											],
											"variable": [
												{
													"key": "problemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"displayId\": \"est ipsum\",\n \"endTime\": -65626583,\n \"impactLevel\": \"SERVICES\",\n \"problemId\": \"minim ut\",\n \"severityLevel\": \"PERFORMANCE\",\n \"startTime\": -99422019,\n \"status\": \"OPEN\",\n \"title\": \"inc\",\n \"managementZones\": [\n  {\n   \"name\": \"velit t\",\n   \"id\": \"magna deserunt\"\n  },\n  {\n   \"name\": \"eiusmod sunt id\",\n   \"id\": \"et\"\n  }\n ],\n \"impactAnalysis\": {\n  \"impacts\": [\n   {\n    \"estimatedAffectedUsers\": 86649894,\n    \"impactType\": \"SERVICE\",\n    \"impactedEntity\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   {\n    \"estimatedAffectedUsers\": -94967748,\n    \"impactType\": \"CUSTOM_APPLICATION\",\n    \"impactedEntity\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  ]\n },\n \"linkedProblemInfo\": {\n  \"displayId\": \"laborum ullamco \",\n  \"problemId\": \"officia culpa ipsum\"\n },\n \"rootCauseEntity\": {\n  \"entityId\": {\n   \"id\": \"est magna adipisicing\",\n   \"type\": \"ea irure reprehenderit amet\"\n  },\n  \"name\": \"amet\"\n },\n \"problemFilters\": [\n  {\n   \"id\": \"in dolor\",\n   \"name\": \"ex magna dolor\"\n  },\n  {\n   \"id\": \"in in\",\n   \"name\": \"mollit\"\n  }\n ],\n \"evidenceDetails\": {\n  \"totalCount\": 16876770,\n  \"details\": [\n   {\n    \"displayName\": \"sit commodo ad ut\",\n    \"entity\": {\n     \"entityId\": {\n      \"id\": \"dolor sunt Ut magna minim\",\n      \"type\": \"nostrud adipisici\"\n     },\n     \"name\": \"anim eu occaecat\"\n    },\n    \"evidenceType\": \"MAINTENANCE_WINDOW\",\n    \"rootCauseRelevant\": false,\n    \"startTime\": -5482935,\n    \"groupingEntity\": {\n     \"entityId\": {\n      \"id\": \"aliqua commodo dolore sint\",\n      \"type\": \"laboris consectetur magna quis\"\n     },\n     \"name\": \"reprehenderit magna sint exercitation\"\n    }\n   },\n   {\n    \"displayName\": \"Duis\",\n    \"entity\": {\n     \"entityId\": {\n      \"id\": \"cillum exercitation minim laboris ipsum\",\n      \"type\": \"pariatur aute irure\"\n     },\n     \"name\": \"dolor\"\n    },\n    \"evidenceType\": \"AVAILABILITY_EVIDENCE\",\n    \"rootCauseRelevant\": true,\n    \"startTime\": -52179582,\n    \"groupingEntity\": {\n     \"entityId\": {\n      \"id\": \"reprehenderit labore\",\n      \"type\": \"sint reprehenderit ut id irure\"\n     },\n     \"name\": \"nulla cillum\"\n    }\n   }\n  ]\n },\n \"recentComments\": {\n  \"totalCount\": 5484120,\n  \"comments\": [\n   {\n    \"createdAtTimestamp\": 22888191,\n    \"authorName\": \"dolor sit cillum\",\n    \"context\": \"qui\",\n    \"id\": \"dolor magna cupidatat occaecat sunt\",\n    \"content\": \"commodo do\"\n   },\n   {\n    \"createdAtTimestamp\": -95537372,\n    \"authorName\": \"incididunt Ut est consequat\",\n    \"context\": \"exercitation ex ut\",\n    \"id\": \"et laboris enim fugiat\",\n    \"content\": \"eiusmod pari\"\n   }\n  ],\n  \"pageSize\": 59675794,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n },\n \"affectedEntities\": [\n  {\n   \"entityId\": {\n    \"id\": \"veniam reprehenderit nostrud dolor\",\n    \"type\": \"Duis irure sunt\"\n   },\n   \"name\": \"dolore dolore\"\n  },\n  {\n   \"entityId\": {\n    \"id\": \"deserunt nostrud sint qui\",\n    \"type\": \"sed laboris ex amet nisi\"\n   },\n   \"name\": \"est labore\"\n  }\n ],\n \"impactedEntities\": [\n  {\n   \"entityId\": {\n    \"id\": \"est sed nulla commodo\",\n    \"type\": \"ullamco quis\"\n   },\n   \"name\": \"culpa et\"\n  },\n  {\n   \"entityId\": {\n    \"id\": \"culpa ut exerci\",\n    \"type\": \"sint aliquip consectetur\"\n   },\n   \"name\": \"sed incididunt aliquip velit\"\n  }\n ],\n \"entityTags\": [\n  {\n   \"stringRepresentation\": \"anim \",\n   \"value\": \"cillum\",\n   \"key\": \"aliqua\",\n   \"context\": \"sunt occaecat dolore ullamco dolor\"\n  },\n  {\n   \"stringRepresentation\": \"Lorem est\",\n   \"value\": \"dolore quis\",\n   \"key\": \"dolor fugiat Excepteur\",\n   \"context\": \"sit aliqua esse\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Closes the specified problem and adds a closing comment on it | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"laborum voluptate\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/problems/:problemId/close",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"problems",
										":problemId",
										"close"
									],
									"variable": [
										{
											"key": "problemId",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the required problem."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"laborum voluptate\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"close"
											],
											"variable": [
												{
													"key": "problemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"closeTimestamp\": 44084417,\n \"closing\": false,\n \"problemId\": \"sint\",\n \"comment\": {\n  \"createdAtTimestamp\": 95133134,\n  \"authorName\": \"Lorem\",\n  \"context\": \"ad cillum ut veniam\",\n  \"id\": \"sunt mollit \",\n  \"content\": \"deserunt in minim\"\n }\n}"
								},
								{
									"name": "The problem is closed already the request hasn't been executed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"message\": \"laborum voluptate\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/problems/:problemId/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"problems",
												":problemId",
												"close"
											],
											"variable": [
												{
													"key": "problemId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists problems observed within the specified timeframe | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/problems?fields=deserunt anim occaecat&nextPageKey=deserunt anim occaecat&pageSize=-84735961&from=deserunt anim occaecat&to=deserunt anim occaecat&problemSelector=deserunt anim occaecat&entitySelector=deserunt anim occaecat&sort=deserunt anim occaecat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"problems"
							],
							"query": [
								{
									"key": "fields",
									"value": "deserunt anim occaecat",
									"description": "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).\n\n The field is valid only for the current page of results. You must set it for each page you're requesting."
								},
								{
									"key": "nextPageKey",
									"value": "deserunt anim occaecat",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n"
								},
								{
									"key": "pageSize",
									"value": "-84735961",
									"description": "The amount of problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used."
								},
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`)."
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "problemSelector",
									"value": "deserunt anim occaecat",
									"description": "Defines the scope of the query. Only problems matching the specified criteria are included into response. \n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies. All values must be quoted. \n* Status: `status(\"open\")` or `status(\"closed\")`. You can specify only one status. \n* Severity level: `severityLevel(\"level-1\",\"level-2\")`. Find the possible values in the description of the **severityLevel** field of the response.\n* Impact level: `impactLevel(\"level-11\",\"level-2\")` Find the possible values in the description of the **impactLevel** field of the response.\n* Root cause entity: `rootCauseEntity(\"id-1\", \"id-2\")`. \n* Management zone ID: `managementZoneIds(\"mZId-1\", \"mzId-2\")`. \n* Management zone name: `managementZones(\"value-1\",\"value-2\")`. \n* Impacted entities: `impactedEntities(\"id-1\", \"id-2\")`. \n* Affected entities: `affectedEntities(\"id-1\", \"id-2\")`. \n* Type of affected entities: `affectedEntityTypes(\"value-1\",\"value-2\")`. \n* Problem ID: `problemId(\"id-1\", \"id-2\")`. \n* Alerting profile ID: `problemFilterIds(\"id-1\", \"id-2\")`. \n* Alerting profile name: `problemFilterNames(\"value-1\",\"value-2\")`. \n* Entity tags: `entityTags(\"[context]key:value\",\"key:value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value tag`. All tag values are case-sensitive.\n* Display ID of the problem: `displayId(\"id-1\", \"id-2\")`. \n* Under maintenance: `underMaintenance(true|false)`. Shows (true) or hides (false) all problems created during maintenance mode.\n* Text search: `text(\"value\")`. Text search on the following fields: problem title, event titles, displayId and the id of affected and impacted entities. The text search is case insensitive, partial matching and based on a relevance score. Therefore the `relevance` sort option should be used to get the most relevant problems first. The special characters `~` and `\"` need to be escaped using a `~` (e.g. double quote search `text(\"~\"\")`). \n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response. \n\n"
								},
								{
									"key": "entitySelector",
									"value": "deserunt anim occaecat",
									"description": "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: `entityName(\"value\")`. By default this filters for entities, whose name **contains** the given value and is **not** case sensitive. \n\tThe following modifications are available:\n\t* `entityName.equals`: changes the operator to `EQUALS`. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET all entity types](https://dt-url.net/dw03s7h) and check the **properties** field. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET all entity types](https://dt-url.net/dw03s7h) and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nThe length of the string is limited to 10,000 characters. \n\nThe maximum number of entities that may be selected is limited to 10000.\n\n"
								},
								{
									"key": "sort",
									"value": "deserunt anim occaecat",
									"description": "Specifies a set of comma-separated (`,`) fields for sorting in the problem list.\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n * `status`: problem status (`+` open problems first or `-` closed problems first)\n * `startTime`: problem start time (`+` old problems first or `-` new problems first) \n * `relevance`: problem relevance (`+` least relevant problems first or `-` most relevant problems first) - can be used only in combination with text search \n\nIf no prefix is set, `+` is used. \n\nYou can specify several levels of sorting. For example, `+status,-startTime` sorts problems by status, open problems first. Within the status, problems are sorted by start time, oldest first."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/problems?fields=deserunt anim occaecat&nextPageKey=deserunt anim occaecat&pageSize=-84735961&from=deserunt anim occaecat&to=deserunt anim occaecat&problemSelector=deserunt anim occaecat&entitySelector=deserunt anim occaecat&sort=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"problems"
									],
									"query": [
										{
											"key": "fields",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-84735961"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "problemSelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "entitySelector",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "sort",
											"value": "deserunt anim occaecat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": 51966364,\n \"pageSize\": 44598035,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"problems\": [\n  {\n   \"displayId\": \"anim ut\",\n   \"endTime\": 27578062,\n   \"impactLevel\": \"APPLICATION\",\n   \"problemId\": \"ullamco aute incididunt\",\n   \"severityLevel\": \"ERROR\",\n   \"startTime\": 81281802,\n   \"status\": \"CLOSED\",\n   \"title\": \"dol\",\n   \"managementZones\": [\n    {\n     \"name\": \"labore magna in\",\n     \"id\": \"Duis\"\n    },\n    {\n     \"name\": \"eiusmod mollit ad pariatur et\",\n     \"id\": \"nisi magna deserunt in incididunt\"\n    }\n   ],\n   \"impactAnalysis\": {\n    \"impacts\": [\n     {\n      \"estimatedAffectedUsers\": 78422957,\n      \"impactType\": \"SERVICE\",\n      \"impactedEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"estimatedAffectedUsers\": -15118888,\n      \"impactType\": \"SERVICE\",\n      \"impactedEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   \"linkedProblemInfo\": {\n    \"displayId\": \"v\",\n    \"problemId\": \"est\"\n   },\n   \"rootCauseEntity\": {\n    \"entityId\": {\n     \"id\": \"do ullamco enim\",\n     \"type\": \"Lorem in\"\n    },\n    \"name\": \"Ut vol\"\n   },\n   \"problemFilters\": [\n    {\n     \"id\": \"aliqua\",\n     \"name\": \"Ut velit fugiat\"\n    },\n    {\n     \"id\": \"adipisicing\",\n     \"name\": \"id tempor dolor in\"\n    }\n   ],\n   \"evidenceDetails\": {\n    \"totalCount\": 8682192,\n    \"details\": [\n     {\n      \"displayName\": \"magna pariatur commodo officia\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"quis\",\n        \"type\": \"eu sit veniam\"\n       },\n       \"name\": \"\"\n      },\n      \"evidenceType\": \"MAINTENANCE_WINDOW\",\n      \"rootCauseRelevant\": false,\n      \"startTime\": -74025898,\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"Lorem Ut dolor ex culpa\",\n        \"type\": \"do pariatur\"\n       },\n       \"name\": \"consequat\"\n      }\n     },\n     {\n      \"displayName\": \"magna\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"eu eiusmod\",\n        \"type\": \"ullamco incididunt commodo\"\n       },\n       \"name\": \"nostrud qui Lorem\"\n      },\n      \"evidenceType\": \"EVENT\",\n      \"rootCauseRelevant\": false,\n      \"startTime\": 94014950,\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"minim qui sit cupidatat\",\n        \"type\": \"dolore consectetur veniam in\"\n       },\n       \"name\": \"sit nostrud irure\"\n      }\n     }\n    ]\n   },\n   \"recentComments\": {\n    \"totalCount\": 9244132,\n    \"comments\": [\n     {\n      \"createdAtTimestamp\": -29601396,\n      \"authorName\": \"minim aute anim\",\n      \"context\": \"aute sunt non\",\n      \"id\": \"est ut\",\n      \"content\": \"ut quis sed sunt\"\n     },\n     {\n      \"createdAtTimestamp\": 35252280,\n      \"authorName\": \"Lorem ut veniam nisi proident\",\n      \"context\": \"eiusmod mollit adipisicing nulla\",\n      \"id\": \"ex ad labore enim\",\n      \"content\": \"ea dolore\"\n     }\n    ],\n    \"pageSize\": -47941762,\n    \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n   },\n   \"affectedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"in et irure sit\",\n      \"type\": \"est adipisicing enim\"\n     },\n     \"name\": \"veniam in sed fugiat et\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"dolor exercitation ex dolore\",\n      \"type\": \"sint\"\n     },\n     \"name\": \"amet Ut exercitation ad\"\n    }\n   ],\n   \"impactedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"quis proident minim\",\n      \"type\": \"ipsum magna Excepteur\"\n     },\n     \"name\": \"eu\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"exercitation\",\n      \"type\": \"ad sed veniam\"\n     },\n     \"name\": \"aliquip et voluptate labore\"\n    }\n   ],\n   \"entityTags\": [\n    {\n     \"stringRepresentation\": \"commodo\",\n     \"value\": \"qu\",\n     \"key\": \"fugiat ipsum reprehenderit\",\n     \"context\": \"sit et aliqua\"\n    },\n    {\n     \"stringRepresentation\": \"sed culpa\",\n     \"value\": \"dolore \",\n     \"key\": \"exercitation\",\n     \"context\": \"dolore irure exercitation\"\n    }\n   ]\n  },\n  {\n   \"displayId\": \"pariatur minim cillum\",\n   \"endTime\": -27973481,\n   \"impactLevel\": \"INFRASTRUCTURE\",\n   \"problemId\": \"quis sed nisi eiusmod\",\n   \"severityLevel\": \"AVAILABILITY\",\n   \"startTime\": 86981933,\n   \"status\": \"OPEN\",\n   \"title\": \"ipsum adipisicing veniam\",\n   \"managementZones\": [\n    {\n     \"name\": \"dolor laborum cons\",\n     \"id\": \"aliquip\"\n    },\n    {\n     \"name\": \"elit sunt do deserunt\",\n     \"id\": \"sit aute\"\n    }\n   ],\n   \"impactAnalysis\": {\n    \"impacts\": [\n     {\n      \"estimatedAffectedUsers\": -2406336,\n      \"impactType\": \"CUSTOM_APPLICATION\",\n      \"impactedEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"estimatedAffectedUsers\": -13961696,\n      \"impactType\": \"SERVICE\",\n      \"impactedEntity\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   \"linkedProblemInfo\": {\n    \"displayId\": \"ipsum ad Excepteur\",\n    \"problemId\": \"ipsum anim ut\"\n   },\n   \"rootCauseEntity\": {\n    \"entityId\": {\n     \"id\": \"ad Excepteur velit\",\n     \"type\": \"dolor cupidatat\"\n    },\n    \"name\": \"esse officia\"\n   },\n   \"problemFilters\": [\n    {\n     \"id\": \"minim Duis ut ex occaecat\",\n     \"name\": \"dolore\"\n    },\n    {\n     \"id\": \"do in culpa laboris\",\n     \"name\": \"ipsum reprehenderit non\"\n    }\n   ],\n   \"evidenceDetails\": {\n    \"totalCount\": -19095865,\n    \"details\": [\n     {\n      \"displayName\": \"exercitation adipisicing \",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"in eiusmod adipisicing non Ut\",\n        \"type\": \"nulla consectetur veniam\"\n       },\n       \"name\": \"adipisicing minim elit sit qui\"\n      },\n      \"evidenceType\": \"TRANSACTIONAL\",\n      \"rootCauseRelevant\": true,\n      \"startTime\": 42310509,\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"do cupidatat\",\n        \"type\": \"exercitation la\"\n       },\n       \"name\": \"occaecat dolore\"\n      }\n     },\n     {\n      \"displayName\": \"quis laboris enim\",\n      \"entity\": {\n       \"entityId\": {\n        \"id\": \"officia Excepteur labore\",\n        \"type\": \"eiusmod nulla\"\n       },\n       \"name\": \"officia irure Lorem\"\n      },\n      \"evidenceType\": \"AVAILABILITY_EVIDENCE\",\n      \"rootCauseRelevant\": false,\n      \"startTime\": 18934402,\n      \"groupingEntity\": {\n       \"entityId\": {\n        \"id\": \"anim est incididunt\",\n        \"type\": \"sit amet\"\n       },\n       \"name\": \"ex et aute\"\n      }\n     }\n    ]\n   },\n   \"recentComments\": {\n    \"totalCount\": -83005258,\n    \"comments\": [\n     {\n      \"createdAtTimestamp\": -28695836,\n      \"authorName\": \"ut qui in mollit non\",\n      \"context\": \"aliquip ut\",\n      \"id\": \"commodo fugiat volupt\",\n      \"content\": \"officia commodo ven\"\n     },\n     {\n      \"createdAtTimestamp\": -5239288,\n      \"authorName\": \"sint ad\",\n      \"context\": \"aliquip eiusmod tempor laboris\",\n      \"id\": \"reprehenderit nisi ul\",\n      \"content\": \"et cillum ea\"\n     }\n    ],\n    \"pageSize\": -16716723,\n    \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n   },\n   \"affectedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"elit ipsum\",\n      \"type\": \"laborum nulla aliquip dolor nostrud\"\n     },\n     \"name\": \"ex qui consequat\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"et dolor fugiat amet\",\n      \"type\": \"elit velit Duis pariatur\"\n     },\n     \"name\": \"dolor officia\"\n    }\n   ],\n   \"impactedEntities\": [\n    {\n     \"entityId\": {\n      \"id\": \"voluptate dolore\",\n      \"type\": \"aute elit in\"\n     },\n     \"name\": \"in sunt cupidatat\"\n    },\n    {\n     \"entityId\": {\n      \"id\": \"tempor sed in\",\n      \"type\": \"occaecat Ut ullamco nostrud\"\n     },\n     \"name\": \"Duis consequat esse e\"\n    }\n   ],\n   \"entityTags\": [\n    {\n     \"stringRepresentation\": \"et\",\n     \"value\": \"cillum et cupidatat\",\n     \"key\": \"irure dolor laborum in\",\n     \"context\": \"est ullamco incididunt amet aliquip\"\n    },\n    {\n     \"stringRepresentation\": \"sit occaecat sint\",\n     \"value\": \"aliquip ut\",\n     \"key\": \"culpa ea aute commodo\",\n     \"context\": \"proident aute\"\n    }\n   ]\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "objects",
					"item": [
						{
							"name": "{object Id}",
							"item": [
								{
									"name": "Gets the specified settings object | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"modified\": -94612734,\n \"schemaVersion\": \"1.0.0\",\n \"author\": \"john.doe@example.com\",\n \"schemaId\": \"builtin:anomaly.infrastructure\",\n \"scope\": \"HOST-D3A3C5A146830A79\",\n \"value\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"summary\": \"proident\",\n \"created\": -36257779\n}"
										},
										{
											"name": "No object available for the given objectId",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ipsum occaecat\",\n    \"message\": \"cillum dolore ipsum exercitation\",\n    \"path\": \"ad\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"adipisicing\",\n    \"message\": \"dolor pariatur sint magna in\",\n    \"path\": \"enim ullamco eu\"\n   }\n  ],\n  \"message\": \"ullamco laboris\",\n  \"code\": 33343250\n },\n \"code\": 9224234\n}"
										}
									]
								},
								{
									"name": "Updates an existing settings object | maturity=EARLY_ADOPTER",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 20023575\n}"
										},
										{
											"name": "Failed. Schema validation failed.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ipsum occaecat\",\n    \"message\": \"cillum dolore ipsum exercitation\",\n    \"path\": \"ad\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"adipisicing\",\n    \"message\": \"dolor pariatur sint magna in\",\n    \"path\": \"enim ullamco eu\"\n   }\n  ],\n  \"message\": \"ullamco laboris\",\n  \"code\": 33343250\n },\n \"code\": 9224234\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ipsum occaecat\",\n    \"message\": \"cillum dolore ipsum exercitation\",\n    \"path\": \"ad\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"adipisicing\",\n    \"message\": \"dolor pariatur sint magna in\",\n    \"path\": \"enim ullamco eu\"\n   }\n  ],\n  \"message\": \"ullamco laboris\",\n  \"code\": 33343250\n },\n \"code\": 9224234\n}"
										},
										{
											"name": "Failed. Conflicting resource.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ipsum occaecat\",\n    \"message\": \"cillum dolore ipsum exercitation\",\n    \"path\": \"ad\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"adipisicing\",\n    \"message\": \"dolor pariatur sint magna in\",\n    \"path\": \"enim ullamco eu\"\n   }\n  ],\n  \"message\": \"ullamco laboris\",\n  \"code\": 33343250\n },\n \"code\": 9224234\n}"
										}
									]
								},
								{
									"name": "Deletes the specified settings object | maturity=EARLY_ADOPTER",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=deserunt anim occaecat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"query": [
												{
													"key": "updateToken",
													"value": "deserunt anim occaecat",
													"description": "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks."
												}
											],
											"variable": [
												{
													"key": "objectId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=deserunt anim occaecat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "deserunt anim occaecat"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=deserunt anim occaecat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "deserunt anim occaecat"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ipsum occaecat\",\n    \"message\": \"cillum dolore ipsum exercitation\",\n    \"path\": \"ad\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"adipisicing\",\n    \"message\": \"dolor pariatur sint magna in\",\n    \"path\": \"enim ullamco eu\"\n   }\n  ],\n  \"message\": \"ullamco laboris\",\n  \"code\": 33343250\n },\n \"code\": 9224234\n}"
										},
										{
											"name": "Failed. Conflicting resource.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=deserunt anim occaecat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "deserunt anim occaecat"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"ipsum occaecat\",\n    \"message\": \"cillum dolore ipsum exercitation\",\n    \"path\": \"ad\"\n   },\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"adipisicing\",\n    \"message\": \"dolor pariatur sint magna in\",\n    \"path\": \"enim ullamco eu\"\n   }\n  ],\n  \"message\": \"ullamco laboris\",\n  \"code\": 33343250\n },\n \"code\": 9224234\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists available settings objects | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/objects?schemaIds=deserunt anim occaecat&scopes=deserunt anim occaecat&fields=objectId,value&nextPageKey=deserunt anim occaecat&pageSize=-84735961",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "schemaIds",
											"value": "deserunt anim occaecat",
											"description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "scopes",
											"value": "deserunt anim occaecat",
											"description": "A list of comma-separated scopes, that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scopes. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "fields",
											"value": "objectId,value",
											"description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `objectId,value`)."
										},
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat",
											"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
										},
										{
											"key": "pageSize",
											"value": "-84735961",
											"description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=deserunt anim occaecat&scopes=deserunt anim occaecat&fields=objectId,value&nextPageKey=deserunt anim occaecat&pageSize=-84735961",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "deserunt anim occaecat"
												},
												{
													"key": "scopes",
													"value": "deserunt anim occaecat"
												},
												{
													"key": "fields",
													"value": "objectId,value"
												},
												{
													"key": "nextPageKey",
													"value": "deserunt anim occaecat"
												},
												{
													"key": "pageSize",
													"value": "-84735961"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"totalCount\": 76936722,\n \"items\": [\n  {\n   \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"modified\": -73361100,\n   \"schemaVersion\": \"1.0.0\",\n   \"author\": \"john.doe@example.com\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"scope\": \"HOST-D3A3C5A146830A79\",\n   \"value\": {\n    \"autoMonitoring\": true\n   },\n   \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"summary\": \"Lorem consectetur exercitation officia ut\",\n   \"created\": 7876739\n  },\n  {\n   \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"modified\": 30610989,\n   \"schemaVersion\": \"1.0.0\",\n   \"author\": \"john.doe@example.com\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"scope\": \"HOST-D3A3C5A146830A79\",\n   \"value\": {\n    \"autoMonitoring\": true\n   },\n   \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"summary\": \"do\",\n   \"created\": 59665116\n  }\n ],\n \"pageSize\": -94203406,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
								},
								{
									"name": "Failed. The specified schema or scope is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=deserunt anim occaecat&scopes=deserunt anim occaecat&fields=objectId,value&nextPageKey=deserunt anim occaecat&pageSize=-84735961",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "deserunt anim occaecat"
												},
												{
													"key": "scopes",
													"value": "deserunt anim occaecat"
												},
												{
													"key": "fields",
													"value": "objectId,value"
												},
												{
													"key": "nextPageKey",
													"value": "deserunt anim occaecat"
												},
												{
													"key": "pageSize",
													"value": "-84735961"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								}
							]
						},
						{
							"name": "Creates a new settings object | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false",
											"description": "If `true`, the request runs only validation of the submitted settings objects, without saving them."
										}
									]
								},
								"description": "You can upload several objects at once. In that case each object returns its own response code. Check the response body for details."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -7401727\n },\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -5666077\n }\n]"
								},
								{
									"name": "Multi-status: different objects in the payload resulted in different statuses.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -7401727\n },\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -5666077\n }\n]"
								},
								{
									"name": "Failed. Schema validation failed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PAYLOAD_BODY\",\n     \"location\": \"laboris reprehenderit\",\n     \"message\": \"adipisicing Excepteur\",\n     \"path\": \"laborum fugiat\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"esse est nostrud in\",\n     \"message\": \"esse voluptate labore minim\",\n     \"path\": \"minim Ut\"\n    }\n   ],\n   \"message\": \"pariatur sed\",\n   \"code\": 40900164\n  },\n  \"code\": 88884139\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"\",\n     \"message\": \"in minim officia\",\n     \"path\": \"Excepteur voluptate aliquip\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"la\",\n     \"message\": \"no\",\n     \"path\": \"fugiat id aliquip ullamco\"\n    }\n   ],\n   \"message\": \"mollit veniam in consectetur amet\",\n   \"code\": 33165681\n  },\n  \"code\": 34453187\n }\n]"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PAYLOAD_BODY\",\n     \"location\": \"laboris reprehenderit\",\n     \"message\": \"adipisicing Excepteur\",\n     \"path\": \"laborum fugiat\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"esse est nostrud in\",\n     \"message\": \"esse voluptate labore minim\",\n     \"path\": \"minim Ut\"\n    }\n   ],\n   \"message\": \"pariatur sed\",\n   \"code\": 40900164\n  },\n  \"code\": 88884139\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"\",\n     \"message\": \"in minim officia\",\n     \"path\": \"Excepteur voluptate aliquip\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"la\",\n     \"message\": \"no\",\n     \"path\": \"fugiat id aliquip ullamco\"\n    }\n   ],\n   \"message\": \"mollit veniam in consectetur amet\",\n   \"code\": 33165681\n  },\n  \"code\": 34453187\n }\n]"
								},
								{
									"name": "Failed. Conflicting resource.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"schemaVersion\": \"1.0.0\",\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PAYLOAD_BODY\",\n     \"location\": \"laboris reprehenderit\",\n     \"message\": \"adipisicing Excepteur\",\n     \"path\": \"laborum fugiat\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"esse est nostrud in\",\n     \"message\": \"esse voluptate labore minim\",\n     \"path\": \"minim Ut\"\n    }\n   ],\n   \"message\": \"pariatur sed\",\n   \"code\": 40900164\n  },\n  \"code\": 88884139\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"\",\n     \"message\": \"in minim officia\",\n     \"path\": \"Excepteur voluptate aliquip\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"la\",\n     \"message\": \"no\",\n     \"path\": \"fugiat id aliquip ullamco\"\n    }\n   ],\n   \"message\": \"mollit veniam in consectetur amet\",\n   \"code\": 33165681\n  },\n  \"code\": 34453187\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "schemas",
					"item": [
						{
							"name": "Lists available settings schemas | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"latestSchemaVersion\": \"1.4.2\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"displayName\": \"Anomaly Detection for Infrastructure\"\n  },\n  {\n   \"latestSchemaVersion\": \"1.4.2\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"displayName\": \"Anomaly Detection for Infrastructure\"\n  }\n ],\n \"totalCount\": 1\n}"
								}
							]
						},
						{
							"name": "Gets parameters of the specified settings schema | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas",
										":schemaId"
									],
									"query": [
										{
											"key": "schemaVersion",
											"value": "deserunt anim occaecat",
											"description": "The version of the required schema. \n\n If not set, the most recent version is returned."
										}
									],
									"variable": [
										{
											"key": "schemaId",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the required schema."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=deserunt anim occaecat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"query": [
												{
													"key": "schemaVersion",
													"value": "deserunt anim occaecat"
												}
											],
											"variable": [
												{
													"key": "schemaId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"dynatrace\": \"1.0\",\n \"schemaId\": \"builtin:anomaly.infrastructure\",\n \"displayName\": \"Anomaly detection for infrastructure\",\n \"description\": \"Dynatrace automatically detects infrastructure-related performance anomalies such as high CPU saturation, memory outages, and low disk-space conditions\",\n \"documentation\": \"laboris sint\",\n \"version\": \"1.4.2\",\n \"multiObject\": false,\n \"ordered\": false,\n \"maxObjects\": 10,\n \"allowedScopes\": [\n  \"host\",\n  \"application\"\n ],\n \"enums\": {},\n \"types\": {},\n \"properties\": {},\n \"constraints\": [\n  {\n   \"minimumPropertyCount\": 1,\n   \"maximumPropertyCount\": 2,\n   \"customValidatorId\": \"my-min-max\",\n   \"customMessage\": \"ad ullamco reprehenderit\",\n   \"properties\": [\n    \"magna cillum velit ipsum nulla\",\n    \"aliquip elit pariatur\"\n   ],\n   \"type\": \"CUSTOM_VALIDATOR_REF\"\n  },\n  {\n   \"minimumPropertyCount\": 1,\n   \"maximumPropertyCount\": 2,\n   \"customValidatorId\": \"my-min-max\",\n   \"customMessage\": \"adipisicing ullamco sunt magna\",\n   \"properties\": [\n    \"enim ea\",\n    \"labore aliqua enim\"\n   ],\n   \"type\": \"UNKNOWN\"\n  }\n ],\n \"metadata\": {}\n}"
								},
								{
									"name": "Failed. The specified schema doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=deserunt anim occaecat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"query": [
												{
													"key": "schemaVersion",
													"value": "deserunt anim occaecat"
												}
											],
											"variable": [
												{
													"key": "schemaId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "slo",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets parameters and the calculated value of an SLO",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/slo/:id?from=deserunt anim occaecat&to=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo",
										":id"
									],
									"query": [
										{
											"key": "from",
											"value": "deserunt anim occaecat",
											"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat",
											"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "685627e4-8f46-9e20-3ed7-c533de7f7266",
											"description": "(Required) The ID of the required SLO."
										}
									]
								},
								"description": "If **from** and **to** parameters are provided, the SLO is calculated for that timeframe; otherwise the SLO's own timeframe is used."
							},
							"response": [
								{
									"name": "Success. The response contains the parameters and calculated values of the requested SLO.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id?from=deserunt anim occaecat&to=deserunt anim occaecat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "deserunt anim occaecat"
												},
												{
													"key": "to",
													"value": "deserunt anim occaecat"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"errorBudget\": 1.25,\n \"useRateMetric\": true,\n \"metricRate\": \"builtin:service.successes.server.rate\",\n \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n \"metricDenominator\": \"builtin:service.requestCount.total\",\n \"evaluationType\": \"AGGREGATE\",\n \"numeratorValue\": 80,\n \"denominatorValue\": 90,\n \"relatedOpenProblems\": -47696641,\n \"evaluatedPercentage\": 96.25,\n \"timeframe\": \"-1d\",\n \"filter\": \"type(\\\"HOST\\\")\",\n \"name\": \"Payment service availability\",\n \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n \"target\": 95,\n \"description\": \"Check the SLO for our payment service\",\n \"enabled\": true,\n \"status\": \"WARNING\",\n \"warning\": 97.5,\n \"error\": \"NONE\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id?from=deserunt anim occaecat&to=deserunt anim occaecat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "deserunt anim occaecat"
												},
												{
													"key": "to",
													"value": "deserunt anim occaecat"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id?from=deserunt anim occaecat&to=deserunt anim occaecat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"query": [
												{
													"key": "from",
													"value": "deserunt anim occaecat"
												},
												{
													"key": "to",
													"value": "deserunt anim occaecat"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								}
							]
						},
						{
							"name": "Updates an existing SLO",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "685627e4-8f46-9e20-3ed7-c533de7f7266",
											"description": "(Required) The ID of the required SLO."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								}
							]
						},
						{
							"name": "Deletes an SLO",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/slo/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "685627e4-8f46-9e20-3ed7-c533de7f7266",
											"description": "(Required) The ID of the required SLO."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The SLO has been deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								},
								{
									"name": "Failed. Conflicting resource.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								},
								{
									"name": "Internal server error.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/slo/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"slo",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available SLOs along with calculated values",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/slo?nextPageKey=deserunt anim occaecat&pageSize=-84735961&from=deserunt anim occaecat&to=deserunt anim occaecat&sloSelector=&sort=name&timeFrame=CURRENT&pageIdx=1&demo=false&evaluate=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"slo"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "deserunt anim occaecat",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-84735961",
									"description": "The amount of SLOs in a single response payload. \n\nThe maximal allowed page size is 10000. \n\nIf not set, 10 is used."
								},
								{
									"key": "from",
									"value": "deserunt anim occaecat",
									"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat",
									"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "sloSelector",
									"value": "",
									"description": "The scope of the query. Only SLOs matching the provided criteria are included in the response. \n\nYou can filter for either \"name\", \"ID\" or any text which is present inside name or description (i.e.: .../api/v2/slo?sloSelector=name(\"Service Availability\"), .../api/v2/slo?sloSelector=id(\"<SLO_ID>\"), .../api/v2/slo?sloSelector=text(\"Custom description\"))."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "The sorting of SLO entries: \n* `name`: Names in ascending order. \n* `-name`: Names in descending order. \n\nIf not set, the ascending order is used."
								},
								{
									"key": "timeFrame",
									"value": "CURRENT",
									"description": "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used."
								},
								{
									"key": "pageIdx",
									"value": "1",
									"description": "Only SLOs on the given page are included in the response. The first page has the index '1'."
								},
								{
									"key": "demo",
									"value": "false",
									"description": "Get your SLOs (`false`) or a set of demo SLOs (`true`)."
								},
								{
									"key": "evaluate",
									"value": "false",
									"description": "Get your SLOs without them being evaluated (`false`) or with evaluations (`true`)."
								}
							]
						},
						"description": "By default the values are calculated for the SLO's own timeframe. You can use a custom timeframe: \n\n1. Set the **timeFrame** parameter to `GTF`. \n2. Provide the timeframe in **from** and **to** parameters."
					},
					"response": [
						{
							"name": "Success. The response contains the parameters and calculated values of the requested SLO.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/slo?nextPageKey=deserunt anim occaecat&pageSize=-84735961&from=deserunt anim occaecat&to=deserunt anim occaecat&sloSelector=&sort=name&timeFrame=CURRENT&pageIdx=1&demo=false&evaluate=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-84735961"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "sloSelector",
											"value": ""
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "timeFrame",
											"value": "CURRENT"
										},
										{
											"key": "pageIdx",
											"value": "1"
										},
										{
											"key": "demo",
											"value": "false"
										},
										{
											"key": "evaluate",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"totalCount\": -10052013,\n \"SLOs\": [\n  {\n   \"errorBudget\": 1.25,\n   \"useRateMetric\": true,\n   \"metricRate\": \"builtin:service.successes.server.rate\",\n   \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n   \"metricDenominator\": \"builtin:service.requestCount.total\",\n   \"evaluationType\": \"AGGREGATE\",\n   \"numeratorValue\": 80,\n   \"denominatorValue\": 90,\n   \"relatedOpenProblems\": 49801076,\n   \"evaluatedPercentage\": 96.25,\n   \"timeframe\": \"-1d\",\n   \"filter\": \"type(\\\"HOST\\\")\",\n   \"name\": \"Payment service availability\",\n   \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n   \"target\": 95,\n   \"description\": \"Check the SLO for our payment service\",\n   \"enabled\": true,\n   \"status\": \"WARNING\",\n   \"warning\": 97.5,\n   \"error\": \"NONE\"\n  },\n  {\n   \"errorBudget\": 1.25,\n   \"useRateMetric\": true,\n   \"metricRate\": \"builtin:service.successes.server.rate\",\n   \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n   \"metricDenominator\": \"builtin:service.requestCount.total\",\n   \"evaluationType\": \"AGGREGATE\",\n   \"numeratorValue\": 80,\n   \"denominatorValue\": 90,\n   \"relatedOpenProblems\": 88720745,\n   \"evaluatedPercentage\": 96.25,\n   \"timeframe\": \"-1d\",\n   \"filter\": \"type(\\\"HOST\\\")\",\n   \"name\": \"Payment service availability\",\n   \"id\": \"123e4567-e89b-42d3-a456-556642440000\",\n   \"target\": 95,\n   \"description\": \"Check the SLO for our payment service\",\n   \"enabled\": true,\n   \"status\": \"WARNING\",\n   \"warning\": 97.5,\n   \"error\": \"NONE\"\n  }\n ],\n \"pageSize\": 86152055,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/slo?nextPageKey=deserunt anim occaecat&pageSize=-84735961&from=deserunt anim occaecat&to=deserunt anim occaecat&sloSelector=&sort=name&timeFrame=CURRENT&pageIdx=1&demo=false&evaluate=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "pageSize",
											"value": "-84735961"
										},
										{
											"key": "from",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "to",
											"value": "deserunt anim occaecat"
										},
										{
											"key": "sloSelector",
											"value": ""
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "timeFrame",
											"value": "CURRENT"
										},
										{
											"key": "pageIdx",
											"value": "1"
										},
										{
											"key": "demo",
											"value": "false"
										},
										{
											"key": "evaluate",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				},
				{
					"name": "Creates a new SLO",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/slo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"slo"
							]
						}
					},
					"response": [
						{
							"name": "Success. The new SLO has been created. Response doesn't have a body. The **location** response header contains the ID of the new SLO.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "location",
									"value": "",
									"description": "The location of the new resource created by this request."
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						},
						{
							"name": "Failed. Conflicting resource.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						},
						{
							"name": "Internal server error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"name\": \"Payment service availability\",\n    \"customDescription\": \"Rate of successful payments per week\",\n    \"useRateMetric\": true,\n    \"metricRate\": \"builtin:service.successes.server.rate\",\n    \"metricNumerator\": \"builtin:service.errors.server.successCount\",\n    \"metricDenominator\": \"builtin:service.requestCount.total\",\n    \"evaluationType\": \"AGGREGATE\",\n    \"filter\": \"type(\\\"HOST\\\")\",\n    \"target\": 95,\n    \"warning\": 97.5,\n    \"timeframe\": \"-1d\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"slo"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "synthetic",
			"item": [
				{
					"name": "locations",
					"item": [
						{
							"name": "{location Id}",
							"item": [
								{
									"name": "Gets properties of the specified location",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The Dynatrace entity ID of the required location."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains parameters of the synthetic location.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"entityId\": \"Duis\",\n \"latitude\": 61826663.45319894,\n \"longitude\": -20462536.265093997,\n \"name\": \"officia consectetur\",\n \"type\": \"PUBLIC\",\n \"countryCode\": \"do \",\n \"regionCode\": \"dolor dolore\",\n \"city\": \"anim fugiat\",\n \"status\": \"ENABLED\",\n \"geoLocationId\": \"mollit amet sed nulla\"\n}"
										}
									]
								},
								{
									"name": "Updates the specified synthetic location",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"PUBLIC\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The Dynatrace entity ID of the synthetic location to be updated."
												}
											]
										},
										"description": "For public locations you can only change the location status."
									},
									"response": [
										{
											"name": "Success. The location has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"PUBLIC\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes the specified private synthetic location",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "deserunt anim occaecat",
													"description": "(Required) The Dynatrace entity ID of the private synthetic location to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The location has been deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "status",
							"item": [
								{
									"name": "Checks the status of public synthetic locations",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains the public locations status.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"publicLocationsEnabled\": false\n}"
										}
									]
								},
								{
									"name": "Changes the status of public synthetic locations",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"publicLocationsEnabled\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												"status"
											]
										}
									},
									"response": [
										{
											"name": "Success. Locations status has been updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publicLocationsEnabled\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict. Public locations couldn't be disabled because there are monitors assigned to them.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publicLocationsEnabled\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														"status"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Lists all synthetic locations (both public and private) available for your environment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations?cloudPlatform=AWS&type=PUBLIC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									],
									"query": [
										{
											"key": "cloudPlatform",
											"value": "AWS",
											"description": "Filters the resulting set of locations to those which are hosted on a specific cloud platform."
										},
										{
											"key": "type",
											"value": "PUBLIC",
											"description": "Filters the resulting set of locations to those of a specific type."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations?cloudPlatform=AWS&type=PUBLIC",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											],
											"query": [
												{
													"key": "cloudPlatform",
													"value": "AWS"
												},
												{
													"key": "type",
													"value": "PUBLIC"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"locations\": [\n  {\n   \"name\": \"Gdansk\",\n   \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n   \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n   \"type\": \"PUBLIC\",\n   \"cloudPlatform\": \"AMAZON_EC2\",\n   \"ips\": [\n    \"134.189.153.97\",\n    \"134.189.153.98\"\n   ],\n   \"stage\": \"GA\",\n   \"status\": \"ENABLED\",\n   \"capabilities\": [\n    \"BROWSER\",\n    \"HTTP\"\n   ]\n  },\n  {\n   \"name\": \"My private location\",\n   \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n   \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n   \"type\": \"PRIVATE\",\n   \"status\": \"ENABLED\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Creates a new private synthetic location",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entityId\": \"commodo mollit dolor\",\n    \"latitude\": 48514637.211667985,\n    \"longitude\": -63073715.51454439,\n    \"name\": \"laborum nisi\",\n    \"type\": \"PRIVATE\",\n    \"countryCode\": \"id et ad\",\n    \"regionCode\": \"ipsum mollit eiusmod\",\n    \"city\": \"et amet\",\n    \"status\": \"HIDDEN\",\n    \"geoLocationId\": \"ullamco exercitation dolo\",\n    \"nodes\": [\n        \"culpa esse ullamco ut\",\n        \"consectetur exercitation\"\n    ],\n    \"availabilityLocationOutage\": true,\n    \"availabilityNodeOutage\": true,\n    \"locationNodeOutageDelayInMinutes\": 1,\n    \"availabilityNotificationsEnabled\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									]
								}
							},
							"response": [
								{
									"name": "Success. The private location has been created. The response contains the ID of the new location.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entityId\": \"reprehenderit\",\n    \"latitude\": 56753640.77192658,\n    \"longitude\": 86544917.45496169,\n    \"name\": \"culpa mollit deserunt adipisicing Excepteur\",\n    \"type\": \"PRIVATE\",\n    \"countryCode\": \"commodo consequat minim proident\",\n    \"regionCode\": \"cillum aute adipisicing Excepteur\",\n    \"city\": \"ullamco qui aliqua nostr\",\n    \"status\": \"ENABLED\",\n    \"geoLocationId\": \"occaecat et\",\n    \"nodes\": [\n        \"occaecat eu\",\n        \"in dolore non do pariatur\"\n    ],\n    \"availabilityLocationOutage\": false,\n    \"availabilityNodeOutage\": true,\n    \"locationNodeOutageDelayInMinutes\": 4,\n    \"availabilityNotificationsEnabled\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"entityId\": \"fugiat\",\n \"geoLocationId\": \"officia deserunt do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "nodes",
					"item": [
						{
							"name": "Lists all synthetic nodes available in your environment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"nodes\": [\n  {\n   \"activeGateVersion\": \"qui fugiat Ut\",\n   \"autoUpdateEnabled\": true,\n   \"browserMonitorsEnabled\": true,\n   \"entityId\": \"et sunt\",\n   \"healthCheckStatus\": \"dolore\",\n   \"hostname\": \"irure elit cupidatat\",\n   \"ips\": [\n    \"magna ut reprehenderit\",\n    \"ut sunt consectetur dolore\"\n   ],\n   \"oneAgentRoutingEnabled \": true,\n   \"operatingSystem\": \"Duis in est\",\n   \"playerVersion\": \"cillum nisi laboris adipisicing Excepteur\",\n   \"status\": \"officia commodo fugiat do\",\n   \"version\": \"veniam occaecat culpa elit\"\n  },\n  {\n   \"activeGateVersion\": \"non\",\n   \"autoUpdateEnabled\": false,\n   \"browserMonitorsEnabled\": true,\n   \"entityId\": \"aliquip officia\",\n   \"healthCheckStatus\": \"minim ea consequat\",\n   \"hostname\": \"ullamco\",\n   \"ips\": [\n    \"proident aliquip qui voluptate\",\n    \"incididunt nisi amet in qui\"\n   ],\n   \"oneAgentRoutingEnabled \": true,\n   \"operatingSystem\": \"sit\",\n   \"playerVersion\": \"nulla irure cillum\",\n   \"status\": \"anim labore sunt\",\n   \"version\": \"Lorem aliquip amet mollit\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Lists properties of the specified synthetic node",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes",
										":nodeId"
									],
									"variable": [
										{
											"key": "nodeId",
											"value": "deserunt anim occaecat",
											"description": "(Required) The ID of the required synthetic node."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"activeGateVersion\": \"aute proident\",\n \"autoUpdateEnabled\": true,\n \"browserMonitorsEnabled\": true,\n \"browserType\": \"exercitation mollit minim sed\",\n \"browserVersion\": \"exercitation esse officia enim\",\n \"entityId\": \"tempor fugiat minim\",\n \"healthCheckStatus\": \"aliqua\",\n \"hostname\": \"eiusmod\",\n \"ips\": [\n  \"velit\",\n  \"commodo\"\n ],\n \"oneAgentRoutingEnabled \": true,\n \"operatingSystem\": \"mollit\",\n \"playerVersion\": \"in culpa cillum\",\n \"status\": \"id ipsum\",\n \"version\": \"ullamco laborum nisi\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns detailed information about last HTTP monitor execution. | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/synthetic/execution/:monitorId/:resultType?locationId=deserunt anim occaecat",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"synthetic",
								"execution",
								":monitorId",
								":resultType"
							],
							"query": [
								{
									"key": "locationId",
									"value": "deserunt anim occaecat",
									"description": "Filters the results to those executed by specified Synthetic location. Specify the ID of the location."
								}
							],
							"variable": [
								{
									"key": "monitorId",
									"value": "deserunt anim occaecat",
									"description": "(Required) Identifier of the HTTP monitor for which last execution result is returned."
								},
								{
									"key": "resultType",
									"value": "FAILED",
									"description": "(Required) Defines the result type of the last HTTP monitor's execution."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success. The response contains detailed data.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/synthetic/execution/:monitorId/:resultType?locationId=deserunt anim occaecat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"execution",
										":monitorId",
										":resultType"
									],
									"query": [
										{
											"key": "locationId",
											"value": "deserunt anim occaecat"
										}
									],
									"variable": [
										{
											"key": "monitorId"
										},
										{
											"key": "resultType"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"monitorId\": \"aliqua nostrud\",\n \"locationsExecutionResults\": [\n  {\n   \"locationId\": \"do commodo\",\n   \"executionId\": \"adipisicing ut\",\n   \"requestResults\": [\n    {\n     \"requestId\": \"anim et consectetur eiusmod adipisicing\",\n     \"requestName\": \"occaecat labore aute\",\n     \"sequenceNumber\": 38259297,\n     \"startTimestamp\": -32755864,\n     \"engineId\": -18469722,\n     \"publicLocation\": true,\n     \"url\": \"Lorem ullamco dolore ut\",\n     \"method\": \"aute id al\",\n     \"requestBody\": \"veniam \",\n     \"requestHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"responseStatusCode\": -36462291,\n     \"responseBody\": \"Ut do sunt consectetur\",\n     \"responseSize\": 79829554,\n     \"responseBodySizeLimitExceeded\": true,\n     \"responseHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"resolvedIps\": [\n      \"dolor proident labore cillum ipsum\",\n      \"deserunt dolor nisi sint ut\"\n     ],\n     \"healthStatusCode\": 43458786,\n     \"healthStatus\": \"occaecat\",\n     \"responseMessage\": \"aute cillum velit\",\n     \"peerCertificateExpiryDate\": 48045489,\n     \"peerCertificateDetails\": \"enim\",\n     \"totalTime\": 7445657,\n     \"hostNameResolutionTime\": -93369756,\n     \"tcpConnectTime\": -10442273,\n     \"tlsHandshakeTime\": -36487475,\n     \"timeToFirstByte\": -50027174,\n     \"redirectionTime\": -82218918,\n     \"waitingTime\": -44274562,\n     \"redirectsCount\": -54339655,\n     \"failureMessage\": \"exercitation Excepteur ex\"\n    },\n    {\n     \"requestId\": \"consectetur voluptate\",\n     \"requestName\": \"deserunt\",\n     \"sequenceNumber\": 41000759,\n     \"startTimestamp\": -24097890,\n     \"engineId\": -51353775,\n     \"publicLocation\": true,\n     \"url\": \"dolore laboris dolor ullamco minim\",\n     \"method\": \"anim do ea proident\",\n     \"requestBody\": \"laboris labore ut\",\n     \"requestHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"responseStatusCode\": -99082577,\n     \"responseBody\": \"eu laborum\",\n     \"responseSize\": 83723794,\n     \"responseBodySizeLimitExceeded\": true,\n     \"responseHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"resolvedIps\": [\n      \"magna ex\",\n      \"enim ut consequat est do\"\n     ],\n     \"healthStatusCode\": -91310292,\n     \"healthStatus\": \"sint\",\n     \"responseMessage\": \"proident ullamco\",\n     \"peerCertificateExpiryDate\": 92982847,\n     \"peerCertificateDetails\": \"dolor laboris\",\n     \"totalTime\": 44208002,\n     \"hostNameResolutionTime\": -85616301,\n     \"tcpConnectTime\": 31898567,\n     \"tlsHandshakeTime\": -34501004,\n     \"timeToFirstByte\": -71074005,\n     \"redirectionTime\": -18961248,\n     \"waitingTime\": -12408423,\n     \"redirectsCount\": -89582530,\n     \"failureMessage\": \"esse sunt elit laborum\"\n    }\n   ]\n  },\n  {\n   \"locationId\": \"ea dolore\",\n   \"executionId\": \"culpa proident dolor ipsum\",\n   \"requestResults\": [\n    {\n     \"requestId\": \"aliquip cupidatat\",\n     \"requestName\": \"elit anim reprehenderit sit\",\n     \"sequenceNumber\": -88065734,\n     \"startTimestamp\": -18763066,\n     \"engineId\": 98247497,\n     \"publicLocation\": false,\n     \"url\": \"qui\",\n     \"method\": \"esse est cupidatat\",\n     \"requestBody\": \"tempor in cupidatat\",\n     \"requestHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"responseStatusCode\": -2697677,\n     \"responseBody\": \"sit ad\",\n     \"responseSize\": -70724495,\n     \"responseBodySizeLimitExceeded\": false,\n     \"responseHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"resolvedIps\": [\n      \"commodo Ut\",\n      \"esse dolor mollit\"\n     ],\n     \"healthStatusCode\": -81780056,\n     \"healthStatus\": \"amet enim voluptate esse ut\",\n     \"responseMessage\": \"aliqua\",\n     \"peerCertificateExpiryDate\": -41072049,\n     \"peerCertificateDetails\": \"elit id cupidatat do\",\n     \"totalTime\": -22463668,\n     \"hostNameResolutionTime\": 30526673,\n     \"tcpConnectTime\": -96139889,\n     \"tlsHandshakeTime\": 43228946,\n     \"timeToFirstByte\": 21579346,\n     \"redirectionTime\": 32048200,\n     \"waitingTime\": -12739985,\n     \"redirectsCount\": -62728828,\n     \"failureMessage\": \"est non\"\n    },\n    {\n     \"requestId\": \"elit\",\n     \"requestName\": \"aute\",\n     \"sequenceNumber\": -31039996,\n     \"startTimestamp\": 54778757,\n     \"engineId\": -13574514,\n     \"publicLocation\": true,\n     \"url\": \"est non enim\",\n     \"method\": \"laboris id\",\n     \"requestBody\": \"aliqua proident laborum\",\n     \"requestHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"responseStatusCode\": -78941273,\n     \"responseBody\": \"ut nostrud\",\n     \"responseSize\": 71240366,\n     \"responseBodySizeLimitExceeded\": false,\n     \"responseHeaders\": [\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"resolvedIps\": [\n      \"cillum adipisicing magna\",\n      \"in ea\"\n     ],\n     \"healthStatusCode\": 41587002,\n     \"healthStatus\": \"adipisicing\",\n     \"responseMessage\": \"nostrud\",\n     \"peerCertificateExpiryDate\": -29065609,\n     \"peerCertificateDetails\": \"est culpa laboris\",\n     \"totalTime\": -88258229,\n     \"hostNameResolutionTime\": -70403058,\n     \"tcpConnectTime\": 88141958,\n     \"tlsHandshakeTime\": -84328029,\n     \"timeToFirstByte\": 59045761,\n     \"redirectionTime\": -30301293,\n     \"waitingTime\": 92420444,\n     \"redirectsCount\": 9854562,\n     \"failureMessage\": \"Lorem in aliquip proident\"\n    }\n   ]\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "tenant Token Rotation",
			"item": [
				{
					"name": "Finishes tenant token rotation",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tenantTokenRotation/finish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenantTokenRotation",
								"finish"
							]
						},
						"description": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation."
					},
					"response": [
						{
							"name": "Success. The rotation process is completed. The **active** field of the response contains the new tenant token.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/finish",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"finish"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"old\": {\n  \"value\": \"in incididunt irure\"\n },\n \"active\": {\n  \"value\": \"in ex officia nostrud\"\n }\n}"
						},
						{
							"name": "No ongoing rotation process.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/finish",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"finish"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				},
				{
					"name": "Starts tenant token rotation",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tenantTokenRotation/start",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenantTokenRotation",
								"start"
							]
						},
						"description": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation."
					},
					"response": [
						{
							"name": "Success. The new tenant token is created and will replace the old one. The **active** field of the response contains the new tenant token.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"start"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"old\": {\n  \"value\": \"in incididunt irure\"\n },\n \"active\": {\n  \"value\": \"in ex officia nostrud\"\n }\n}"
						},
						{
							"name": "Failed. Another rotation process is already in progress.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"start"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				},
				{
					"name": "Cancels tenant token rotation",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tenantTokenRotation/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenantTokenRotation",
								"cancel"
							]
						},
						"description": "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation."
					},
					"response": [
						{
							"name": "Success. Rotation process has been cancelled. The current tenant token remains valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"cancel"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"old\": {\n  \"value\": \"in incididunt irure\"\n },\n \"active\": {\n  \"value\": \"in ex officia nostrud\"\n }\n}"
						},
						{
							"name": "Failed. There is no ongoing rotation process.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenantTokenRotation/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenantTokenRotation",
										"cancel"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"nostrud amet\",\n    \"message\": \"dolore in est\",\n    \"path\": \"sunt enim nisi dolor\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"occaecat enim\",\n    \"message\": \"sed voluptate adi\",\n    \"path\": \"nulla ea enim\"\n   }\n  ],\n  \"message\": \"et exercitation commodo\",\n  \"code\": 14278326\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Provides advice for security problems. | maturity=EARLY_ADOPTER",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/davis/securityAdvices?managementZoneFilter=deserunt anim occaecat&nextPageKey=deserunt anim occaecat&pageSize=-84735961",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"davis",
						"securityAdvices"
					],
					"query": [
						{
							"key": "managementZoneFilter",
							"value": "deserunt anim occaecat",
							"description": "To specify management zones, use one of the options listed below. For each option you can specify multiple comma-separated values. If several values are specified, the **OR** logic applies. All values are case-sensitive and must be quoted. \n\n* Management zone ID: ids(\"mzId-1\", \"mzId-2\"). \n* Management zone names: names(\"mz-1\", \"mz-2\"). \n\nYou can specify several comma-separated criteria (for example, `names(\"myMz\"),ids(\"9130632296508575249\")`)."
						},
						{
							"key": "nextPageKey",
							"value": "deserunt anim occaecat",
							"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
						},
						{
							"key": "pageSize",
							"value": "-84735961",
							"description": "The amount of security advices in a single response payload. \n\nThe maximal allowed page size is 50. \n\nIf not set, 5 is used."
						}
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/davis/securityAdvices?managementZoneFilter=deserunt anim occaecat&nextPageKey=deserunt anim occaecat&pageSize=-84735961",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"davis",
								"securityAdvices"
							],
							"query": [
								{
									"key": "managementZoneFilter",
									"value": "deserunt anim occaecat"
								},
								{
									"key": "nextPageKey",
									"value": "deserunt anim occaecat"
								},
								{
									"key": "pageSize",
									"value": "-84735961"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						}
					],
					"cookie": [],
					"body": "{\n \"totalCount\": 33746745,\n \"pageSize\": -6521002,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"advices\": [\n  {\n   \"name\": \"adipisicing enim\",\n   \"vulnerableComponent\": \"deserunt\",\n   \"technology\": \"JAVA\",\n   \"adviceType\": \"UPGRADE\",\n   \"critical\": [\n    \"do laboris\",\n    \"ut\"\n   ],\n   \"high\": [\n    \"ut occaecat ex laborum elit\",\n    \"Ut id ullamco elit\"\n   ],\n   \"medium\": [\n    \"aliquip et veniam\",\n    \"nostrud nisi ut sunt pariatur\"\n   ],\n   \"low\": [\n    \"eiusmod dolor\",\n    \"qui esse\"\n   ],\n   \"none\": [\n    \"ex anim ad Ut\",\n    \"aute aliqua ut qui\"\n   ]\n  },\n  {\n   \"name\": \"quis elit est aliquip\",\n   \"vulnerableComponent\": \"proident nisi tempor\",\n   \"technology\": \"JAVA\",\n   \"adviceType\": \"UPGRADE\",\n   \"critical\": [\n    \"de\",\n    \"anim aliquip\"\n   ],\n   \"high\": [\n    \"magna Excepteur Ut\",\n    \"ex labore\"\n   ],\n   \"medium\": [\n    \"dolore id fugiat cillum aute\",\n    \"et pariatur ea in\"\n   ],\n   \"low\": [\n    \"Ut eiusmod\",\n    \"consequat commodo consectetur ea\"\n   ],\n   \"none\": [\n    \"ut dolor in Duis enim\",\n    \"reprehenderit cillum\"\n   ]\n  }\n ]\n}"
				}
			]
		},
		{
			"name": "Returns all releases | maturity=EARLY_ADOPTER",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/releases?from=deserunt anim occaecat&to=deserunt anim occaecat&nextPageKey=deserunt anim occaecat&pageSize=-84735961&demo=false&releasesSelector=&sort=name",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"releases"
					],
					"query": [
						{
							"key": "from",
							"value": "deserunt anim occaecat",
							"description": "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`)."
						},
						{
							"key": "to",
							"value": "deserunt anim occaecat",
							"description": "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
						},
						{
							"key": "nextPageKey",
							"value": "deserunt anim occaecat",
							"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
						},
						{
							"key": "pageSize",
							"value": "-84735961",
							"description": "The amount of Releases in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
						},
						{
							"key": "demo",
							"value": "false",
							"description": "Get your Releases (`false`) or a set of demo Releases (`true`)."
						},
						{
							"key": "releasesSelector",
							"value": "",
							"description": "Defines the scope of the query. Only Releases matching the provided criteria are included in the response.\n\nYou can add one or several of the criteria listed below.\n* Monitoring state: monitoringState(\"Active\") or monitoringState(\"Inactive\"). You can specify only one monitoring state. \n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Name: entityName(\"name\"). Filters for all releases that contain the given value in their name. The filter is case-insensitive.\n* Entity ID: entityId(\"id\").\n* Product: releasesProduct(\"product\"). Filters for all releases that contain the given value in their product. The filter is case-insensitive.\n* Stage: releasesStage(\"stage\"). Filters for all releases that contain the given value in their stage. The filter is case-insensitive.\n* Version: releasesVersion(\"version\"). Filters for all releases that contain the given value in their version. The filter is case-insensitive.\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/releases?releasesSelector=name(\"Server\"),monitoringState(\"Active\"),healthState(\"HEALTHY\"),releasesVersion(\"1.0.7\")."
						},
						{
							"key": "sort",
							"value": "name",
							"description": "Specifies the field that is used for sorting the releases list.\nThe field has a sign prefix (+/-) which corresponds to the sorting order ('+' for ascending and '-' for descending). If no sign prefix is set, then the default ascending sorting order will be applied. You can sort by the following properties:\n* 'product': Product name\n* 'name': Release name\n* 'stage': Stage name\n* 'version': Version\n* 'instances': Instances\n* 'traffic': Traffic\n\nIf not set, the ascending order sorting for name is applied."
						}
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/releases?from=deserunt anim occaecat&to=deserunt anim occaecat&nextPageKey=deserunt anim occaecat&pageSize=-84735961&demo=false&releasesSelector=&sort=name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"releases"
							],
							"query": [
								{
									"key": "from",
									"value": "deserunt anim occaecat"
								},
								{
									"key": "to",
									"value": "deserunt anim occaecat"
								},
								{
									"key": "nextPageKey",
									"value": "deserunt anim occaecat"
								},
								{
									"key": "pageSize",
									"value": "-84735961"
								},
								{
									"key": "demo",
									"value": "false"
								},
								{
									"key": "releasesSelector",
									"value": ""
								},
								{
									"key": "sort",
									"value": "name"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						}
					],
					"cookie": [],
					"body": "{\n \"totalCount\": -85995490,\n \"releases\": [\n  {\n   \"instances\": [\n    {\n     \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n     \"buildVersion\": \"223005\",\n     \"securityVulnerabilities\": [\n      \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n     ],\n     \"problems\": [\n      \"573177299181554914_1616573184015V2\"\n     ]\n    },\n    {\n     \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n     \"buildVersion\": \"223005\",\n     \"securityVulnerabilities\": [\n      \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n     ],\n     \"problems\": [\n      \"573177299181554914_1616573184015V2\"\n     ]\n    }\n   ],\n   \"softwareTechs\": [\n    {\n     \"technology\": \"JAVA\",\n     \"edition\": \"OpenJDK\",\n     \"version\": \"1.8.0_242\",\n     \"verbatimType\": \"Java\"\n    }\n   ],\n   \"releaseEntityId\": \"PROCESS_GROUP-DFDBAC9CBF104253\",\n   \"securityVulnerabilitiesCount\": 4,\n   \"affectedByProblems\": true,\n   \"affectedBySecurityVulnerabilities\": true,\n   \"product\": \"Sockshop\",\n   \"throughput\": 923234,\n   \"version\": \"1.195.34.12341232423-012342\",\n   \"name\": \"cluster\",\n   \"running\": true,\n   \"problemCount\": 4,\n   \"stage\": \"staging\"\n  },\n  {\n   \"instances\": [\n    {\n     \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n     \"buildVersion\": \"223005\",\n     \"securityVulnerabilities\": [\n      \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n     ],\n     \"problems\": [\n      \"573177299181554914_1616573184015V2\"\n     ]\n    },\n    {\n     \"entityId\": \"PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253\",\n     \"buildVersion\": \"223005\",\n     \"securityVulnerabilities\": [\n      \"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"\n     ],\n     \"problems\": [\n      \"573177299181554914_1616573184015V2\"\n     ]\n    }\n   ],\n   \"softwareTechs\": [\n    {\n     \"technology\": \"JAVA\",\n     \"edition\": \"OpenJDK\",\n     \"version\": \"1.8.0_242\",\n     \"verbatimType\": \"Java\"\n    }\n   ],\n   \"releaseEntityId\": \"PROCESS_GROUP-DFDBAC9CBF104253\",\n   \"securityVulnerabilitiesCount\": 4,\n   \"affectedByProblems\": true,\n   \"affectedBySecurityVulnerabilities\": true,\n   \"product\": \"Sockshop\",\n   \"throughput\": 923234,\n   \"version\": \"1.195.34.12341232423-012342\",\n   \"name\": \"cluster\",\n   \"running\": true,\n   \"problemCount\": 4,\n   \"stage\": \"staging\"\n  }\n ],\n \"releasesWithProblems\": -99117185,\n \"pageSize\": -53186260,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "Api-Token {{DT_TOKEN}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://{{DT_HOST}}/api/v2",
			"type": "string"
		}
	]
}