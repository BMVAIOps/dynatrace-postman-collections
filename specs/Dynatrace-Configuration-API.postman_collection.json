{
	"info": {
		"_postman_id": "f01d3787-59d8-4a53-9cbc-428c18c7b8a0",
		"name": "Dynatrace Configuration API",
		"description": "Documentation of the Dynatrace Configuration API. To read about use-cases and examples, see [Dynatrace Documentation](https://dt-url.net/4u43kxw).\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "alerting Profiles",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the properties of the specified alerting profile | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/alertingProfiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alertingProfiles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the required alerting profile."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/alertingProfiles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alertingProfiles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the required alerting profile."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Updates an existing alerting profile | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alertingProfiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alertingProfiles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the alerting profile to be updated."
										}
									]
								},
								"description": "If an alerting profile with the specified ID doesn't exist, a new one is created."
							},
							"response": [
								{
									"name": "Success. The new alerting profile has been created. The response contains the ID of the new alerting profile.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/alertingProfiles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alertingProfiles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the alerting profile to be updated."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Success. The alerting profile has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/alertingProfiles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alertingProfiles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the alerting profile to be updated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/alertingProfiles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alertingProfiles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the alerting profile to be updated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified alerting profile | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/alertingProfiles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alertingProfiles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the alerting profile to be deleted."
										}
									]
								},
								"description": "The default alerting profile cannot be deleted."
							},
							"response": [
								{
									"name": "Success. The alerting profile has been deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/alertingProfiles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alertingProfiles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the alerting profile to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validates the payload the `PUT /alertingProfiles/{id}` request | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alertingProfiles/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alertingProfiles",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the alerting profile to be validated."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted alerting profile is valid. Response doesn't have a body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/alertingProfiles/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alertingProfiles",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the alerting profile to be validated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/alertingProfiles/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"alertingProfiles",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the alerting profile to be validated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all alerting profiles available in your environment | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/alertingProfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alertingProfiles"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/alertingProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alertingProfiles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"labore velit\",\n      \"name\": \"dol\",\n      \"description\": \"do cillum et labore\"\n    },\n    {\n      \"id\": \"Ut ex reprehenderit et est\",\n      \"name\": \"ullamco magna aliquip est\",\n      \"description\": \"laboris \"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new alerting profile | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/alertingProfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alertingProfiles"
							]
						},
						"description": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server."
					},
					"response": [
						{
							"name": "Success. The new alerting profile has been created. The response contains the ID of the new alerting profile.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alertingProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alertingProfiles"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alertingProfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alertingProfiles"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"nisi ea\",\n    \"code\": -62749180\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload the `POST /alertingProfiles` request | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/alertingProfiles/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alertingProfiles",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted alerting profile is valid. Response doesn't have a body",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alertingProfiles/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alertingProfiles",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"sampleAlertingProfile\",\n  \"mzId\": \"1\",\n  \"rules\": [\n    {\n      \"severityLevel\": \"AVAILABILITY\",\n      \"tagFilter\": {\n        \"includeMode\": \"INCLUDE_ALL\",\n        \"tagFilters\": [\n          {\n            \"context\": \"AWS\",\n            \"key\": \"tagKey\",\n            \"value\": \"tagValue\"\n          }\n        ]\n      },\n      \"delayInMinutes\": 60\n    }\n  ],\n  \"eventTypeFilters\": [\n    {\n      \"predefinedEventFilter\": {\n        \"eventType\": \"OSI_HIGH_CPU\",\n        \"negate\": true\n      }\n    },\n    {\n      \"customEventFilter\": {\n        \"customTitleFilter\": {\n          \"enabled\": true,\n          \"value\": \"filterValue\",\n          \"operator\": \"EQUALS\",\n          \"negate\": false,\n          \"caseInsensitive\": true\n        },\n        \"customDescriptionFilter\": {\n          \"enabled\": false,\n          \"value\": \"filterValue\",\n          \"operator\": \"CONTAINS\",\n          \"negate\": true,\n          \"caseInsensitive\": false\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/alertingProfiles/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"alertingProfiles",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "anomaly Detection",
			"item": [
				{
					"name": "applications",
					"item": [
						{
							"name": "Gets the configuration of anomaly detection for applications",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"applications"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/applications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"trafficDrop\": {\n    \"enabled\": true,\n    \"trafficDropPercent\": 95\n  },\n  \"trafficSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}"
								}
							]
						},
						{
							"name": "Updates the configuration of anomaly detection for applications",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"trafficDrop\": {\n    \"enabled\": true,\n    \"trafficDropPercent\": 95\n  },\n  \"trafficSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"applications"
									]
								}
							},
							"response": [
								{
									"name": "Success. Configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"trafficDrop\": {\n    \"enabled\": true,\n    \"trafficDropPercent\": 95\n  },\n  \"trafficSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/applications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"applications"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"trafficDrop\": {\n    \"enabled\": true,\n    \"trafficDropPercent\": 95\n  },\n  \"trafficSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/applications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"applications"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the configuration of anomaly detection for applications for the `PUT /anomalyDetection/applications` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"trafficDrop\": {\n    \"enabled\": true,\n    \"trafficDropPercent\": 95\n  },\n  \"trafficSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/applications/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"applications",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response does not have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"trafficDrop\": {\n    \"enabled\": true,\n    \"trafficDropPercent\": 95\n  },\n  \"trafficSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/applications/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"applications",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"trafficDrop\": {\n    \"enabled\": true,\n    \"trafficDropPercent\": 95\n  },\n  \"trafficSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/applications/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"applications",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "aws",
					"item": [
						{
							"name": "Gets the configuration of anomaly detection for AWS",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"aws"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/aws",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"aws"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"rdsHighCpuDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 99\n    }\n  },\n  \"rdsHighWriteReadLatencyDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeReadLatency\": 800\n    }\n  },\n  \"rdsLowStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeStoragePercentage\": 7\n    }\n  },\n  \"rdsHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeMemory\": 96.99,\n      \"swapUsage\": 5.5\n    }\n  },\n  \"elbHighConnectionErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"connectionErrorsPerMinute\": 4\n    }\n  },\n  \"rdsRestartsSequenceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"restartsPerMinute\": 3\n    }\n  },\n  \"lambdaHighErrorRateDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"failedInvocationsRate\": 2\n    }\n  },\n  \"ec2CandidateCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 98\n    }\n  }\n}"
								}
							]
						},
						{
							"name": "Updates the configuration of anomaly detection for AWS",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"rdsHighCpuDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 99\n    }\n  },\n  \"rdsHighWriteReadLatencyDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeReadLatency\": 800\n    }\n  },\n  \"rdsLowStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeStoragePercentage\": 7\n    }\n  },\n  \"rdsHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeMemory\": 96.99,\n      \"swapUsage\": 5.5\n    }\n  },\n  \"elbHighConnectionErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"connectionErrorsPerMinute\": 4\n    }\n  },\n  \"rdsRestartsSequenceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"restartsPerMinute\": 3\n    }\n  },\n  \"lambdaHighErrorRateDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"failedInvocationsRate\": 2\n    }\n  },\n  \"ec2CandidateCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 98\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"aws"
									]
								}
							},
							"response": [
								{
									"name": "Success. Configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"rdsHighCpuDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 99\n    }\n  },\n  \"rdsHighWriteReadLatencyDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeReadLatency\": 800\n    }\n  },\n  \"rdsLowStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeStoragePercentage\": 7\n    }\n  },\n  \"rdsHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeMemory\": 96.99,\n      \"swapUsage\": 5.5\n    }\n  },\n  \"elbHighConnectionErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"connectionErrorsPerMinute\": 4\n    }\n  },\n  \"rdsRestartsSequenceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"restartsPerMinute\": 3\n    }\n  },\n  \"lambdaHighErrorRateDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"failedInvocationsRate\": 2\n    }\n  },\n  \"ec2CandidateCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 98\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/aws",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"aws"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"rdsHighCpuDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 99\n    }\n  },\n  \"rdsHighWriteReadLatencyDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeReadLatency\": 800\n    }\n  },\n  \"rdsLowStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeStoragePercentage\": 7\n    }\n  },\n  \"rdsHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeMemory\": 96.99,\n      \"swapUsage\": 5.5\n    }\n  },\n  \"elbHighConnectionErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"connectionErrorsPerMinute\": 4\n    }\n  },\n  \"rdsRestartsSequenceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"restartsPerMinute\": 3\n    }\n  },\n  \"lambdaHighErrorRateDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"failedInvocationsRate\": 2\n    }\n  },\n  \"ec2CandidateCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 98\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/aws",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"aws"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the configuration of anomaly detection for AWS for the `PUT /anomalyDetection/aws` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"rdsHighCpuDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 99\n    }\n  },\n  \"rdsHighWriteReadLatencyDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeReadLatency\": 800\n    }\n  },\n  \"rdsLowStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeStoragePercentage\": 7\n    }\n  },\n  \"rdsHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeMemory\": 96.99,\n      \"swapUsage\": 5.5\n    }\n  },\n  \"elbHighConnectionErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"connectionErrorsPerMinute\": 4\n    }\n  },\n  \"rdsRestartsSequenceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"restartsPerMinute\": 3\n    }\n  },\n  \"lambdaHighErrorRateDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"failedInvocationsRate\": 2\n    }\n  },\n  \"ec2CandidateCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 98\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/aws/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"aws",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"rdsHighCpuDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 99\n    }\n  },\n  \"rdsHighWriteReadLatencyDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeReadLatency\": 800\n    }\n  },\n  \"rdsLowStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeStoragePercentage\": 7\n    }\n  },\n  \"rdsHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeMemory\": 96.99,\n      \"swapUsage\": 5.5\n    }\n  },\n  \"elbHighConnectionErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"connectionErrorsPerMinute\": 4\n    }\n  },\n  \"rdsRestartsSequenceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"restartsPerMinute\": 3\n    }\n  },\n  \"lambdaHighErrorRateDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"failedInvocationsRate\": 2\n    }\n  },\n  \"ec2CandidateCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 98\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/aws/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"aws",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"rdsHighCpuDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 99\n    }\n  },\n  \"rdsHighWriteReadLatencyDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeReadLatency\": 800\n    }\n  },\n  \"rdsLowStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeStoragePercentage\": 7\n    }\n  },\n  \"rdsHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeMemory\": 96.99,\n      \"swapUsage\": 5.5\n    }\n  },\n  \"elbHighConnectionErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"connectionErrorsPerMinute\": 4\n    }\n  },\n  \"rdsRestartsSequenceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"restartsPerMinute\": 3\n    }\n  },\n  \"lambdaHighErrorRateDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"failedInvocationsRate\": 2\n    }\n  },\n  \"ec2CandidateCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 98\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/aws/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"aws",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "database Services",
					"item": [
						{
							"name": "Gets the configuration of anomaly detection for database services",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/databaseServices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"databaseServices"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/databaseServices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"databaseServices"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"databaseConnectionFailureCount\": {\n    \"enabled\": false,\n    \"connectionFailsCount\": 963253,\n    \"timePeriodMinutes\": 14\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"failingServiceCallPercentageIncreaseAbsolute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"failingServiceCallPercentageIncreaseRelative\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"threshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"automaticDetection\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 18,\n    \"minAbnormalStateDurationInMinutes\": 21\n  },\n  \"loadSpike\": {\n    \"enabled\": true,\n    \"loadSpikePercent\": 596,\n    \"minAbnormalStateDurationInMinutes\": 1\n  }\n}"
								}
							]
						},
						{
							"name": "Updates the configuration of anomaly detection for database services",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"databaseConnectionFailureCount\": {\n    \"enabled\": false,\n    \"connectionFailsCount\": 963253,\n    \"timePeriodMinutes\": 14\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"failingServiceCallPercentageIncreaseAbsolute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"failingServiceCallPercentageIncreaseRelative\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"threshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"automaticDetection\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 18,\n    \"minAbnormalStateDurationInMinutes\": 21\n  },\n  \"loadSpike\": {\n    \"enabled\": true,\n    \"loadSpikePercent\": 596,\n    \"minAbnormalStateDurationInMinutes\": 1\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/databaseServices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"databaseServices"
									]
								}
							},
							"response": [
								{
									"name": "Success. Configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"databaseConnectionFailureCount\": {\n    \"enabled\": false,\n    \"connectionFailsCount\": 963253,\n    \"timePeriodMinutes\": 14\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"failingServiceCallPercentageIncreaseAbsolute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"failingServiceCallPercentageIncreaseRelative\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"threshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"automaticDetection\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 18,\n    \"minAbnormalStateDurationInMinutes\": 21\n  },\n  \"loadSpike\": {\n    \"enabled\": true,\n    \"loadSpikePercent\": 596,\n    \"minAbnormalStateDurationInMinutes\": 1\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/databaseServices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"databaseServices"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"databaseConnectionFailureCount\": {\n    \"enabled\": false,\n    \"connectionFailsCount\": 963253,\n    \"timePeriodMinutes\": 14\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"failingServiceCallPercentageIncreaseAbsolute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"failingServiceCallPercentageIncreaseRelative\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"threshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"automaticDetection\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 18,\n    \"minAbnormalStateDurationInMinutes\": 21\n  },\n  \"loadSpike\": {\n    \"enabled\": true,\n    \"loadSpikePercent\": 596,\n    \"minAbnormalStateDurationInMinutes\": 1\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/databaseServices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"databaseServices"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /anomalyDetection/databaseServices` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"databaseConnectionFailureCount\": {\n    \"enabled\": false,\n    \"connectionFailsCount\": 963253,\n    \"timePeriodMinutes\": 14\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"failingServiceCallPercentageIncreaseAbsolute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"failingServiceCallPercentageIncreaseRelative\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"threshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"automaticDetection\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 18,\n    \"minAbnormalStateDurationInMinutes\": 21\n  },\n  \"loadSpike\": {\n    \"enabled\": true,\n    \"loadSpikePercent\": 596,\n    \"minAbnormalStateDurationInMinutes\": 1\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/databaseServices/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"databaseServices",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"databaseConnectionFailureCount\": {\n    \"enabled\": false,\n    \"connectionFailsCount\": 963253,\n    \"timePeriodMinutes\": 14\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"failingServiceCallPercentageIncreaseAbsolute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"failingServiceCallPercentageIncreaseRelative\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"threshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"automaticDetection\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 18,\n    \"minAbnormalStateDurationInMinutes\": 21\n  },\n  \"loadSpike\": {\n    \"enabled\": true,\n    \"loadSpikePercent\": 596,\n    \"minAbnormalStateDurationInMinutes\": 1\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/databaseServices/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"databaseServices",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"databaseConnectionFailureCount\": {\n    \"enabled\": false,\n    \"connectionFailsCount\": 963253,\n    \"timePeriodMinutes\": 14\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"failingServiceCallPercentageIncreaseAbsolute\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"failingServiceCallPercentageIncreaseRelative\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"threshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"automaticDetection\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeDegradationPercent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"thresholds\": {\n      \"loadThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"responseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensitivity\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"slowestResponseTimeThresholdMilliseconds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 18,\n    \"minAbnormalStateDurationInMinutes\": 21\n  },\n  \"loadSpike\": {\n    \"enabled\": true,\n    \"loadSpikePercent\": 596,\n    \"minAbnormalStateDurationInMinutes\": 1\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/databaseServices/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"databaseServices",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "disk Events",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Gets the properties of the specified disk event rule | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/diskEvents/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"diskEvents",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required disk event rule."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/diskEvents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"diskEvents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required disk event rule."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"enabled\": true,\n  \"metric\": \"LOW_INODES\",\n  \"name\": \"ut adipisicing\",\n  \"samples\": 10,\n  \"threshold\": 910.9380736320112,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"fugiat irure enim\",\n  \"diskNameFilter\": {\n    \"operator\": \"DOES_NOT_CONTAIN\",\n    \"value\": \"ad adipisicing aute\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"culpa deserunt\",\n      \"value\": \"dolore incididunt deserunt et\"\n    },\n    {\n      \"context\": \"ENVIRONMENT\",\n      \"key\": \"tempor elit\",\n      \"value\": \"mollit\"\n    }\n  ],\n  \"hostGroupId\": \"id veniam aliqua cillum\"\n}"
										}
									]
								},
								{
									"name": "Updates or creates a disk event rule | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/diskEvents/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"diskEvents",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the disk event rule to be updated."
												}
											]
										},
										"description": "If a disk event rule with the specified ID does not exist, a new rule is created."
									},
									"response": [
										{
											"name": "Success. The new disk event rule has been created. The ID of the new disk event rule is returned.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/diskEvents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"diskEvents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the disk event rule to be updated."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Success. The disk event rule has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/diskEvents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"diskEvents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the disk event rule to be updated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/diskEvents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"diskEvents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the disk event rule to be updated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										},
										{
											"name": "Failed. The specified ID is reserved for internal use.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/diskEvents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"diskEvents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the disk event rule to be updated."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes the specified disk event rule | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/diskEvents/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"diskEvents",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the disk event rule to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The disk event rule has been deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/diskEvents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"diskEvents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the disk event rule to be deleted."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Validates the payload for the `PUT /anomalyDetection/diskEvents/{id}` request | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/diskEvents/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"diskEvents",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the disk event rule to be validated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted disk event rule is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/diskEvents/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"diskEvents",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the disk event rule to be validated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/diskEvents/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"diskEvents",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the disk event rule to be validated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										},
										{
											"name": "Failed. The specified ID is reserved for internal use.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/diskEvents/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"diskEvents",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the disk event rule to be validated."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Lists all existing disk event rules | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/diskEvents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"diskEvents"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/diskEvents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"diskEvents"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Creates a new disk event rule | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"metric\": \"LOW_DISK_SPACE\",\n  \"name\": \"dolor\",\n  \"samples\": 10,\n  \"threshold\": 203.4720212950496,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"DOES_NOT_EQUAL\",\n    \"value\": \"Excepteur cillum eu ut minim\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"CLOUD_FOUNDRY\",\n      \"key\": \"sit minim volu\",\n      \"value\": \"Lorem minim\"\n    },\n    {\n      \"context\": \"ENVIRONMENT\",\n      \"key\": \"esse in est velit aliqua\",\n      \"value\": \"cupidatat voluptate sit non\"\n    }\n  ],\n  \"hostGroupId\": \"eu\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/diskEvents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"diskEvents"
									]
								},
								"description": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server."
							},
							"response": [
								{
									"name": "Success. The new disk event rule has been created. The ID of the new disk event rule is returned.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/diskEvents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"diskEvents"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/diskEvents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"diskEvents"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /anomalyDetection/diskEvents` request | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/diskEvents/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"diskEvents",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted disk event rule is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/diskEvents/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"diskEvents",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"metric\": \"READ_TIME_EXCEEDING\",\n  \"name\": \"consectetur elit irure\",\n  \"samples\": 10,\n  \"threshold\": 731.5123366057368,\n  \"violatingSamples\": 8,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"diskNameFilter\": {\n    \"operator\": \"CONTAINS\",\n    \"value\": \"veniam laboris\"\n  },\n  \"tagFilters\": [\n    {\n      \"context\": \"AZURE\",\n      \"key\": \"id ipsum ea\",\n      \"value\": \"n\"\n    },\n    {\n      \"context\": \"AWS_GENERIC\",\n      \"key\": \"exercitation adipisicing\",\n      \"value\": \"in in dolor sed\"\n    }\n  ],\n  \"hostGroupId\": \"officia labore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/diskEvents/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"diskEvents",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "hosts",
					"item": [
						{
							"name": "Gets the configuration of anomaly detection for hosts",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"hosts"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/hosts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"hosts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"connectionLostDetection\": {\n    \"enabled\": true,\n    \"enabledOnGracefulShutdowns\": true\n  },\n  \"highCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuSaturation\": 90\n    }\n  },\n  \"highMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"pageFaultsPerSecondWindows\": 50,\n      \"usedMemoryPercentageWindows\": 85,\n      \"pageFaultsPerSecondNonWindows\": 10,\n      \"usedMemoryPercentageNonWindows\": 85\n    }\n  },\n  \"highGcActivityDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"gcTimePercentage\": 35,\n      \"gcSuspensionPercentage\": 20\n    }\n  },\n  \"outOfMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfMemoryExceptionsNumber\": 2\n    }\n  },\n  \"outOfThreadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfThreadsExceptionsNumber\": 2\n    }\n  },\n  \"networkDroppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPercentage\": 8,\n      \"totalPacketsRate\": 8\n    }\n  },\n  \"networkErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"errorsPercentage\": 9,\n      \"totalPacketsRate\": 9\n    }\n  },\n  \"highNetworkDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"utilizationPercentage\": 88\n    }\n  },\n  \"networkTcpProblemsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"newConnectionFailuresPercentage\": 5,\n      \"failedConnectionsNumberPerMinute\": 5\n    }\n  },\n  \"networkHighRetransmissionDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"retransmissionRatePercentage\": 15,\n      \"retransmittedPacketsNumberPerMinute\": 15\n    }\n  },\n  \"diskLowSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 10\n    }\n  },\n  \"diskSlowWritesAndReadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeAndReadTime\": 300\n    }\n  },\n  \"diskLowInodesDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeInodesPercentage\": 10\n    }\n  }\n}"
								}
							]
						},
						{
							"name": "Updates the configuration of anomaly detection for hosts",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"connectionLostDetection\": {\n    \"enabled\": true,\n    \"enabledOnGracefulShutdowns\": true\n  },\n  \"highCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuSaturation\": 90\n    }\n  },\n  \"highMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"pageFaultsPerSecondWindows\": 50,\n      \"usedMemoryPercentageWindows\": 85,\n      \"pageFaultsPerSecondNonWindows\": 10,\n      \"usedMemoryPercentageNonWindows\": 85\n    }\n  },\n  \"highGcActivityDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"gcTimePercentage\": 35,\n      \"gcSuspensionPercentage\": 20\n    }\n  },\n  \"outOfMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfMemoryExceptionsNumber\": 2\n    }\n  },\n  \"outOfThreadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfThreadsExceptionsNumber\": 2\n    }\n  },\n  \"networkDroppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPercentage\": 8,\n      \"totalPacketsRate\": 8\n    }\n  },\n  \"networkErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"errorsPercentage\": 9,\n      \"totalPacketsRate\": 9\n    }\n  },\n  \"highNetworkDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"utilizationPercentage\": 88\n    }\n  },\n  \"networkTcpProblemsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"newConnectionFailuresPercentage\": 5,\n      \"failedConnectionsNumberPerMinute\": 5\n    }\n  },\n  \"networkHighRetransmissionDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"retransmissionRatePercentage\": 15,\n      \"retransmittedPacketsNumberPerMinute\": 15\n    }\n  },\n  \"diskLowSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 10\n    }\n  },\n  \"diskSlowWritesAndReadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeAndReadTime\": 300\n    }\n  },\n  \"diskLowInodesDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeInodesPercentage\": 10\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"hosts"
									]
								}
							},
							"response": [
								{
									"name": "Success. Configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"connectionLostDetection\": {\n    \"enabled\": true,\n    \"enabledOnGracefulShutdowns\": true\n  },\n  \"highCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuSaturation\": 90\n    }\n  },\n  \"highMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"pageFaultsPerSecondWindows\": 50,\n      \"usedMemoryPercentageWindows\": 85,\n      \"pageFaultsPerSecondNonWindows\": 10,\n      \"usedMemoryPercentageNonWindows\": 85\n    }\n  },\n  \"highGcActivityDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"gcTimePercentage\": 35,\n      \"gcSuspensionPercentage\": 20\n    }\n  },\n  \"outOfMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfMemoryExceptionsNumber\": 2\n    }\n  },\n  \"outOfThreadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfThreadsExceptionsNumber\": 2\n    }\n  },\n  \"networkDroppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPercentage\": 8,\n      \"totalPacketsRate\": 8\n    }\n  },\n  \"networkErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"errorsPercentage\": 9,\n      \"totalPacketsRate\": 9\n    }\n  },\n  \"highNetworkDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"utilizationPercentage\": 88\n    }\n  },\n  \"networkTcpProblemsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"newConnectionFailuresPercentage\": 5,\n      \"failedConnectionsNumberPerMinute\": 5\n    }\n  },\n  \"networkHighRetransmissionDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"retransmissionRatePercentage\": 15,\n      \"retransmittedPacketsNumberPerMinute\": 15\n    }\n  },\n  \"diskLowSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 10\n    }\n  },\n  \"diskSlowWritesAndReadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeAndReadTime\": 300\n    }\n  },\n  \"diskLowInodesDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeInodesPercentage\": 10\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/hosts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"hosts"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"connectionLostDetection\": {\n    \"enabled\": true,\n    \"enabledOnGracefulShutdowns\": true\n  },\n  \"highCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuSaturation\": 90\n    }\n  },\n  \"highMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"pageFaultsPerSecondWindows\": 50,\n      \"usedMemoryPercentageWindows\": 85,\n      \"pageFaultsPerSecondNonWindows\": 10,\n      \"usedMemoryPercentageNonWindows\": 85\n    }\n  },\n  \"highGcActivityDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"gcTimePercentage\": 35,\n      \"gcSuspensionPercentage\": 20\n    }\n  },\n  \"outOfMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfMemoryExceptionsNumber\": 2\n    }\n  },\n  \"outOfThreadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfThreadsExceptionsNumber\": 2\n    }\n  },\n  \"networkDroppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPercentage\": 8,\n      \"totalPacketsRate\": 8\n    }\n  },\n  \"networkErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"errorsPercentage\": 9,\n      \"totalPacketsRate\": 9\n    }\n  },\n  \"highNetworkDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"utilizationPercentage\": 88\n    }\n  },\n  \"networkTcpProblemsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"newConnectionFailuresPercentage\": 5,\n      \"failedConnectionsNumberPerMinute\": 5\n    }\n  },\n  \"networkHighRetransmissionDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"retransmissionRatePercentage\": 15,\n      \"retransmittedPacketsNumberPerMinute\": 15\n    }\n  },\n  \"diskLowSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 10\n    }\n  },\n  \"diskSlowWritesAndReadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeAndReadTime\": 300\n    }\n  },\n  \"diskLowInodesDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeInodesPercentage\": 10\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/hosts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"hosts"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the configuration of anomaly detection for hosts for the `PUT /anomalyDetection/hosts` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"connectionLostDetection\": {\n    \"enabled\": true,\n    \"enabledOnGracefulShutdowns\": true\n  },\n  \"highCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuSaturation\": 90\n    }\n  },\n  \"highMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"pageFaultsPerSecondWindows\": 50,\n      \"usedMemoryPercentageWindows\": 85,\n      \"pageFaultsPerSecondNonWindows\": 10,\n      \"usedMemoryPercentageNonWindows\": 85\n    }\n  },\n  \"highGcActivityDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"gcTimePercentage\": 35,\n      \"gcSuspensionPercentage\": 20\n    }\n  },\n  \"outOfMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfMemoryExceptionsNumber\": 2\n    }\n  },\n  \"outOfThreadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfThreadsExceptionsNumber\": 2\n    }\n  },\n  \"networkDroppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPercentage\": 8,\n      \"totalPacketsRate\": 8\n    }\n  },\n  \"networkErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"errorsPercentage\": 9,\n      \"totalPacketsRate\": 9\n    }\n  },\n  \"highNetworkDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"utilizationPercentage\": 88\n    }\n  },\n  \"networkTcpProblemsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"newConnectionFailuresPercentage\": 5,\n      \"failedConnectionsNumberPerMinute\": 5\n    }\n  },\n  \"networkHighRetransmissionDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"retransmissionRatePercentage\": 15,\n      \"retransmittedPacketsNumberPerMinute\": 15\n    }\n  },\n  \"diskLowSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 10\n    }\n  },\n  \"diskSlowWritesAndReadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeAndReadTime\": 300\n    }\n  },\n  \"diskLowInodesDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeInodesPercentage\": 10\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/hosts/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"hosts",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"connectionLostDetection\": {\n    \"enabled\": true,\n    \"enabledOnGracefulShutdowns\": true\n  },\n  \"highCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuSaturation\": 90\n    }\n  },\n  \"highMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"pageFaultsPerSecondWindows\": 50,\n      \"usedMemoryPercentageWindows\": 85,\n      \"pageFaultsPerSecondNonWindows\": 10,\n      \"usedMemoryPercentageNonWindows\": 85\n    }\n  },\n  \"highGcActivityDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"gcTimePercentage\": 35,\n      \"gcSuspensionPercentage\": 20\n    }\n  },\n  \"outOfMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfMemoryExceptionsNumber\": 2\n    }\n  },\n  \"outOfThreadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfThreadsExceptionsNumber\": 2\n    }\n  },\n  \"networkDroppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPercentage\": 8,\n      \"totalPacketsRate\": 8\n    }\n  },\n  \"networkErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"errorsPercentage\": 9,\n      \"totalPacketsRate\": 9\n    }\n  },\n  \"highNetworkDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"utilizationPercentage\": 88\n    }\n  },\n  \"networkTcpProblemsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"newConnectionFailuresPercentage\": 5,\n      \"failedConnectionsNumberPerMinute\": 5\n    }\n  },\n  \"networkHighRetransmissionDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"retransmissionRatePercentage\": 15,\n      \"retransmittedPacketsNumberPerMinute\": 15\n    }\n  },\n  \"diskLowSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 10\n    }\n  },\n  \"diskSlowWritesAndReadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeAndReadTime\": 300\n    }\n  },\n  \"diskLowInodesDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeInodesPercentage\": 10\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/hosts/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"hosts",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"connectionLostDetection\": {\n    \"enabled\": true,\n    \"enabledOnGracefulShutdowns\": true\n  },\n  \"highCpuSaturationDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuSaturation\": 90\n    }\n  },\n  \"highMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"pageFaultsPerSecondWindows\": 50,\n      \"usedMemoryPercentageWindows\": 85,\n      \"pageFaultsPerSecondNonWindows\": 10,\n      \"usedMemoryPercentageNonWindows\": 85\n    }\n  },\n  \"highGcActivityDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"gcTimePercentage\": 35,\n      \"gcSuspensionPercentage\": 20\n    }\n  },\n  \"outOfMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfMemoryExceptionsNumber\": 2\n    }\n  },\n  \"outOfThreadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"outOfThreadsExceptionsNumber\": 2\n    }\n  },\n  \"networkDroppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPercentage\": 8,\n      \"totalPacketsRate\": 8\n    }\n  },\n  \"networkErrorsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"errorsPercentage\": 9,\n      \"totalPacketsRate\": 9\n    }\n  },\n  \"highNetworkDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"utilizationPercentage\": 88\n    }\n  },\n  \"networkTcpProblemsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"newConnectionFailuresPercentage\": 5,\n      \"failedConnectionsNumberPerMinute\": 5\n    }\n  },\n  \"networkHighRetransmissionDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"retransmissionRatePercentage\": 15,\n      \"retransmittedPacketsNumberPerMinute\": 15\n    }\n  },\n  \"diskLowSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 10\n    }\n  },\n  \"diskSlowWritesAndReadsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"writeAndReadTime\": 300\n    }\n  },\n  \"diskLowInodesDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeInodesPercentage\": 10\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/hosts/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"hosts",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "metric Events",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Gets the properties of the specified metric event",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/metricEvents/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"metricEvents",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required metric event."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/metricEvents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"metricEvents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required metric event."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"description\": \"in culpa\",\n  \"enabled\": true,\n  \"monitoringStrategy\": {\n    \"type\": \"AUTO_ADAPTIVE_BASELINE\"\n  },\n  \"name\": \"ad ullamco\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"EwwBjaKbxT\",\n  \"metricId\": \"dolore irure sed\",\n  \"metricSelector\": \"dolore magna amet minim\",\n  \"aggregationType\": \"MEDIAN\",\n  \"severity\": \"CUSTOM_ALERT\",\n  \"disabledReason\": \"TOPX_FORCIBLY_DEACTIVATED\",\n  \"warningReason\": \"NONE\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"TAG\"\n    },\n    {\n      \"filterType\": \"HOST_GROUP_NAME\"\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"Ut\"\n    },\n    {\n      \"filterType\": \"STRING\",\n      \"key\": \"cupidatat cillum\"\n    }\n  ],\n  \"primaryDimensionKey\": \"commodo ali\",\n  \"queryOffset\": 32\n}"
										}
									]
								},
								{
									"name": "Updates an existing metric event or creates a new one",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"veniam est\",\n  \"enabled\": false,\n  \"monitoringStrategy\": {\n    \"type\": \"STATIC_THRESHOLD\"\n  },\n  \"name\": \"culpa consequat\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"rSwJaEKS\",\n  \"metricId\": \"minim adipisicing enim dolore labo\",\n  \"metricSelector\": \"pariatur eu laborum sed exercitation\",\n  \"aggregationType\": \"MAX\",\n  \"severity\": \"PERFORMANCE\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"NAME\"\n    },\n    {\n      \"filterType\": \"HOST_GROUP_NAME\"\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"STRING\",\n      \"key\": \"elit consectetur\"\n    },\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"id Ut dolor\"\n    }\n  ],\n  \"primaryDimensionKey\": \"minim\",\n  \"queryOffset\": 27\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/metricEvents/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"metricEvents",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "RC",
													"description": "(Required) The ID of the metric event to be updated.\n\n If you also set the ID in the body, it must match this ID."
												}
											]
										},
										"description": "If the metric event with the specified ID does not exist, a new metric event will be created. \n\n You can't update the **type** of the metric event."
									},
									"response": [
										{
											"name": "Success. The new metric event has been created. The response contains the ID of the newly created metric event",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"veniam est\",\n  \"enabled\": false,\n  \"monitoringStrategy\": {\n    \"type\": \"STATIC_THRESHOLD\"\n  },\n  \"name\": \"culpa consequat\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"rSwJaEKS\",\n  \"metricId\": \"minim adipisicing enim dolore labo\",\n  \"metricSelector\": \"pariatur eu laborum sed exercitation\",\n  \"aggregationType\": \"MAX\",\n  \"severity\": \"PERFORMANCE\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"NAME\"\n    },\n    {\n      \"filterType\": \"HOST_GROUP_NAME\"\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"STRING\",\n      \"key\": \"elit consectetur\"\n    },\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"id Ut dolor\"\n    }\n  ],\n  \"primaryDimensionKey\": \"minim\",\n  \"queryOffset\": 27\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/metricEvents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"metricEvents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "RC",
															"description": "(Required) The ID of the metric event to be updated.\n\n If you also set the ID in the body, it must match this ID."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Success. The metric event has been updated. The response is empty.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"veniam est\",\n  \"enabled\": false,\n  \"monitoringStrategy\": {\n    \"type\": \"STATIC_THRESHOLD\"\n  },\n  \"name\": \"culpa consequat\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"rSwJaEKS\",\n  \"metricId\": \"minim adipisicing enim dolore labo\",\n  \"metricSelector\": \"pariatur eu laborum sed exercitation\",\n  \"aggregationType\": \"MAX\",\n  \"severity\": \"PERFORMANCE\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"NAME\"\n    },\n    {\n      \"filterType\": \"HOST_GROUP_NAME\"\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"STRING\",\n      \"key\": \"elit consectetur\"\n    },\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"id Ut dolor\"\n    }\n  ],\n  \"primaryDimensionKey\": \"minim\",\n  \"queryOffset\": 27\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/metricEvents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"metricEvents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "RC",
															"description": "(Required) The ID of the metric event to be updated.\n\n If you also set the ID in the body, it must match this ID."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"veniam est\",\n  \"enabled\": false,\n  \"monitoringStrategy\": {\n    \"type\": \"STATIC_THRESHOLD\"\n  },\n  \"name\": \"culpa consequat\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"rSwJaEKS\",\n  \"metricId\": \"minim adipisicing enim dolore labo\",\n  \"metricSelector\": \"pariatur eu laborum sed exercitation\",\n  \"aggregationType\": \"MAX\",\n  \"severity\": \"PERFORMANCE\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"NAME\"\n    },\n    {\n      \"filterType\": \"HOST_GROUP_NAME\"\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"STRING\",\n      \"key\": \"elit consectetur\"\n    },\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"id Ut dolor\"\n    }\n  ],\n  \"primaryDimensionKey\": \"minim\",\n  \"queryOffset\": 27\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/metricEvents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"metricEvents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "RC",
															"description": "(Required) The ID of the metric event to be updated.\n\n If you also set the ID in the body, it must match this ID."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified metric event",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/metricEvents/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"metricEvents",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the metric event to be deleted."
												}
											]
										},
										"description": "You can't delete events created by plugins."
									},
									"response": [
										{
											"name": "Deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/metricEvents/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"metricEvents",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the metric event to be deleted."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Validates the payload for the `PUT /anomalyDetection/metricEvents/{id}` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"veniam est\",\n  \"enabled\": false,\n  \"monitoringStrategy\": {\n    \"type\": \"STATIC_THRESHOLD\"\n  },\n  \"name\": \"culpa consequat\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"rSwJaEKS\",\n  \"metricId\": \"minim adipisicing enim dolore labo\",\n  \"metricSelector\": \"pariatur eu laborum sed exercitation\",\n  \"aggregationType\": \"MAX\",\n  \"severity\": \"PERFORMANCE\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"NAME\"\n    },\n    {\n      \"filterType\": \"HOST_GROUP_NAME\"\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"STRING\",\n      \"key\": \"elit consectetur\"\n    },\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"id Ut dolor\"\n    }\n  ],\n  \"primaryDimensionKey\": \"minim\",\n  \"queryOffset\": 27\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/metricEvents/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"metricEvents",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "RC",
													"description": "(Required) The ID of the metric event to be validated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"veniam est\",\n  \"enabled\": false,\n  \"monitoringStrategy\": {\n    \"type\": \"STATIC_THRESHOLD\"\n  },\n  \"name\": \"culpa consequat\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"rSwJaEKS\",\n  \"metricId\": \"minim adipisicing enim dolore labo\",\n  \"metricSelector\": \"pariatur eu laborum sed exercitation\",\n  \"aggregationType\": \"MAX\",\n  \"severity\": \"PERFORMANCE\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"NAME\"\n    },\n    {\n      \"filterType\": \"HOST_GROUP_NAME\"\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"STRING\",\n      \"key\": \"elit consectetur\"\n    },\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"id Ut dolor\"\n    }\n  ],\n  \"primaryDimensionKey\": \"minim\",\n  \"queryOffset\": 27\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/metricEvents/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"metricEvents",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "RC",
															"description": "(Required) The ID of the metric event to be validated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"veniam est\",\n  \"enabled\": false,\n  \"monitoringStrategy\": {\n    \"type\": \"STATIC_THRESHOLD\"\n  },\n  \"name\": \"culpa consequat\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"rSwJaEKS\",\n  \"metricId\": \"minim adipisicing enim dolore labo\",\n  \"metricSelector\": \"pariatur eu laborum sed exercitation\",\n  \"aggregationType\": \"MAX\",\n  \"severity\": \"PERFORMANCE\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"NAME\"\n    },\n    {\n      \"filterType\": \"HOST_GROUP_NAME\"\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"STRING\",\n      \"key\": \"elit consectetur\"\n    },\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"id Ut dolor\"\n    }\n  ],\n  \"primaryDimensionKey\": \"minim\",\n  \"queryOffset\": 27\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/anomalyDetection/metricEvents/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"anomalyDetection",
														"metricEvents",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "RC",
															"description": "(Required) The ID of the metric event to be validated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all configured metric events",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/metricEvents?includeEntityFilterMetricEvents=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"metricEvents"
									],
									"query": [
										{
											"key": "includeEntityFilterMetricEvents",
											"value": "false",
											"description": "Flag to include metric events with associated entities to the response. \n\n Metric events with **entity** filters aren't compatible across environments. If set to `false`, metric events with entity filters will be removed."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/metricEvents?includeEntityFilterMetricEvents=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"metricEvents"
											],
											"query": [
												{
													"key": "includeEntityFilterMetricEvents",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Creates a new metric event",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"metricId\": \"com.dynatrace.builtin:host.disk.bytesread\",\n  \"name\": \"My metric event\",\n  \"description\": \"This is the description for my metric event.\",\n  \"aggregationType\": \"AVG\",\n  \"severity\": \"CUSTOM_ALERT\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"ENTITY_ID\",\n      \"entityId\": \"HOST-000000000001E240\"\n    },\n    {\n      \"filterType\": \"TAG\",\n      \"tagFilter\": {\n        \"context\": \"CONTEXTLESS\",\n        \"key\": \"someKey\",\n        \"value\": \"someValue\"\n      }\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"dt.entity.disk\",\n      \"nameFilter\": {\n        \"value\": \"diskName\",\n        \"operator\": \"EQUALS\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"disabledReason\": \"NONE\",\n  \"warningReason\": \"NONE\",\n  \"monitoringStrategy\": {\n    \"type\": \"STATIC_THRESHOLD\",\n    \"alertCondition\": \"ABOVE\",\n    \"samples\": 5,\n    \"violatingSamples\": 3,\n    \"dealertingSamples\": 5,\n    \"threshold\": 80,\n    \"unit\": \"KILO_BYTE_PER_SECOND\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/metricEvents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"metricEvents"
									]
								},
								"description": "The response contains the ID of the newly created metric event."
							},
							"response": [
								{
									"name": "Success. The metric event has been created. The response contains the ID and name of the newly created metric event",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"veniam est\",\n  \"enabled\": false,\n  \"monitoringStrategy\": {\n    \"type\": \"STATIC_THRESHOLD\"\n  },\n  \"name\": \"culpa consequat\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"rSwJaEKS\",\n  \"metricId\": \"minim adipisicing enim dolore labo\",\n  \"metricSelector\": \"pariatur eu laborum sed exercitation\",\n  \"aggregationType\": \"MAX\",\n  \"severity\": \"PERFORMANCE\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"NAME\"\n    },\n    {\n      \"filterType\": \"HOST_GROUP_NAME\"\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"STRING\",\n      \"key\": \"elit consectetur\"\n    },\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"id Ut dolor\"\n    }\n  ],\n  \"primaryDimensionKey\": \"minim\",\n  \"queryOffset\": 27\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/metricEvents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"metricEvents"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"veniam est\",\n  \"enabled\": false,\n  \"monitoringStrategy\": {\n    \"type\": \"STATIC_THRESHOLD\"\n  },\n  \"name\": \"culpa consequat\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"rSwJaEKS\",\n  \"metricId\": \"minim adipisicing enim dolore labo\",\n  \"metricSelector\": \"pariatur eu laborum sed exercitation\",\n  \"aggregationType\": \"MAX\",\n  \"severity\": \"PERFORMANCE\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"NAME\"\n    },\n    {\n      \"filterType\": \"HOST_GROUP_NAME\"\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"STRING\",\n      \"key\": \"elit consectetur\"\n    },\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"id Ut dolor\"\n    }\n  ],\n  \"primaryDimensionKey\": \"minim\",\n  \"queryOffset\": 27\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/metricEvents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"metricEvents"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /anomalyDetection/metricEvents` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"veniam est\",\n  \"enabled\": false,\n  \"monitoringStrategy\": {\n    \"type\": \"STATIC_THRESHOLD\"\n  },\n  \"name\": \"culpa consequat\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"rSwJaEKS\",\n  \"metricId\": \"minim adipisicing enim dolore labo\",\n  \"metricSelector\": \"pariatur eu laborum sed exercitation\",\n  \"aggregationType\": \"MAX\",\n  \"severity\": \"PERFORMANCE\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"NAME\"\n    },\n    {\n      \"filterType\": \"HOST_GROUP_NAME\"\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"STRING\",\n      \"key\": \"elit consectetur\"\n    },\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"id Ut dolor\"\n    }\n  ],\n  \"primaryDimensionKey\": \"minim\",\n  \"queryOffset\": 27\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/metricEvents/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"metricEvents",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"veniam est\",\n  \"enabled\": false,\n  \"monitoringStrategy\": {\n    \"type\": \"STATIC_THRESHOLD\"\n  },\n  \"name\": \"culpa consequat\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"rSwJaEKS\",\n  \"metricId\": \"minim adipisicing enim dolore labo\",\n  \"metricSelector\": \"pariatur eu laborum sed exercitation\",\n  \"aggregationType\": \"MAX\",\n  \"severity\": \"PERFORMANCE\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"NAME\"\n    },\n    {\n      \"filterType\": \"HOST_GROUP_NAME\"\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"STRING\",\n      \"key\": \"elit consectetur\"\n    },\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"id Ut dolor\"\n    }\n  ],\n  \"primaryDimensionKey\": \"minim\",\n  \"queryOffset\": 27\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/metricEvents/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"metricEvents",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"veniam est\",\n  \"enabled\": false,\n  \"monitoringStrategy\": {\n    \"type\": \"STATIC_THRESHOLD\"\n  },\n  \"name\": \"culpa consequat\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"rSwJaEKS\",\n  \"metricId\": \"minim adipisicing enim dolore labo\",\n  \"metricSelector\": \"pariatur eu laborum sed exercitation\",\n  \"aggregationType\": \"MAX\",\n  \"severity\": \"PERFORMANCE\",\n  \"alertingScope\": [\n    {\n      \"filterType\": \"NAME\"\n    },\n    {\n      \"filterType\": \"HOST_GROUP_NAME\"\n    }\n  ],\n  \"metricDimensions\": [\n    {\n      \"filterType\": \"STRING\",\n      \"key\": \"elit consectetur\"\n    },\n    {\n      \"filterType\": \"ENTITY\",\n      \"key\": \"id Ut dolor\"\n    }\n  ],\n  \"primaryDimensionKey\": \"minim\",\n  \"queryOffset\": 27\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/metricEvents/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"metricEvents",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "process Groups/{id}",
					"item": [
						{
							"name": "Gets the configuration of anomaly detection for the specified process group | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"processGroups",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The Dynatrace entity ID of the required process group."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"processGroups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required process group."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"availabilityMonitoring\": {\n    \"method\": \"MINIMUM_THRESHOLD\",\n    \"minimumThreshold\": 5\n  }\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"processGroups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required process group."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								},
								{
									"name": "Process group doesn't exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"processGroups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required process group."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Updates the configuration of anomaly detection for the specified process group | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"availabilityMonitoring\": {\n    \"method\": \"MINIMUM_THRESHOLD\",\n    \"minimumThreshold\": 5\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"processGroups",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The Dynatrace entity ID of the required process group."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"availabilityMonitoring\": {\n    \"method\": \"MINIMUM_THRESHOLD\",\n    \"minimumThreshold\": 5\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"processGroups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required process group."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"availabilityMonitoring\": {\n    \"method\": \"MINIMUM_THRESHOLD\",\n    \"minimumThreshold\": 5\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"processGroups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required process group."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Switches off anomaly detection for the specified process group | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"processGroups",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The Dynatrace entity ID of the required process group."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"processGroups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required process group."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"processGroups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required process group."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								},
								{
									"name": "Process group doesn't exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"processGroups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required process group."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /anomalyDetection/processGroups/{id}` request | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"availabilityMonitoring\": {\n    \"method\": \"MINIMUM_THRESHOLD\",\n    \"minimumThreshold\": 5\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"processGroups",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The Dynatrace entity ID of the required process group."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"availabilityMonitoring\": {\n    \"method\": \"MINIMUM_THRESHOLD\",\n    \"minimumThreshold\": 5\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"processGroups",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required process group."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"availabilityMonitoring\": {\n    \"method\": \"MINIMUM_THRESHOLD\",\n    \"minimumThreshold\": 5\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/processGroups/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"processGroups",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required process group."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "services",
					"item": [
						{
							"name": "Gets the service anomaly detection configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"services"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/services",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"services"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 40,\n    \"minAbnormalStateDurationInMinutes\": 5\n  },\n  \"loadSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}"
								}
							]
						},
						{
							"name": "Updates the service anomaly detection configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 40,\n    \"minAbnormalStateDurationInMinutes\": 5\n  },\n  \"loadSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"services"
									]
								}
							},
							"response": [
								{
									"name": "Success. Configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 40,\n    \"minAbnormalStateDurationInMinutes\": 5\n  },\n  \"loadSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/services",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"services"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 40,\n    \"minAbnormalStateDurationInMinutes\": 5\n  },\n  \"loadSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/services",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"services"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /anomalyDetection/services` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 40,\n    \"minAbnormalStateDurationInMinutes\": 5\n  },\n  \"loadSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/services/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"services",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 40,\n    \"minAbnormalStateDurationInMinutes\": 5\n  },\n  \"loadSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/services/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"services",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"responseTimeDegradation\": {\n    \"detectionMode\": \"DETECT_AUTOMATICALLY\",\n    \"automaticDetection\": {\n      \"responseTimeDegradationMilliseconds\": 250,\n      \"responseTimeDegradationPercent\": 90,\n      \"slowestResponseTimeDegradationMilliseconds\": 500,\n      \"slowestResponseTimeDegradationPercent\": 200,\n      \"loadThreshold\": \"ONE_REQUEST_PER_MINUTE\"\n    }\n  },\n  \"loadDrop\": {\n    \"enabled\": true,\n    \"loadDropPercent\": 40,\n    \"minAbnormalStateDurationInMinutes\": 5\n  },\n  \"loadSpike\": {\n    \"enabled\": false\n  },\n  \"failureRateIncrease\": {\n    \"detectionMode\": \"DETECT_USING_FIXED_THRESHOLDS\",\n    \"thresholds\": {\n      \"threshold\": 10,\n      \"sensitivity\": \"LOW\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/services/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"services",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "vmware",
					"item": [
						{
							"name": "Gets the configuration of anomaly detection for VMware",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/vmware",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"vmware"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/vmware",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"vmware"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"esxiHighCpuSaturation\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 80,\n      \"vmCpuReadyPercentage\": 10,\n      \"cpuPeakPercentage\": 90\n    }\n  },\n  \"esxiHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"compressionDecompressionRate\": 120\n    }\n  },\n  \"overloadedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"commandAbortsNumber\": 1\n    }\n  },\n  \"undersizedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"averageQueueCommandLatency\": 15,\n      \"peakQueueCommandLatency\": 160\n    }\n  },\n  \"slowPhysicalStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"avgReadWriteLatency\": 150,\n      \"peakReadWriteLatency\": 400\n    }\n  },\n  \"droppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPerSecond\": 4\n    }\n  },\n  \"lowDatastoreSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 5\n    }\n  }\n}"
								}
							]
						},
						{
							"name": "Updates the configuration of anomaly detection for VMware",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"esxiHighCpuSaturation\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 80,\n      \"vmCpuReadyPercentage\": 10,\n      \"cpuPeakPercentage\": 90\n    }\n  },\n  \"esxiHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"compressionDecompressionRate\": 120\n    }\n  },\n  \"overloadedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"commandAbortsNumber\": 1\n    }\n  },\n  \"undersizedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"averageQueueCommandLatency\": 15,\n      \"peakQueueCommandLatency\": 160\n    }\n  },\n  \"slowPhysicalStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"avgReadWriteLatency\": 150,\n      \"peakReadWriteLatency\": 400\n    }\n  },\n  \"droppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPerSecond\": 4\n    }\n  },\n  \"lowDatastoreSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 5\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/vmware",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"vmware"
									]
								}
							},
							"response": [
								{
									"name": "Success. Configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"esxiHighCpuSaturation\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 80,\n      \"vmCpuReadyPercentage\": 10,\n      \"cpuPeakPercentage\": 90\n    }\n  },\n  \"esxiHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"compressionDecompressionRate\": 120\n    }\n  },\n  \"overloadedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"commandAbortsNumber\": 1\n    }\n  },\n  \"undersizedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"averageQueueCommandLatency\": 15,\n      \"peakQueueCommandLatency\": 160\n    }\n  },\n  \"slowPhysicalStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"avgReadWriteLatency\": 150,\n      \"peakReadWriteLatency\": 400\n    }\n  },\n  \"droppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPerSecond\": 4\n    }\n  },\n  \"lowDatastoreSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 5\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/vmware",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"vmware"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"esxiHighCpuSaturation\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 80,\n      \"vmCpuReadyPercentage\": 10,\n      \"cpuPeakPercentage\": 90\n    }\n  },\n  \"esxiHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"compressionDecompressionRate\": 120\n    }\n  },\n  \"overloadedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"commandAbortsNumber\": 1\n    }\n  },\n  \"undersizedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"averageQueueCommandLatency\": 15,\n      \"peakQueueCommandLatency\": 160\n    }\n  },\n  \"slowPhysicalStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"avgReadWriteLatency\": 150,\n      \"peakReadWriteLatency\": 400\n    }\n  },\n  \"droppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPerSecond\": 4\n    }\n  },\n  \"lowDatastoreSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 5\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/vmware",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"vmware"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the configuration of anomaly detection for VMware for the `PUT /anomalyDetection/vmware` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"esxiHighCpuSaturation\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 80,\n      \"vmCpuReadyPercentage\": 10,\n      \"cpuPeakPercentage\": 90\n    }\n  },\n  \"esxiHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"compressionDecompressionRate\": 120\n    }\n  },\n  \"overloadedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"commandAbortsNumber\": 1\n    }\n  },\n  \"undersizedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"averageQueueCommandLatency\": 15,\n      \"peakQueueCommandLatency\": 160\n    }\n  },\n  \"slowPhysicalStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"avgReadWriteLatency\": 150,\n      \"peakReadWriteLatency\": 400\n    }\n  },\n  \"droppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPerSecond\": 4\n    }\n  },\n  \"lowDatastoreSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 5\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/anomalyDetection/vmware/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"anomalyDetection",
										"vmware",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"esxiHighCpuSaturation\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 80,\n      \"vmCpuReadyPercentage\": 10,\n      \"cpuPeakPercentage\": 90\n    }\n  },\n  \"esxiHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"compressionDecompressionRate\": 120\n    }\n  },\n  \"overloadedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"commandAbortsNumber\": 1\n    }\n  },\n  \"undersizedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"averageQueueCommandLatency\": 15,\n      \"peakQueueCommandLatency\": 160\n    }\n  },\n  \"slowPhysicalStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"avgReadWriteLatency\": 150,\n      \"peakReadWriteLatency\": 400\n    }\n  },\n  \"droppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPerSecond\": 4\n    }\n  },\n  \"lowDatastoreSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 5\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/vmware/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"vmware",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"esxiHighCpuSaturation\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"cpuUsagePercentage\": 80,\n      \"vmCpuReadyPercentage\": 10,\n      \"cpuPeakPercentage\": 90\n    }\n  },\n  \"esxiHighMemoryDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"compressionDecompressionRate\": 120\n    }\n  },\n  \"overloadedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"commandAbortsNumber\": 1\n    }\n  },\n  \"undersizedStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"averageQueueCommandLatency\": 15,\n      \"peakQueueCommandLatency\": 160\n    }\n  },\n  \"slowPhysicalStorageDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"avgReadWriteLatency\": 150,\n      \"peakReadWriteLatency\": 400\n    }\n  },\n  \"droppedPacketsDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"droppedPacketsPerSecond\": 4\n    }\n  },\n  \"lowDatastoreSpaceDetection\": {\n    \"enabled\": true,\n    \"customThresholds\": {\n      \"freeSpacePercentage\": 5\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/anomalyDetection/vmware/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"anomalyDetection",
												"vmware",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "applications",
			"item": [
				{
					"name": "mobile",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Gets the configuration of the specified mobile or custom application",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/applications/mobile/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"mobile",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required mobile or custom application."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/applications/mobile/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"mobile",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required mobile or custom application."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"apdexSettings\": {\n    \"frustratedOnError\": true,\n    \"frustratingThreshold\": 89675409,\n    \"toleratedThreshold\": 60781887\n  },\n  \"beaconEndpointType\": \"CLUSTER_ACTIVE_GATE\",\n  \"costControlUserSessionPercentage\": 83,\n  \"name\": \"aute id nostrud\",\n  \"identifier\": \"ullamco\",\n  \"applicationType\": \"CUSTOM_APPLICATION\",\n  \"applicationId\": \"irure quis\",\n  \"iconType\": \"IOT\",\n  \"optInModeEnabled\": false,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": false,\n  \"beaconEndpointUrl\": \"Duis anim dolor pr\"\n}"
										},
										{
											"name": "Failed. The specified entity doesn't exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/applications/mobile/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"mobile",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required mobile or custom application."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates the configuration of the specified mobile or custom application",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apdexSettings\": {\n    \"frustratedOnError\": false,\n    \"frustratingThreshold\": 65969505,\n    \"toleratedThreshold\": 77612147\n  },\n  \"beaconEndpointType\": \"CLUSTER_ACTIVE_GATE\",\n  \"costControlUserSessionPercentage\": 8,\n  \"name\": \"sint\",\n  \"iconType\": \"EMBEDDED\",\n  \"optInModeEnabled\": false,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": true,\n  \"beaconEndpointUrl\": \"minim et non adipisicing\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/mobile/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"mobile",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the application to be updated."
												}
											]
										},
										"description": "You can't change applicationId and applicationType with this request.\n\nAll other values must be included in the body, depending on the applicationType."
									},
									"response": [
										{
											"name": "Success. The application has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apdexSettings\": {\n    \"frustratedOnError\": false,\n    \"frustratingThreshold\": 65969505,\n    \"toleratedThreshold\": 77612147\n  },\n  \"beaconEndpointType\": \"CLUSTER_ACTIVE_GATE\",\n  \"costControlUserSessionPercentage\": 8,\n  \"name\": \"sint\",\n  \"iconType\": \"EMBEDDED\",\n  \"optInModeEnabled\": false,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": true,\n  \"beaconEndpointUrl\": \"minim et non adipisicing\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/mobile/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"mobile",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the application to be updated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apdexSettings\": {\n    \"frustratedOnError\": false,\n    \"frustratingThreshold\": 65969505,\n    \"toleratedThreshold\": 77612147\n  },\n  \"beaconEndpointType\": \"CLUSTER_ACTIVE_GATE\",\n  \"costControlUserSessionPercentage\": 8,\n  \"name\": \"sint\",\n  \"iconType\": \"EMBEDDED\",\n  \"optInModeEnabled\": false,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": true,\n  \"beaconEndpointUrl\": \"minim et non adipisicing\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/mobile/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"mobile",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the application to be updated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										},
										{
											"name": "Failed. The specified entity doesn't exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apdexSettings\": {\n    \"frustratedOnError\": false,\n    \"frustratingThreshold\": 65969505,\n    \"toleratedThreshold\": 77612147\n  },\n  \"beaconEndpointType\": \"CLUSTER_ACTIVE_GATE\",\n  \"costControlUserSessionPercentage\": 8,\n  \"name\": \"sint\",\n  \"iconType\": \"EMBEDDED\",\n  \"optInModeEnabled\": false,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": true,\n  \"beaconEndpointUrl\": \"minim et non adipisicing\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/mobile/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"mobile",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the application to be updated."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes the specified mobile or custom application",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/applications/mobile/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"mobile",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the application to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The application has been deleted. The response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/applications/mobile/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"mobile",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the application to be deleted."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The specified entity doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/applications/mobile/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"mobile",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the application to be deleted."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Validates the payload for the `PUT /applications/mobile/{id}` request.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apdexSettings\": {\n    \"frustratedOnError\": false,\n    \"frustratingThreshold\": 65969505,\n    \"toleratedThreshold\": 77612147\n  },\n  \"beaconEndpointType\": \"CLUSTER_ACTIVE_GATE\",\n  \"costControlUserSessionPercentage\": 8,\n  \"name\": \"sint\",\n  \"iconType\": \"EMBEDDED\",\n  \"optInModeEnabled\": false,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": true,\n  \"beaconEndpointUrl\": \"minim et non adipisicing\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/mobile/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"mobile",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the mobile or custom application to be validated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apdexSettings\": {\n    \"frustratedOnError\": false,\n    \"frustratingThreshold\": 65969505,\n    \"toleratedThreshold\": 77612147\n  },\n  \"beaconEndpointType\": \"CLUSTER_ACTIVE_GATE\",\n  \"costControlUserSessionPercentage\": 8,\n  \"name\": \"sint\",\n  \"iconType\": \"EMBEDDED\",\n  \"optInModeEnabled\": false,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": true,\n  \"beaconEndpointUrl\": \"minim et non adipisicing\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/mobile/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"mobile",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the mobile or custom application to be validated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apdexSettings\": {\n    \"frustratedOnError\": false,\n    \"frustratingThreshold\": 65969505,\n    \"toleratedThreshold\": 77612147\n  },\n  \"beaconEndpointType\": \"CLUSTER_ACTIVE_GATE\",\n  \"costControlUserSessionPercentage\": 8,\n  \"name\": \"sint\",\n  \"iconType\": \"EMBEDDED\",\n  \"optInModeEnabled\": false,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": true,\n  \"beaconEndpointUrl\": \"minim et non adipisicing\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/mobile/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"mobile",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the mobile or custom application to be validated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "{application Id}",
							"item": [
								{
									"name": "user Action And Session Properties",
									"item": [
										{
											"name": "{key}",
											"item": [
												{
													"name": "Gets the specified mobile session or user action property of an application",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "Api-Token {{DT_TOKEN}}",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json; charset=utf-8"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"mobile",
																":applicationId",
																"userActionAndSessionProperties",
																":key"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required application."
																},
																{
																	"key": "key",
																	"value": "aliqua",
																	"description": "(Required) The key of the required mobile session or user action property."
																}
															]
														}
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/:key",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"userActionAndSessionProperties",
																		":key"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "key",
																			"value": "aliqua",
																			"description": "(Required) The key of the required mobile session or user action property."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": "{\n  \"key\": \"dolore veniam aute consectetur laborum\",\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"LONG\",\n  \"displayName\": \"commodo \",\n  \"aggregation\": \"MIN\",\n  \"storeAsUserActionProperty\": true,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"ut adipisicing sit ea fugiat\",\n  \"serverSideRequestAttribute\": \"est esse incididunt\",\n  \"name\": \"dolore quis incididunt esse\"\n}"
														},
														{
															"name": "Failed. The specified entity doesn't exist.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/:key",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"userActionAndSessionProperties",
																		":key"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "key",
																			"value": "aliqua",
																			"description": "(Required) The key of the required mobile session or user action property."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Updates the specified mobile session or user action property for an application",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "Api-Token {{DT_TOKEN}}",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; charset=utf-8"
															},
															{
																"key": "Accept",
																"value": "application/json; charset=utf-8"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"STRING\",\n  \"displayName\": \"ut tempor nostrud\",\n  \"aggregation\": \"LAST\",\n  \"storeAsUserActionProperty\": false,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"do et dolor\",\n  \"serverSideRequestAttribute\": \"sit\",\n  \"name\": \"dolore minim\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"mobile",
																":applicationId",
																"userActionAndSessionProperties",
																":key"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required application."
																},
																{
																	"key": "key",
																	"value": "aliqua",
																	"description": "(Required) The key of the required mobile session or user action property."
																}
															]
														},
														"description": "If the property with the specified ID does not exist, a new property is created."
													},
													"response": [
														{
															"name": "Success. The property has been created. The response contains the ID of the new property.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"STRING\",\n  \"displayName\": \"ut tempor nostrud\",\n  \"aggregation\": \"LAST\",\n  \"storeAsUserActionProperty\": false,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"do et dolor\",\n  \"serverSideRequestAttribute\": \"sit\",\n  \"name\": \"dolore minim\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/:key",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"userActionAndSessionProperties",
																		":key"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "key",
																			"value": "aliqua",
																			"description": "(Required) The key of the required mobile session or user action property."
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": "{\n  \"key\": \"aliquip\",\n  \"displayName\": \"officia in aute ipsum\"\n}"
														},
														{
															"name": "Success. The property has been updated. The response doesn't have a body.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"STRING\",\n  \"displayName\": \"ut tempor nostrud\",\n  \"aggregation\": \"LAST\",\n  \"storeAsUserActionProperty\": false,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"do et dolor\",\n  \"serverSideRequestAttribute\": \"sit\",\n  \"name\": \"dolore minim\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/:key",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"userActionAndSessionProperties",
																		":key"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "key",
																			"value": "aliqua",
																			"description": "(Required) The key of the required mobile session or user action property."
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Failed. The input is invalid.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"STRING\",\n  \"displayName\": \"ut tempor nostrud\",\n  \"aggregation\": \"LAST\",\n  \"storeAsUserActionProperty\": false,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"do et dolor\",\n  \"serverSideRequestAttribute\": \"sit\",\n  \"name\": \"dolore minim\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/:key",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"userActionAndSessionProperties",
																		":key"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "key",
																			"value": "aliqua",
																			"description": "(Required) The key of the required mobile session or user action property."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
														}
													]
												},
												{
													"name": "Deletes the specified mobile session or user action property for an application",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "Api-Token {{DT_TOKEN}}",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"mobile",
																":applicationId",
																"userActionAndSessionProperties",
																":key"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required application."
																},
																{
																	"key": "key",
																	"value": "aliqua",
																	"description": "(Required) The key of the required mobile session or user action property."
																}
															]
														}
													},
													"response": [
														{
															"name": "Success. The property has been deleted. The response doesn't have a body.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/:key",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"userActionAndSessionProperties",
																		":key"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "key",
																			"value": "aliqua",
																			"description": "(Required) The key of the required mobile session or user action property."
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Failed. The specified entity doesn't exist.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/:key",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"userActionAndSessionProperties",
																		":key"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "key",
																			"value": "aliqua",
																			"description": "(Required) The key of the required mobile session or user action property."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Validates the payload for the `PUT /applications/mobile/{applicationId}/userActionAndSessionProperties/{key}` request",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "Api-Token {{DT_TOKEN}}",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json; charset=utf-8"
															},
															{
																"key": "Accept",
																"value": "application/json; charset=utf-8"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"STRING\",\n  \"displayName\": \"ut tempor nostrud\",\n  \"aggregation\": \"LAST\",\n  \"storeAsUserActionProperty\": false,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"do et dolor\",\n  \"serverSideRequestAttribute\": \"sit\",\n  \"name\": \"dolore minim\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/:key/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"mobile",
																":applicationId",
																"userActionAndSessionProperties",
																":key",
																"validator"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required application."
																},
																{
																	"key": "key",
																	"value": "aliqua",
																	"description": "(Required) The key of the required mobile session or user action property."
																}
															]
														}
													},
													"response": [
														{
															"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"STRING\",\n  \"displayName\": \"ut tempor nostrud\",\n  \"aggregation\": \"LAST\",\n  \"storeAsUserActionProperty\": false,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"do et dolor\",\n  \"serverSideRequestAttribute\": \"sit\",\n  \"name\": \"dolore minim\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/:key/validator",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"userActionAndSessionProperties",
																		":key",
																		"validator"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "key",
																			"value": "aliqua",
																			"description": "(Required) The key of the required mobile session or user action property."
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Failed. The input is invalid.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"STRING\",\n  \"displayName\": \"ut tempor nostrud\",\n  \"aggregation\": \"LAST\",\n  \"storeAsUserActionProperty\": false,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"do et dolor\",\n  \"serverSideRequestAttribute\": \"sit\",\n  \"name\": \"dolore minim\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/:key/validator",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"userActionAndSessionProperties",
																		":key",
																		"validator"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "key",
																			"value": "aliqua",
																			"description": "(Required) The key of the required mobile session or user action property."
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Lists all mobile session and user action properties for the specified application",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"mobile",
														":applicationId",
														"userActionAndSessionProperties"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "aliqua",
															"description": "(Required) The ID of the required application."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"mobile",
																":applicationId",
																"userActionAndSessionProperties"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required application."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"sessionProperties\": [\n    {\n      \"key\": \"minim\",\n      \"displayName\": \"Excepteur in\"\n    },\n    {\n      \"key\": \"laboru\",\n      \"displayName\": \"dolore consectetur eu\"\n    }\n  ],\n  \"userActionProperties\": [\n    {\n      \"key\": \"do irure ut\",\n      \"displayName\": \"ullamco non\"\n    },\n    {\n      \"key\": \"dolore magna\",\n      \"displayName\": \"in\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Creates a new mobile session or user action property for the specified application",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"key\": \"dolore veniam aute consectetur laborum\",\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"LONG\",\n  \"displayName\": \"commodo \",\n  \"aggregation\": \"MIN\",\n  \"storeAsUserActionProperty\": true,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"ut adipisicing sit ea fugiat\",\n  \"serverSideRequestAttribute\": \"est esse incididunt\",\n  \"name\": \"dolore quis incididunt esse\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"mobile",
														":applicationId",
														"userActionAndSessionProperties"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "aliqua",
															"description": "(Required) The ID of the required application."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The property has been created. The response contains the ID of the new property.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"key\": \"dolore veniam aute consectetur laborum\",\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"LONG\",\n  \"displayName\": \"commodo \",\n  \"aggregation\": \"MIN\",\n  \"storeAsUserActionProperty\": true,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"ut adipisicing sit ea fugiat\",\n  \"serverSideRequestAttribute\": \"est esse incididunt\",\n  \"name\": \"dolore quis incididunt esse\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"mobile",
																":applicationId",
																"userActionAndSessionProperties"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required application."
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"key\": \"aliquip\",\n  \"displayName\": \"officia in aute ipsum\"\n}"
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"key\": \"dolore veniam aute consectetur laborum\",\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"LONG\",\n  \"displayName\": \"commodo \",\n  \"aggregation\": \"MIN\",\n  \"storeAsUserActionProperty\": true,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"ut adipisicing sit ea fugiat\",\n  \"serverSideRequestAttribute\": \"est esse incididunt\",\n  \"name\": \"dolore quis incididunt esse\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"mobile",
																":applicationId",
																"userActionAndSessionProperties"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required application."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Validates the payload for the `POST /applications/mobile/{applicationId}/userActionAndSessionProperties` request",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"key\": \"dolore veniam aute consectetur laborum\",\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"LONG\",\n  \"displayName\": \"commodo \",\n  \"aggregation\": \"MIN\",\n  \"storeAsUserActionProperty\": true,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"ut adipisicing sit ea fugiat\",\n  \"serverSideRequestAttribute\": \"est esse incididunt\",\n  \"name\": \"dolore quis incididunt esse\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"mobile",
														":applicationId",
														"userActionAndSessionProperties",
														"validator"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "aliqua",
															"description": "(Required) The ID of the required application."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"key\": \"dolore veniam aute consectetur laborum\",\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"LONG\",\n  \"displayName\": \"commodo \",\n  \"aggregation\": \"MIN\",\n  \"storeAsUserActionProperty\": true,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"ut adipisicing sit ea fugiat\",\n  \"serverSideRequestAttribute\": \"est esse incididunt\",\n  \"name\": \"dolore quis incididunt esse\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"mobile",
																":applicationId",
																"userActionAndSessionProperties",
																"validator"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required application."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"key\": \"dolore veniam aute consectetur laborum\",\n  \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n  \"type\": \"LONG\",\n  \"displayName\": \"commodo \",\n  \"aggregation\": \"MIN\",\n  \"storeAsUserActionProperty\": true,\n  \"storeAsSessionProperty\": false,\n  \"cleanupRule\": \"ut adipisicing sit ea fugiat\",\n  \"serverSideRequestAttribute\": \"est esse incididunt\",\n  \"name\": \"dolore quis incididunt esse\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/mobile/:applicationId/userActionAndSessionProperties/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"mobile",
																":applicationId",
																"userActionAndSessionProperties",
																"validator"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required application."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "key User Actions",
									"item": [
										{
											"name": "{action Name}",
											"item": [
												{
													"name": "Marks the user action as a key user action in the specified application",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "Api-Token {{DT_TOKEN}}",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json; charset=utf-8"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/applications/mobile/:applicationId/keyUserActions/:actionName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"mobile",
																":applicationId",
																"keyUserActions",
																":actionName"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required application."
																},
																{
																	"key": "actionName",
																	"value": "aliqua",
																	"description": "(Required) The name of the user action to be marked as a key user action."
																}
															]
														}
													},
													"response": [
														{
															"name": "Success. The action has been marked as a key user action. The response contains its name.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/keyUserActions/:actionName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"keyUserActions",
																		":actionName"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "actionName",
																			"value": "aliqua",
																			"description": "(Required) The name of the user action to be marked as a key user action."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																}
															],
															"cookie": [],
															"body": "{\n  \"name\": \"eiusmod irure do\"\n}"
														},
														{
															"name": "Failed. The specified entity doesn't exist.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/keyUserActions/:actionName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"keyUserActions",
																		":actionName"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "actionName",
																			"value": "aliqua",
																			"description": "(Required) The name of the user action to be marked as a key user action."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Failed. The max number of key user actions has been reached for the application.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/keyUserActions/:actionName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"keyUserActions",
																		":actionName"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "actionName",
																			"value": "aliqua",
																			"description": "(Required) The name of the user action to be marked as a key user action."
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Removes the specified user action from the list of key user actions in the specified application",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "Api-Token {{DT_TOKEN}}",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/mobile/:applicationId/keyUserActions/:actionName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"mobile",
																":applicationId",
																"keyUserActions",
																":actionName"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required application."
																},
																{
																	"key": "actionName",
																	"value": "aliqua",
																	"description": "(Required) The ID of the user action to be removed from the key user actions list."
																}
															]
														}
													},
													"response": [
														{
															"name": "Success. The user action has been removed from the list of key user actions. The response doesn't have a body.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/keyUserActions/:actionName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"keyUserActions",
																		":actionName"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "actionName",
																			"value": "aliqua",
																			"description": "(Required) The ID of the user action to be removed from the key user actions list."
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Failed. The specified entity doesn't exist.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/applications/mobile/:applicationId/keyUserActions/:actionName",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"applications",
																		"mobile",
																		":applicationId",
																		"keyUserActions",
																		":actionName"
																	],
																	"variable": [
																		{
																			"key": "applicationId",
																			"value": "aliqua",
																			"description": "(Required) The ID of the required application."
																		},
																		{
																			"key": "actionName",
																			"value": "aliqua",
																			"description": "(Required) The ID of the user action to be removed from the key user actions list."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Gets the list of key user actions in the specified application",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/applications/mobile/:applicationId/keyUserActions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"mobile",
														":applicationId",
														"keyUserActions"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "aliqua",
															"description": "(Required) The ID of the required application."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/applications/mobile/:applicationId/keyUserActions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"mobile",
																":applicationId",
																"keyUserActions"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required application."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"keyUserActions\": [\n    {\n      \"name\": \"sit\"\n    },\n    {\n      \"name\": \"ipsum in occaecat laborum\"\n    }\n  ]\n}"
												},
												{
													"name": "Failed. The specified entity doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/applications/mobile/:applicationId/keyUserActions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"mobile",
																":applicationId",
																"keyUserActions"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required application."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Lists all existing mobile and custom applications",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/applications/mobile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"mobile"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/applications/mobile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"mobile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Creates a new mobile or custom application",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"applicationType\": \"CUSTOM_APPLICATION\",\n  \"name\": \"d\",\n  \"applicationId\": \"veniam\",\n  \"iconType\": \"DESKTOP\",\n  \"costControlUserSessionPercentage\": 81,\n  \"apdexSettings\": {\n    \"frustratedOnError\": true,\n    \"frustratingThreshold\": 3508361,\n    \"toleratedThreshold\": -18290555\n  },\n  \"optInModeEnabled\": true,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": false,\n  \"beaconEndpointType\": \"INSTRUMENTED_WEB_SERVER\",\n  \"beaconEndpointUrl\": \"cillum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applications/mobile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"mobile"
									]
								},
								"description": "The body must not provide an identifier. An identifier is assigned automatically by Dynatrace. \n\nYou can, however, provide your own applicationId. If you don't specify an applicationId, it is assigned automatically by Dynatrace."
							},
							"response": [
								{
									"name": "Success. The application has been created. The response contains the identifier and name of the new application.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"applicationType\": \"CUSTOM_APPLICATION\",\n  \"name\": \"d\",\n  \"applicationId\": \"veniam\",\n  \"iconType\": \"DESKTOP\",\n  \"costControlUserSessionPercentage\": 81,\n  \"apdexSettings\": {\n    \"frustratedOnError\": true,\n    \"frustratingThreshold\": 3508361,\n    \"toleratedThreshold\": -18290555\n  },\n  \"optInModeEnabled\": true,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": false,\n  \"beaconEndpointType\": \"INSTRUMENTED_WEB_SERVER\",\n  \"beaconEndpointUrl\": \"cillum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/mobile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"mobile"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"applicationType\": \"CUSTOM_APPLICATION\",\n  \"name\": \"d\",\n  \"applicationId\": \"veniam\",\n  \"iconType\": \"DESKTOP\",\n  \"costControlUserSessionPercentage\": 81,\n  \"apdexSettings\": {\n    \"frustratedOnError\": true,\n    \"frustratingThreshold\": 3508361,\n    \"toleratedThreshold\": -18290555\n  },\n  \"optInModeEnabled\": true,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": false,\n  \"beaconEndpointType\": \"INSTRUMENTED_WEB_SERVER\",\n  \"beaconEndpointUrl\": \"cillum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/mobile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"mobile"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								},
								{
									"name": "Failed. The applicationId is already used by another application.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"applicationType\": \"CUSTOM_APPLICATION\",\n  \"name\": \"d\",\n  \"applicationId\": \"veniam\",\n  \"iconType\": \"DESKTOP\",\n  \"costControlUserSessionPercentage\": 81,\n  \"apdexSettings\": {\n    \"frustratedOnError\": true,\n    \"frustratingThreshold\": 3508361,\n    \"toleratedThreshold\": -18290555\n  },\n  \"optInModeEnabled\": true,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": false,\n  \"beaconEndpointType\": \"INSTRUMENTED_WEB_SERVER\",\n  \"beaconEndpointUrl\": \"cillum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/mobile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"mobile"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /applications/mobile` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"applicationType\": \"CUSTOM_APPLICATION\",\n  \"name\": \"d\",\n  \"applicationId\": \"veniam\",\n  \"iconType\": \"DESKTOP\",\n  \"costControlUserSessionPercentage\": 81,\n  \"apdexSettings\": {\n    \"frustratedOnError\": true,\n    \"frustratingThreshold\": 3508361,\n    \"toleratedThreshold\": -18290555\n  },\n  \"optInModeEnabled\": true,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": false,\n  \"beaconEndpointType\": \"INSTRUMENTED_WEB_SERVER\",\n  \"beaconEndpointUrl\": \"cillum\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applications/mobile/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"mobile",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"applicationType\": \"CUSTOM_APPLICATION\",\n  \"name\": \"d\",\n  \"applicationId\": \"veniam\",\n  \"iconType\": \"DESKTOP\",\n  \"costControlUserSessionPercentage\": 81,\n  \"apdexSettings\": {\n    \"frustratedOnError\": true,\n    \"frustratingThreshold\": 3508361,\n    \"toleratedThreshold\": -18290555\n  },\n  \"optInModeEnabled\": true,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": false,\n  \"beaconEndpointType\": \"INSTRUMENTED_WEB_SERVER\",\n  \"beaconEndpointUrl\": \"cillum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/mobile/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"mobile",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"applicationType\": \"CUSTOM_APPLICATION\",\n  \"name\": \"d\",\n  \"applicationId\": \"veniam\",\n  \"iconType\": \"DESKTOP\",\n  \"costControlUserSessionPercentage\": 81,\n  \"apdexSettings\": {\n    \"frustratedOnError\": true,\n    \"frustratingThreshold\": 3508361,\n    \"toleratedThreshold\": -18290555\n  },\n  \"optInModeEnabled\": true,\n  \"sessionReplayEnabled\": false,\n  \"sessionReplayOnCrashEnabled\": false,\n  \"beaconEndpointType\": \"INSTRUMENTED_WEB_SERVER\",\n  \"beaconEndpointUrl\": \"cillum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/mobile/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"mobile",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "web",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "key User Actions",
									"item": [
										{
											"name": "Gets the list of key user actions in the specified web application",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id/keyUserActions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id",
														"keyUserActions"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required web application."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/applications/web/:id/keyUserActions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																":id",
																"keyUserActions"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required web application."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"keyUserActionList\": [\n    {\n      \"name\": \"Loading of page /example\",\n      \"actionType\": \"Load\",\n      \"domain\": \"test.com\",\n      \"meIdentifier\": \"APPLICATION_METHOD-1234\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Marks the user action as a key user action in the specified web application",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Loading of page /example\",\n  \"actionType\": \"Load\",\n  \"domain\": \"test.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id/keyUserActions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id",
														"keyUserActions"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required web application."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The action has been marked as a key user action. The response contains its ID.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Loading of page /example\",\n  \"actionType\": \"Load\",\n  \"domain\": \"test.com\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/web/:id/keyUserActions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																":id",
																"keyUserActions"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required web application."
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Loading of page /example\",\n  \"actionType\": \"Load\",\n  \"domain\": \"test.com\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/web/:id/keyUserActions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																":id",
																"keyUserActions"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required web application."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Removes the specified user action from the list of key user actions in the specified web application",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id/keyUserActions/:keyUserActionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id",
														"keyUserActions",
														":keyUserActionId"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required web application."
														},
														{
															"key": "keyUserActionId",
															"value": "aliqua",
															"description": "(Required) The ID of the user action to be removed from the key user actions list."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The user action has been removed from the list of key user actions. The response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/applications/web/:id/keyUserActions/:keyUserActionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																":id",
																"keyUserActions",
																":keyUserActionId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required web application."
																},
																{
																	"key": "keyUserActionId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the user action to be removed from the key user actions list."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "error Rules",
									"item": [
										{
											"name": "Gets the configuration of error rules in the specified application",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id/errorRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id",
														"errorRules"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required web application."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/applications/web/:id/errorRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																":id",
																"errorRules"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required web application."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"customErrorRules\": [\n    {\n      \"capture\": true,\n      \"customAlerting\": false,\n      \"impactApdex\": false,\n      \"keyPattern\": \"dolore occaecat mollit ex\",\n      \"keyMatcher\": \"ENDS_WITH\",\n      \"valuePattern\": \"commodo ullamco\",\n      \"valueMatcher\": \"EQUALS\"\n    },\n    {\n      \"capture\": true,\n      \"customAlerting\": false,\n      \"impactApdex\": false,\n      \"keyPattern\": \"ullamco minim dolore proident\",\n      \"keyMatcher\": \"BEGINS_WITH\",\n      \"valuePattern\": \"quis in incididunt in\",\n      \"valueMatcher\": \"ENDS_WITH\"\n    }\n  ],\n  \"httpErrorRules\": [\n    {\n      \"capture\": false,\n      \"considerForAi\": false,\n      \"considerUnknownErrorCode\": false,\n      \"filterByUrl\": true,\n      \"impactApdex\": true,\n      \"considerBlockedRequests\": true,\n      \"errorCodes\": \"400\",\n      \"filter\": \"ENDS_WITH\",\n      \"url\": \"adipisicing ess\"\n    },\n    {\n      \"capture\": false,\n      \"considerForAi\": true,\n      \"considerUnknownErrorCode\": false,\n      \"filterByUrl\": false,\n      \"impactApdex\": true,\n      \"considerBlockedRequests\": true,\n      \"errorCodes\": \"400\",\n      \"filter\": \"EQUALS\",\n      \"url\": \"sit quis\"\n    }\n  ],\n  \"ignoreCustomErrorsInApdexCalculation\": false,\n  \"ignoreHttpErrorsInApdexCalculation\": false,\n  \"ignoreJavaScriptErrorsInApdexCalculation\": true\n}"
												}
											]
										},
										{
											"name": "Updates the configuration of error rules in the specified application",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"customErrorRules\": [\n    {\n      \"capture\": true,\n      \"customAlerting\": true,\n      \"impactApdex\": false,\n      \"keyPattern\": \"Duis culpa non laboris aliqua\",\n      \"keyMatcher\": \"ENDS_WITH\",\n      \"valuePattern\": \"ut aliquip Excepteur\",\n      \"valueMatcher\": \"CONTAINS\"\n    },\n    {\n      \"capture\": true,\n      \"customAlerting\": false,\n      \"impactApdex\": true,\n      \"keyPattern\": \"eiusmod\",\n      \"keyMatcher\": \"ENDS_WITH\",\n      \"valuePattern\": \"Ut sit\",\n      \"valueMatcher\": \"BEGINS_WITH\"\n    }\n  ],\n  \"httpErrorRules\": [\n    {\n      \"capture\": false,\n      \"considerForAi\": true,\n      \"considerUnknownErrorCode\": true,\n      \"filterByUrl\": true,\n      \"impactApdex\": true,\n      \"considerBlockedRequests\": true,\n      \"errorCodes\": \"400\",\n      \"filter\": \"CONTAINS\",\n      \"url\": \"ad dolore quis\"\n    },\n    {\n      \"capture\": false,\n      \"considerForAi\": true,\n      \"considerUnknownErrorCode\": false,\n      \"filterByUrl\": false,\n      \"impactApdex\": false,\n      \"considerBlockedRequests\": false,\n      \"errorCodes\": \"400\",\n      \"filter\": \"CONTAINS\",\n      \"url\": \"do occaecat consequat\"\n    }\n  ],\n  \"ignoreCustomErrorsInApdexCalculation\": true,\n  \"ignoreHttpErrorsInApdexCalculation\": false,\n  \"ignoreJavaScriptErrorsInApdexCalculation\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id/errorRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id",
														"errorRules"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required web application."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The configuration has been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"customErrorRules\": [\n    {\n      \"capture\": true,\n      \"customAlerting\": true,\n      \"impactApdex\": false,\n      \"keyPattern\": \"Duis culpa non laboris aliqua\",\n      \"keyMatcher\": \"ENDS_WITH\",\n      \"valuePattern\": \"ut aliquip Excepteur\",\n      \"valueMatcher\": \"CONTAINS\"\n    },\n    {\n      \"capture\": true,\n      \"customAlerting\": false,\n      \"impactApdex\": true,\n      \"keyPattern\": \"eiusmod\",\n      \"keyMatcher\": \"ENDS_WITH\",\n      \"valuePattern\": \"Ut sit\",\n      \"valueMatcher\": \"BEGINS_WITH\"\n    }\n  ],\n  \"httpErrorRules\": [\n    {\n      \"capture\": false,\n      \"considerForAi\": true,\n      \"considerUnknownErrorCode\": true,\n      \"filterByUrl\": true,\n      \"impactApdex\": true,\n      \"considerBlockedRequests\": true,\n      \"errorCodes\": \"400\",\n      \"filter\": \"CONTAINS\",\n      \"url\": \"ad dolore quis\"\n    },\n    {\n      \"capture\": false,\n      \"considerForAi\": true,\n      \"considerUnknownErrorCode\": false,\n      \"filterByUrl\": false,\n      \"impactApdex\": false,\n      \"considerBlockedRequests\": false,\n      \"errorCodes\": \"400\",\n      \"filter\": \"CONTAINS\",\n      \"url\": \"do occaecat consequat\"\n    }\n  ],\n  \"ignoreCustomErrorsInApdexCalculation\": true,\n  \"ignoreHttpErrorsInApdexCalculation\": false,\n  \"ignoreJavaScriptErrorsInApdexCalculation\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/web/:id/errorRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																":id",
																"errorRules"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required web application."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"customErrorRules\": [\n    {\n      \"capture\": true,\n      \"customAlerting\": true,\n      \"impactApdex\": false,\n      \"keyPattern\": \"Duis culpa non laboris aliqua\",\n      \"keyMatcher\": \"ENDS_WITH\",\n      \"valuePattern\": \"ut aliquip Excepteur\",\n      \"valueMatcher\": \"CONTAINS\"\n    },\n    {\n      \"capture\": true,\n      \"customAlerting\": false,\n      \"impactApdex\": true,\n      \"keyPattern\": \"eiusmod\",\n      \"keyMatcher\": \"ENDS_WITH\",\n      \"valuePattern\": \"Ut sit\",\n      \"valueMatcher\": \"BEGINS_WITH\"\n    }\n  ],\n  \"httpErrorRules\": [\n    {\n      \"capture\": false,\n      \"considerForAi\": true,\n      \"considerUnknownErrorCode\": true,\n      \"filterByUrl\": true,\n      \"impactApdex\": true,\n      \"considerBlockedRequests\": true,\n      \"errorCodes\": \"400\",\n      \"filter\": \"CONTAINS\",\n      \"url\": \"ad dolore quis\"\n    },\n    {\n      \"capture\": false,\n      \"considerForAi\": true,\n      \"considerUnknownErrorCode\": false,\n      \"filterByUrl\": false,\n      \"impactApdex\": false,\n      \"considerBlockedRequests\": false,\n      \"errorCodes\": \"400\",\n      \"filter\": \"CONTAINS\",\n      \"url\": \"do occaecat consequat\"\n    }\n  ],\n  \"ignoreCustomErrorsInApdexCalculation\": true,\n  \"ignoreHttpErrorsInApdexCalculation\": false,\n  \"ignoreJavaScriptErrorsInApdexCalculation\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/web/:id/errorRules",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																":id",
																"errorRules"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required web application."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "data Privacy",
									"item": [
										{
											"name": "Gets the data privacy settings of the specified web application",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id/dataPrivacy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id",
														"dataPrivacy"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the web application where you want to check data privacy settings."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/applications/web/:id/dataPrivacy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																":id",
																"dataPrivacy"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the web application where you want to check data privacy settings."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"dataCaptureOptInEnabled\": true,\n  \"doNotTrackBehaviour\": \"CAPTURE_ANONYMIZED\",\n  \"persistentCookieForUserTracking\": true,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"identifier\": \"ad el\",\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": false,\n    \"urlExclusionRules\": [\n      \"incididunt occaecat labore\",\n      \"do sint exercitation mollit\"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "Updates the data privacy settings of the specified web application",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dataCaptureOptInEnabled\": false,\n  \"doNotTrackBehaviour\": \"IGNORE_DO_NOT_TRACK\",\n  \"persistentCookieForUserTracking\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": false,\n    \"urlExclusionRules\": [\n      \"culpa \",\n      \"consequat \"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id/dataPrivacy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id",
														"dataPrivacy"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the web application, where you want to update data privacy settings."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. Data privacy settings have been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dataCaptureOptInEnabled\": false,\n  \"doNotTrackBehaviour\": \"IGNORE_DO_NOT_TRACK\",\n  \"persistentCookieForUserTracking\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": false,\n    \"urlExclusionRules\": [\n      \"culpa \",\n      \"consequat \"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/web/:id/dataPrivacy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																":id",
																"dataPrivacy"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the web application, where you want to update data privacy settings."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dataCaptureOptInEnabled\": false,\n  \"doNotTrackBehaviour\": \"IGNORE_DO_NOT_TRACK\",\n  \"persistentCookieForUserTracking\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": false,\n    \"urlExclusionRules\": [\n      \"culpa \",\n      \"consequat \"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/web/:id/dataPrivacy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																":id",
																"dataPrivacy"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the web application, where you want to update data privacy settings."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Validates data privacy settings for the `PUT /applications/web/{id}/dataPrivacy` request",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dataCaptureOptInEnabled\": false,\n  \"doNotTrackBehaviour\": \"IGNORE_DO_NOT_TRACK\",\n  \"persistentCookieForUserTracking\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": false,\n    \"urlExclusionRules\": [\n      \"culpa \",\n      \"consequat \"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id/dataPrivacy/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id",
														"dataPrivacy",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the web application, where you want to validate data privacy settings."
														}
													]
												}
											},
											"response": [
												{
													"name": "Validated. The submitted configuration is valid. Response does not have a body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dataCaptureOptInEnabled\": false,\n  \"doNotTrackBehaviour\": \"IGNORE_DO_NOT_TRACK\",\n  \"persistentCookieForUserTracking\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": false,\n    \"urlExclusionRules\": [\n      \"culpa \",\n      \"consequat \"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/web/:id/dataPrivacy/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																":id",
																"dataPrivacy",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the web application, where you want to validate data privacy settings."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dataCaptureOptInEnabled\": false,\n  \"doNotTrackBehaviour\": \"IGNORE_DO_NOT_TRACK\",\n  \"persistentCookieForUserTracking\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": false,\n    \"urlExclusionRules\": [\n      \"culpa \",\n      \"consequat \"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/web/:id/dataPrivacy/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																":id",
																"dataPrivacy",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the web application, where you want to validate data privacy settings."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Gets the configuration of the specified web application",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/applications/web/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"web",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the requested web application."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the requested web application."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"costControlUserSessionPercentage\": 82.69343876564854,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 26866.648363771576,\n    \"frustratingThreshold\": 122875.58004402657,\n    \"toleratedFallbackThreshold\": 37367.59409154537,\n    \"frustratingFallbackThreshold\": 69698.48660087422\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 14591.28045323851,\n    \"frustratingThreshold\": 79866.0019180307,\n    \"toleratedFallbackThreshold\": 3537.26343432589,\n    \"frustratingFallbackThreshold\": 233016.89292040616\n  },\n  \"loadActionKeyPerformanceMetric\": \"SPEED_INDEX\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": false,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"ipsum id magna est\",\n    \"customConfigurationProperties\": \"ut sin\",\n    \"excludeXhrRegex\": \"sed fugiat dolore proident nulla\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"JAVASCRIPT_TAG\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"-HFrLhM\",\n    \"xmlHttpRequest\": false,\n    \"correlationHeaderInclusionRegex\": \"aliquip Lorem aliqua\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 55159019,\n    \"libraryFileLocation\": \"incididunt dolor\",\n    \"monitoringDataPath\": \"nostrud cupidatat\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"magna\"\n  },\n  \"name\": \"commodo consectetur Lorem incididunt\",\n  \"realUserMonitoringEnabled\": true,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 73,\n    \"resourcesThreshold\": 74973619,\n    \"slowCdnResourcesThreshold\": 52867956,\n    \"slowFirstPartyResourcesThreshold\": 63086388,\n    \"slowThirdPartyResourcesThreshold\": 43981259,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 86,\n    \"uncompressedResourcesThreshold\": 54499\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 57149.57772115361,\n    \"frustratingThreshold\": 231307.78331084215,\n    \"toleratedFallbackThreshold\": 24125.646317963245,\n    \"frustratingFallbackThreshold\": 236312.227502437\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"identifier\": \"aliqua velit quis\",\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 49,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"sunt qui dolor\",\n      \"consequat au\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 19006349,\n      \"metadataId\": -80361836,\n      \"cleanupRule\": \"aute eiusmod ullamco cillum\",\n      \"serverSideRequestAttribute\": \"sint labore\",\n      \"ignoreCase\": false\n    },\n    {\n      \"uniqueId\": 21899188,\n      \"metadataId\": 3536101,\n      \"cleanupRule\": \"quis\",\n      \"serverSideRequestAttribute\": \"aliqua\",\n      \"ignoreCase\": true\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"deserunt e\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"LONG_STRING\",\n      \"uniqueId\": 94010646,\n      \"displayName\": \"mollit in ex\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"est adipisicing\",\n      \"serverSideRequestAttribute\": \"fugiat et amet Ut do\",\n      \"metadataId\": 69979337,\n      \"ignoreCase\": false,\n      \"longStringLength\": 595\n    },\n    {\n      \"key\": \"amet irure laboris\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 84439015,\n      \"displayName\": \"nostrud do\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"non sed sit\",\n      \"serverSideRequestAttribute\": \"commodo occaecat sit ea\",\n      \"metadataId\": 9646968,\n      \"ignoreCase\": false,\n      \"longStringLength\": 576\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": true,\n    \"useFirstDetectedLoadAction\": true,\n    \"splitUserActionsByDomain\": false,\n    \"queryParameterCleanups\": [\n      \"Duis dolor\",\n      \"do et\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"voluptate\",\n      \"name\": \"Excepteur\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 19679781,\n      \"publicMetadata\": true,\n      \"useLastValue\": true\n    },\n    {\n      \"capturingName\": \"adipisicing amet reprehenderit magna\",\n      \"name\": \"laborum aliquip dolore\",\n      \"type\": \"CSS_SELECTOR\",\n      \"uniqueId\": 26297122,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"nisi incididunt qui en\",\n      \"id\": \"occaecat minim ut\",\n      \"type\": \"VisitDuration\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"ut in anim\",\n      \"id\": \"nisi\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"anim amet irure\"\n}"
										}
									]
								},
								{
									"name": "Updates the configuration of the specified web application or creates a new one",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/web/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"web",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the web application to update. \n\nIf you set the ID in the body as well, it must match this ID."
												}
											]
										},
										"description": "If the application with the specified ID does not exist, a new application will be created."
									},
									"response": [
										{
											"name": "Success. The new configuration has been created. The response body contains the ID and name of the new web application.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the web application to update. \n\nIf you set the ID in the body as well, it must match this ID."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Success. Configuration has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the web application to update. \n\nIf you set the ID in the body as well, it must match this ID."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the web application to update. \n\nIf you set the ID in the body as well, it must match this ID."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified web application",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/applications/web/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"web",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the web application to delete."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The application has been deleted. The response does not have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the web application to delete."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Validates the configuration of the web application for the `PUT /applications/web/{id}` request.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/web/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"web",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the web application to validate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response does not have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the web application to validate."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the web application to validate."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "default",
							"item": [
								{
									"name": "data Privacy",
									"item": [
										{
											"name": "Gets the data privacy settings of the default web application",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/applications/web/default/dataPrivacy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														"default",
														"dataPrivacy"
													]
												},
												"description": "Default application is pre-configured in your Dynatrace environment. By default all the traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one."
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/applications/web/default/dataPrivacy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																"default",
																"dataPrivacy"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"dataCaptureOptInEnabled\": false,\n  \"doNotTrackBehaviour\": \"CAPTURE_ANONYMIZED\",\n  \"persistentCookieForUserTracking\": true,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"identifier\": \"eiusmod dolor\",\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": true,\n    \"urlExclusionRules\": [\n      \"sunt non cillum\",\n      \"culpa nulla\"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "Updates the data privacy settings of the default web application",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dataCaptureOptInEnabled\": false,\n  \"doNotTrackBehaviour\": \"IGNORE_DO_NOT_TRACK\",\n  \"persistentCookieForUserTracking\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": false,\n    \"urlExclusionRules\": [\n      \"culpa \",\n      \"consequat \"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/default/dataPrivacy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														"default",
														"dataPrivacy"
													]
												},
												"description": "Default application is pre-configured in your Dynatrace environment. By default all traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one."
											},
											"response": [
												{
													"name": "Success. Data privacy settings have been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dataCaptureOptInEnabled\": false,\n  \"doNotTrackBehaviour\": \"IGNORE_DO_NOT_TRACK\",\n  \"persistentCookieForUserTracking\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": false,\n    \"urlExclusionRules\": [\n      \"culpa \",\n      \"consequat \"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/web/default/dataPrivacy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																"default",
																"dataPrivacy"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dataCaptureOptInEnabled\": false,\n  \"doNotTrackBehaviour\": \"IGNORE_DO_NOT_TRACK\",\n  \"persistentCookieForUserTracking\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": false,\n    \"urlExclusionRules\": [\n      \"culpa \",\n      \"consequat \"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/web/default/dataPrivacy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																"default",
																"dataPrivacy"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Validates data privacy settings of the default web application for the `PUT /applications/web/default/dataPrivacy` request",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dataCaptureOptInEnabled\": false,\n  \"doNotTrackBehaviour\": \"IGNORE_DO_NOT_TRACK\",\n  \"persistentCookieForUserTracking\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": false,\n    \"urlExclusionRules\": [\n      \"culpa \",\n      \"consequat \"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/default/dataPrivacy/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														"default",
														"dataPrivacy",
														"validator"
													]
												}
											},
											"response": [
												{
													"name": "Validated. The submitted configuration is valid. Response does not have a body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dataCaptureOptInEnabled\": false,\n  \"doNotTrackBehaviour\": \"IGNORE_DO_NOT_TRACK\",\n  \"persistentCookieForUserTracking\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": false,\n    \"urlExclusionRules\": [\n      \"culpa \",\n      \"consequat \"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/web/default/dataPrivacy/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																"default",
																"dataPrivacy",
																"validator"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dataCaptureOptInEnabled\": false,\n  \"doNotTrackBehaviour\": \"IGNORE_DO_NOT_TRACK\",\n  \"persistentCookieForUserTracking\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"sessionReplayDataPrivacy\": {\n    \"optInModeEnabled\": false,\n    \"urlExclusionRules\": [\n      \"culpa \",\n      \"consequat \"\n    ],\n    \"contentMaskingSettings\": {\n      \"recordingMaskingSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recordingMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"playbackMaskingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/applications/web/default/dataPrivacy/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																"web",
																"default",
																"dataPrivacy",
																"validator"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Gets the configuration of the default web application",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/applications/web/default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"web",
												"default"
											]
										},
										"description": "Default application is pre-configured in your Dynatrace environment. By default all traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/applications/web/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														"default"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"costControlUserSessionPercentage\": 82.69343876564854,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 26866.648363771576,\n    \"frustratingThreshold\": 122875.58004402657,\n    \"toleratedFallbackThreshold\": 37367.59409154537,\n    \"frustratingFallbackThreshold\": 69698.48660087422\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 14591.28045323851,\n    \"frustratingThreshold\": 79866.0019180307,\n    \"toleratedFallbackThreshold\": 3537.26343432589,\n    \"frustratingFallbackThreshold\": 233016.89292040616\n  },\n  \"loadActionKeyPerformanceMetric\": \"SPEED_INDEX\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": false,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"ipsum id magna est\",\n    \"customConfigurationProperties\": \"ut sin\",\n    \"excludeXhrRegex\": \"sed fugiat dolore proident nulla\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"JAVASCRIPT_TAG\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"-HFrLhM\",\n    \"xmlHttpRequest\": false,\n    \"correlationHeaderInclusionRegex\": \"aliquip Lorem aliqua\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 55159019,\n    \"libraryFileLocation\": \"incididunt dolor\",\n    \"monitoringDataPath\": \"nostrud cupidatat\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"magna\"\n  },\n  \"name\": \"commodo consectetur Lorem incididunt\",\n  \"realUserMonitoringEnabled\": true,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 73,\n    \"resourcesThreshold\": 74973619,\n    \"slowCdnResourcesThreshold\": 52867956,\n    \"slowFirstPartyResourcesThreshold\": 63086388,\n    \"slowThirdPartyResourcesThreshold\": 43981259,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 86,\n    \"uncompressedResourcesThreshold\": 54499\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 57149.57772115361,\n    \"frustratingThreshold\": 231307.78331084215,\n    \"toleratedFallbackThreshold\": 24125.646317963245,\n    \"frustratingFallbackThreshold\": 236312.227502437\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"identifier\": \"aliqua velit quis\",\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 49,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"sunt qui dolor\",\n      \"consequat au\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 19006349,\n      \"metadataId\": -80361836,\n      \"cleanupRule\": \"aute eiusmod ullamco cillum\",\n      \"serverSideRequestAttribute\": \"sint labore\",\n      \"ignoreCase\": false\n    },\n    {\n      \"uniqueId\": 21899188,\n      \"metadataId\": 3536101,\n      \"cleanupRule\": \"quis\",\n      \"serverSideRequestAttribute\": \"aliqua\",\n      \"ignoreCase\": true\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"deserunt e\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"LONG_STRING\",\n      \"uniqueId\": 94010646,\n      \"displayName\": \"mollit in ex\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"est adipisicing\",\n      \"serverSideRequestAttribute\": \"fugiat et amet Ut do\",\n      \"metadataId\": 69979337,\n      \"ignoreCase\": false,\n      \"longStringLength\": 595\n    },\n    {\n      \"key\": \"amet irure laboris\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 84439015,\n      \"displayName\": \"nostrud do\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"non sed sit\",\n      \"serverSideRequestAttribute\": \"commodo occaecat sit ea\",\n      \"metadataId\": 9646968,\n      \"ignoreCase\": false,\n      \"longStringLength\": 576\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": true,\n    \"useFirstDetectedLoadAction\": true,\n    \"splitUserActionsByDomain\": false,\n    \"queryParameterCleanups\": [\n      \"Duis dolor\",\n      \"do et\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"voluptate\",\n      \"name\": \"Excepteur\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 19679781,\n      \"publicMetadata\": true,\n      \"useLastValue\": true\n    },\n    {\n      \"capturingName\": \"adipisicing amet reprehenderit magna\",\n      \"name\": \"laborum aliquip dolore\",\n      \"type\": \"CSS_SELECTOR\",\n      \"uniqueId\": 26297122,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"nisi incididunt qui en\",\n      \"id\": \"occaecat minim ut\",\n      \"type\": \"VisitDuration\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"ut in anim\",\n      \"id\": \"nisi\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"anim amet irure\"\n}"
										}
									]
								},
								{
									"name": "Updates the configuration of the default web application",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/web/default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"web",
												"default"
											]
										},
										"description": "Default application is pre-configured in your Dynatrace environment. By default all traffic goes to this application. \n\nAfter you configure your own applications, all the traffic, which doesn't fit to any of your applications, goes to the default one."
									},
									"response": [
										{
											"name": "Success. Configuration has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														"default"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														"default"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the configuration of the default web application for the `PUT /applications/web/default` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/web/default/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"web",
												"default",
												"validator"
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response does not have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/default/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														"default",
														"validator"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/applications/web/default/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"web",
														"default",
														"validator"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all existing web applications",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/applications/web",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"web"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/applications/web",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"web"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Creates a new web application",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"application name\",\n  \"type\": \"AUTO_INJECTED\",\n  \"realUserMonitoringEnabled\": true,\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 100,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": true,\n    \"cssResourceCapturingExclusionRules\": [\n      \"rule\"\n    ]\n  },\n  \"costControlUserSessionPercentage\": 100,\n  \"loadActionKeyPerformanceMetric\": \"VISUALLY_COMPLETE\",\n  \"xhrActionKeyPerformanceMetric\": \"ACTION_DURATION\",\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 3000,\n    \"frustratingThreshold\": 12000,\n    \"toleratedFallbackThreshold\": 3000,\n    \"frustratingFallbackThreshold\": 12000\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 2500,\n    \"frustratingThreshold\": 10000,\n    \"toleratedFallbackThreshold\": 3000,\n    \"frustratingFallbackThreshold\": 12000\n  },\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 3000,\n    \"frustratingThreshold\": 12000,\n    \"toleratedFallbackThreshold\": 3000,\n    \"frustratingFallbackThreshold\": 12000\n  },\n  \"waterfallSettings\": {\n    \"uncompressedResourcesThreshold\": 860,\n    \"resourcesThreshold\": 100000,\n    \"resourceBrowserCachingThreshold\": 50,\n    \"slowFirstPartyResourcesThreshold\": 200000,\n    \"slowThirdPartyResourcesThreshold\": 200000,\n    \"slowCdnResourcesThreshold\": 200000,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 50\n  },\n  \"monitoringSettings\": {\n    \"fetchRequests\": false,\n    \"xmlHttpRequest\": true,\n    \"javaScriptFrameworkSupport\": {\n      \"angular\": true,\n      \"dojo\": false,\n      \"extJS\": false,\n      \"icefaces\": false,\n      \"jQuery\": true,\n      \"mooTools\": false,\n      \"prototype\": true,\n      \"activeXObject\": false\n    },\n    \"contentCapture\": {\n      \"resourceTimingSettings\": {\n        \"w3cResourceTimings\": true,\n        \"nonW3cResourceTimings\": false,\n        \"nonW3cResourceTimingsInstrumentationDelay\": 50,\n        \"resourceTimingCaptureType\": \"CAPTURE_FULL_DETAILS\",\n        \"resourceTimingsDomainLimit\": 10\n      },\n      \"javaScriptErrors\": true,\n      \"timeoutSettings\": {\n        \"timedActionSupport\": false,\n        \"temporaryActionLimit\": 0,\n        \"temporaryActionTotalTimeout\": 100\n      },\n      \"visuallyCompleteAndSpeedIndex\": true\n    },\n    \"excludeXhrRegex\": \"\",\n    \"correlationHeaderInclusionRegex\": \"\",\n    \"injectionMode\": \"JAVASCRIPT_TAG\",\n    \"libraryFileLocation\": \"\",\n    \"monitoringDataPath\": \"\",\n    \"customConfigurationProperties\": \"\",\n    \"serverRequestPathId\": \"\",\n    \"secureCookieAttribute\": false,\n    \"cookiePlacementDomain\": \"\",\n    \"cacheControlHeaderOptimizations\": true,\n    \"advancedJavaScriptTagSettings\": {\n      \"syncBeaconFirefox\": false,\n      \"syncBeaconInternetExplorer\": false,\n      \"instrumentUnsupportedAjaxFrameworks\": false,\n      \"specialCharactersToEscape\": \"\",\n      \"maxActionNameLength\": 100,\n      \"maxErrorsToCapture\": 10,\n      \"additionalEventHandlers\": {\n        \"userMouseupEventForClicks\": false,\n        \"clickEventHandler\": false,\n        \"mouseupEventHandler\": false,\n        \"blurEventHandler\": false,\n        \"changeEventHandler\": false,\n        \"toStringMethod\": false,\n        \"maxDomNodesToInstrument\": 5000\n      },\n      \"eventWrapperSettings\": {\n        \"click\": false,\n        \"mouseUp\": false,\n        \"change\": false,\n        \"blur\": false,\n        \"touchStart\": false,\n        \"touchEnd\": false\n      },\n      \"globalEventCaptureSettings\": {\n        \"mouseUp\": true,\n        \"mouseDown\": true,\n        \"click\": true,\n        \"doubleClick\": true,\n        \"keyUp\": true,\n        \"keyDown\": true,\n        \"scroll\": true,\n        \"additionalEventCapturedAsUserInput\": \"\"\n      }\n    },\n    \"browserRestrictionSettings\": {\n      \"browserRestrictions\": [\n        {\n          \"browserType\": \"INTERNET_EXPLORER\",\n          \"browserVersion\": \"0\",\n          \"platform\": \"ALL\",\n          \"comparator\": \"EQUALS\"\n        }\n      ],\n      \"mode\": \"EXCLUDE\"\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"enabled\": true,\n        \"urlOperator\": \"CONTAINS\",\n        \"urlPattern\": \"/lorem/ipsum.jsp\",\n        \"rule\": \"AFTER_SPECIFIC_HTML\",\n        \"htmlPattern\": \"</title>\"\n      }\n    ],\n    \"ipAddressRestrictionSettings\": {\n      \"ipAddressRestrictions\": [\n        {\n          \"subnetMask\": 3,\n          \"address\": \"10.0.0.1\"\n        },\n        {\n          \"address\": \"10.0.0.1\",\n          \"addressTo\": \"10.0.0.2\"\n        }\n      ],\n      \"mode\": \"EXCLUDE\"\n    }\n  },\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"name\": \"myPlaceholder\",\n        \"input\": \"PAGE_URL\",\n        \"processingPart\": \"ALL\",\n        \"processingSteps\": [\n          {\n            \"type\": \"SUBSTRING\",\n            \"patternBefore\": \".*b\",\n            \"patternBeforeSearchType\": \"FIRST\",\n            \"patternAfter\": \".*a\",\n            \"patternAfterSearchType\": \"LAST\",\n            \"replacement\": \"value\"\n          }\n        ],\n        \"useGuessedElementIdentifier\": false\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"template\": \"Loading of {myPlaceholder}\",\n        \"conditions\": [\n          {\n            \"operand1\": \"{myPlaceholder}\",\n            \"operand2\": \"foo\",\n            \"operator\": \"CONTAINS\"\n          }\n        ]\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"template\": \"Loading of {myPlaceholder}\",\n        \"conditions\": [\n          {\n            \"operand1\": \"{myPlaceholder}\",\n            \"operand2\": \"foo\",\n            \"operator\": \"CONTAINS\"\n          }\n        ]\n      }\n    ],\n    \"ignoreCase\": true,\n    \"splitUserActionsByDomain\": true\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"capturingName\": \"variableName\",\n      \"name\": \"display name\"\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"conversionGoalName\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"urlOrPath\": \"url or path\",\n        \"matchType\": \"Begins\",\n        \"caseSensitive\": false\n      },\n      \"userActionDetails\": {\n        \"value\": \"value to match\",\n        \"caseSensitive\": true,\n        \"matchType\": \"Ends\",\n        \"matchEntity\": \"ActionName\",\n        \"actionType\": \"Load\"\n      },\n      \"visitDurationDetails\": {\n        \"durationInMillis\": 1\n      },\n      \"visitNumActionDetails\": {\n        \"numUserActions\": 2\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applications/web",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"web"
									]
								},
								"description": "The body must not provide an ID as that will be automatically assigned by Dynatrace server."
							},
							"response": [
								{
									"name": "Success. The response body contains the ID and name of the new web application.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/web",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"web"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/web",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"web"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Lists data privacy settings of all web applications",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/applications/web/dataPrivacy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"web",
										"dataPrivacy"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/applications/web/dataPrivacy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"web",
												"dataPrivacy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"values\": [\n    {\n      \"dataCaptureOptInEnabled\": false,\n      \"doNotTrackBehaviour\": \"IGNORE_DO_NOT_TRACK\",\n      \"persistentCookieForUserTracking\": true,\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifier\": \"dolore laboris sint\",\n      \"sessionReplayDataPrivacy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"dataCaptureOptInEnabled\": true,\n      \"doNotTrackBehaviour\": \"DO_NOT_CAPTURE\",\n      \"persistentCookieForUserTracking\": true,\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identifier\": \"sint ad\",\n      \"sessionReplayDataPrivacy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Validates the configuration of the web application for the `POST /applications/web` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applications/web/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"web",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response does not have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/web/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"web",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"costControlUserSessionPercentage\": 16.335714985938885,\n  \"customActionApdexSettings\": {\n    \"toleratedThreshold\": 46763.66533730571,\n    \"frustratingThreshold\": 89698.80019220668,\n    \"toleratedFallbackThreshold\": 38194.662004801554,\n    \"frustratingFallbackThreshold\": 207500.56016982513\n  },\n  \"loadActionApdexSettings\": {\n    \"toleratedThreshold\": 53969.4502279876,\n    \"frustratingThreshold\": 98635.49343847872,\n    \"toleratedFallbackThreshold\": 51967.995649010714,\n    \"frustratingFallbackThreshold\": 93925.64049500221\n  },\n  \"loadActionKeyPerformanceMetric\": \"LARGEST_CONTENTFUL_PAINT\",\n  \"monitoringSettings\": {\n    \"advancedJavaScriptTagSettings\": {\n      \"additionalEventHandlers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eventWrapperSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"globalEventCaptureSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"instrumentUnsupportedAjaxFrameworks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxActionNameLength\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxErrorsToCapture\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"specialCharactersToEscape\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconFirefox\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"syncBeaconInternetExplorer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cacheControlHeaderOptimizations\": true,\n    \"contentCapture\": {\n      \"javaScriptErrors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"resourceTimingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timeoutSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyCompleteAndSpeedIndex\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visuallyComplete2Settings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"cookiePlacementDomain\": \"mollit\",\n    \"customConfigurationProperties\": \"qui dolore cillum minim nulla\",\n    \"excludeXhrRegex\": \"culpa\",\n    \"fetchRequests\": true,\n    \"injectionMode\": \"CODE_SNIPPET\",\n    \"javaScriptFrameworkSupport\": {\n      \"activeXObject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"angular\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dojo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"extJS\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"icefaces\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jQuery\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mooTools\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prototype\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"secureCookieAttribute\": false,\n    \"serverRequestPathId\": \"Ne-K\",\n    \"xmlHttpRequest\": true,\n    \"correlationHeaderInclusionRegex\": \"cillum irure culpa\",\n    \"addCrossOriginAnonymousAttribute\": false,\n    \"scriptTagCacheDurationInHours\": 51720548,\n    \"libraryFileLocation\": \"ad aliquip cupidatat\",\n    \"monitoringDataPath\": \"adipisicing\",\n    \"browserRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"browserRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ipAddressRestrictionSettings\": {\n      \"mode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRestrictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"javaScriptInjectionRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"angularPackageName\": \"ex non Lorem consequat\"\n  },\n  \"name\": \"fugiat consectetur\",\n  \"realUserMonitoringEnabled\": false,\n  \"waterfallSettings\": {\n    \"resourceBrowserCachingThreshold\": 23,\n    \"resourcesThreshold\": 94588338,\n    \"slowCdnResourcesThreshold\": 59780462,\n    \"slowFirstPartyResourcesThreshold\": 23208614,\n    \"slowThirdPartyResourcesThreshold\": 58784231,\n    \"speedIndexVisuallyCompleteRatioThreshold\": 53,\n    \"uncompressedResourcesThreshold\": 8845\n  },\n  \"xhrActionApdexSettings\": {\n    \"toleratedThreshold\": 29437.74433861986,\n    \"frustratingThreshold\": 3178.579470144758,\n    \"toleratedFallbackThreshold\": 23300.70244826941,\n    \"frustratingFallbackThreshold\": 62651.39898711057\n  },\n  \"xhrActionKeyPerformanceMetric\": \"RESPONSE_END\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"type\": \"BROWSER_EXTENSION_INJECTED\",\n  \"sessionReplayConfig\": {\n    \"costControlPercentage\": 28,\n    \"enabled\": true,\n    \"enableCssResourceCapturing\": false,\n    \"cssResourceCapturingExclusionRules\": [\n      \"ipsum consectetur et\",\n      \"Duis\"\n    ]\n  },\n  \"userTags\": [\n    {\n      \"uniqueId\": 68033732,\n      \"metadataId\": 67554413,\n      \"cleanupRule\": \"ut qui\",\n      \"serverSideRequestAttribute\": \"incididunt veniam Ut\",\n      \"ignoreCase\": true\n    },\n    {\n      \"uniqueId\": 24542777,\n      \"metadataId\": 11276775,\n      \"cleanupRule\": \"do\",\n      \"serverSideRequestAttribute\": \"sit\",\n      \"ignoreCase\": false\n    }\n  ],\n  \"userActionAndSessionProperties\": [\n    {\n      \"key\": \"occaecat aliqua\",\n      \"origin\": \"SERVER_SIDE_REQUEST_ATTRIBUTE\",\n      \"type\": \"STRING\",\n      \"uniqueId\": 88783352,\n      \"displayName\": \"magna occaecat\",\n      \"aggregation\": \"FIRST\",\n      \"storeAsUserActionProperty\": true,\n      \"storeAsSessionProperty\": false,\n      \"cleanupRule\": \"in ir\",\n      \"serverSideRequestAttribute\": \"in qui\",\n      \"metadataId\": -11495419,\n      \"ignoreCase\": true,\n      \"longStringLength\": 514\n    },\n    {\n      \"key\": \"voluptate mollit s\",\n      \"origin\": \"JAVASCRIPT_API\",\n      \"type\": \"DOUBLE\",\n      \"uniqueId\": 94708347,\n      \"displayName\": \"voluptate q\",\n      \"aggregation\": \"MAXIMUM\",\n      \"storeAsUserActionProperty\": false,\n      \"storeAsSessionProperty\": true,\n      \"cleanupRule\": \"oc\",\n      \"serverSideRequestAttribute\": \"labore\",\n      \"metadataId\": 21267344,\n      \"ignoreCase\": true,\n      \"longStringLength\": 311\n    }\n  ],\n  \"userActionNamingSettings\": {\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"loadActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"xhrActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"customActionNamingRules\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ignoreCase\": false,\n    \"useFirstDetectedLoadAction\": false,\n    \"splitUserActionsByDomain\": true,\n    \"queryParameterCleanups\": [\n      \"ut qui\",\n      \"incididunt ea sint do\"\n    ]\n  },\n  \"metaDataCaptureSettings\": [\n    {\n      \"capturingName\": \"enim dolor in\",\n      \"name\": \"consequat velit laborum minim\",\n      \"type\": \"JAVA_SCRIPT_VARIABLE\",\n      \"uniqueId\": 86331926,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    },\n    {\n      \"capturingName\": \"consect\",\n      \"name\": \"cillum Ut\",\n      \"type\": \"META_TAG\",\n      \"uniqueId\": 35896147,\n      \"publicMetadata\": false,\n      \"useLastValue\": false\n    }\n  ],\n  \"conversionGoals\": [\n    {\n      \"name\": \"et officia sit\",\n      \"id\": \"id et reprehenderit\",\n      \"type\": \"Destination\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"en\",\n      \"id\": \"amet ipsum voluptate\",\n      \"type\": \"UserAction\",\n      \"destinationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitDurationDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visitNumActionDetails\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"urlInjectionPattern\": \"elit dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applications/web/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"web",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "application Detection Rules",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the parameters of the specified application detection rule",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the required application detection rule."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/applicationDetectionRules/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applicationDetectionRules",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the required application detection rule."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}"
								}
							]
						},
						{
							"name": "Updates the specified application detection rule",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the application detection rule to be updated. \n\n If you set the ID in the body as well, it must match this ID."
										}
									]
								},
								"description": "If the application detection rule with the specified ID doesn't exist, a new application is created and appended to the end of the rule list. \n\nIf the **order** parameter is set for an existing rule, the request uses this value. Otherwise it keeps the existing order of rules."
							},
							"response": [
								{
									"name": "Success. Application detection rule has been created. Response contains the ID of the new rule.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applicationDetectionRules/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applicationDetectionRules",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the application detection rule to be updated. \n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Success. Application detection rule has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applicationDetectionRules/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applicationDetectionRules",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the application detection rule to be updated. \n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applicationDetectionRules/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applicationDetectionRules",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the application detection rule to be updated. \n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified application detection rule",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the application detection rule to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/applicationDetectionRules/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applicationDetectionRules",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the application detection rule to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validate the payload for the `PUT /applicationDetection/{id}` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the application detection rule to be validated. \n\n If you set the ID in the body as well, it must match this ID."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applicationDetectionRules/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applicationDetectionRules",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the application detection rule to be validated. \n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applicationDetectionRules/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applicationDetectionRules",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the application detection rule to be validated. \n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "host Detection",
					"item": [
						{
							"name": "Gets the configuration of host detection headers",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules/hostDetection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules",
										"hostDetection"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/applicationDetectionRules/hostDetection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applicationDetectionRules",
												"hostDetection"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"hostDetectionHeaders\": [\n    \"X-Host\",\n    \"X-Forwarded-Host\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Updates the configuration of host detection headers",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"hostDetectionHeaders\": [\n    \"X-Host\",\n    \"X-Forwarded-Host\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules/hostDetection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules",
										"hostDetection"
									]
								},
								"description": "The request overwrites the existing configuration. Any headers not presented in the payload will be lost."
							},
							"response": [
								{
									"name": "Success. The configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"hostDetectionHeaders\": [\n    \"X-Host\",\n    \"X-Forwarded-Host\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applicationDetectionRules/hostDetection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applicationDetectionRules",
												"hostDetection"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"hostDetectionHeaders\": [\n    \"X-Host\",\n    \"X-Forwarded-Host\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applicationDetectionRules/hostDetection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applicationDetectionRules",
												"hostDetection"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validate the payload for `PUT /applicationDetection/hostDetection` request.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"hostDetectionHeaders\": [\n    \"X-Host\",\n    \"X-Forwarded-Host\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules/hostDetection/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules",
										"hostDetection",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"hostDetectionHeaders\": [\n    \"X-Host\",\n    \"X-Forwarded-Host\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applicationDetectionRules/hostDetection/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applicationDetectionRules",
												"hostDetection",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"hostDetectionHeaders\": [\n    \"X-Host\",\n    \"X-Forwarded-Host\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/applicationDetectionRules/hostDetection/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applicationDetectionRules",
												"hostDetection",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available application detection rules",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/applicationDetectionRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applicationDetectionRules"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new application detection rule",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/applicationDetectionRules?position=PREPEND",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applicationDetectionRules"
							],
							"query": [
								{
									"key": "position",
									"value": "PREPEND",
									"description": "The position of the new rule: \n\n * `APPEND`: at the bottom of the rule list. \n * `PREPEND`: at the top of the rule list. \n\n If not set, the `APPEND` is used."
								}
							]
						},
						"description": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server. \n\nYou can only create detection rules for an existing application. If you need to create a rule for an application that doesn't exist yet, [create an application first](https://dt-url.net/vt03khh) and then configure detection rules for it."
					},
					"response": [
						{
							"name": "Success. The application detection rule has been created. Response contains the ID of the new rule.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules?position=PREPEND",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules"
									],
									"query": [
										{
											"key": "position",
											"value": "PREPEND"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules?position=PREPEND",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules"
									],
									"query": [
										{
											"key": "position",
											"value": "PREPEND"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Reorders the application detection rules",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/applicationDetectionRules/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applicationDetectionRules",
								"order"
							]
						},
						"description": "This request reorders the application detection rules according to the submitted list of IDs. Application detection rules not present in the body of the request will retain their relative ordering but are placed *after* all those present in the request."
					},
					"response": [
						{
							"name": "Success. Application detection rules have been reordered. Response doesn't have a body.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules",
										"order"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules",
										"order"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the `POST /applicationDetection` request",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/applicationDetectionRules/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applicationDetectionRules",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-123456\",\n  \"name\": \"uniqueName\",\n  \"filterConfig\": {\n    \"pattern\": \"myapp.example.com\",\n    \"applicationMatchType\": \"EQUALS\",\n    \"applicationMatchTarget\": \"DOMAIN\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/applicationDetectionRules/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applicationDetectionRules",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "auto Tags",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the properties of the specified auto-tag",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/autoTags/:id?includeProcessGroupReferences=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autoTags",
										":id"
									],
									"query": [
										{
											"key": "includeProcessGroupReferences",
											"value": "false",
											"description": "Flag to include process group references to the response. \n\n Process group references aren't compatible across environments. \n\nWhen this flag is set to `false`, conditions with process group references are removed. If that results in a rule having no conditions, the entire rule is removed."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the required auto-tag."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/autoTags/:id?includeProcessGroupReferences=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"autoTags",
												":id"
											],
											"query": [
												{
													"key": "includeProcessGroupReferences",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the required auto-tag."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"cillum incididunt\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ut mollit esse cupidatat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"adipisicing ea officia nostrud\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"velit qui tempor enim\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"aliqua dolor cillum commodo in\",\n      \"enabled\": false,\n      \"valueFormat\": \"proident aute consecte\"\n    },\n    {\n      \"entitySelector\": \"aute id\",\n      \"enabled\": true,\n      \"valueFormat\": \"eiusmod fugiat sunt d\"\n    },\n    {\n      \"entitySelector\": \"in pariatur qui sunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"do ut eiusmod dolore vel\"\n    },\n    {\n      \"entitySelector\": \"in irure Excepteur ipsum\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"deserunt in\",\n      \"enabled\": true,\n      \"valueFormat\": \"deserunt voluptate amet\"\n    },\n    {\n      \"entitySelector\": \"reprehenderit\",\n      \"enabled\": false,\n      \"valueFormat\": \"tempor \"\n    },\n    {\n      \"entitySelector\": \"Excepteur ad ut esse\",\n      \"enabled\": false,\n      \"valueFormat\": \"Excepteur ipsum nisi\"\n    },\n    {\n      \"entitySelector\": \"consectetur laboris\",\n      \"enabled\": false,\n      \"valueFormat\": \"commodo culpa ad aliquip\"\n    },\n    {\n      \"entitySelector\": \"occaecat adipisicing proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"nulla eiusmod deserunt sint\"\n    },\n    {\n      \"entitySelector\": \"dolore elit\",\n      \"enabled\": false,\n      \"valueFormat\": \"aliquip cillum\"\n    },\n    {\n      \"entitySelector\": \"est nisi in\",\n      \"enabled\": true,\n      \"valueFormat\": \"dolor minim\"\n    },\n    {\n      \"entitySelector\": \"labore anim mollit\",\n      \"enabled\": true,\n      \"valueFormat\": \"culpa aliqua irure Lorem\"\n    },\n    {\n      \"entitySelector\": \"deserunt cupidatat laboris sunt Excepteur\",\n      \"enabled\": true,\n      \"valueFormat\": \"mollit ad\"\n    },\n    {\n      \"entitySelector\": \"cillum est proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint Excepte\"\n    },\n    {\n      \"entitySelector\": \"Lorem deserunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"in consectetur aute quis\"\n    },\n    {\n      \"entitySelector\": \"sint consectetur in culpa\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor aliqua\"\n    },\n    {\n      \"entitySelector\": \"cillum sed do fugiat\",\n      \"enabled\": true,\n      \"valueFormat\": \"do non quis ipsum\"\n    },\n    {\n      \"entitySelector\": \"incididun\",\n      \"enabled\": true,\n      \"valueFormat\": \"incididunt reprehenderit \"\n    },\n    {\n      \"entitySelector\": \"irure\",\n      \"enabled\": true,\n      \"valueFormat\": \"a\"\n    },\n    {\n      \"entitySelector\": \"labore aliqua commodo\",\n      \"enabled\": false,\n      \"valueFormat\": \"sit ad sint\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Updates an existing auto-tag",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"cillum incididunt\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ut mollit esse cupidatat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"adipisicing ea officia nostrud\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"velit qui tempor enim\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"aliqua dolor cillum commodo in\",\n      \"enabled\": false,\n      \"valueFormat\": \"proident aute consecte\"\n    },\n    {\n      \"entitySelector\": \"aute id\",\n      \"enabled\": true,\n      \"valueFormat\": \"eiusmod fugiat sunt d\"\n    },\n    {\n      \"entitySelector\": \"in pariatur qui sunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"do ut eiusmod dolore vel\"\n    },\n    {\n      \"entitySelector\": \"in irure Excepteur ipsum\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"deserunt in\",\n      \"enabled\": true,\n      \"valueFormat\": \"deserunt voluptate amet\"\n    },\n    {\n      \"entitySelector\": \"reprehenderit\",\n      \"enabled\": false,\n      \"valueFormat\": \"tempor \"\n    },\n    {\n      \"entitySelector\": \"Excepteur ad ut esse\",\n      \"enabled\": false,\n      \"valueFormat\": \"Excepteur ipsum nisi\"\n    },\n    {\n      \"entitySelector\": \"consectetur laboris\",\n      \"enabled\": false,\n      \"valueFormat\": \"commodo culpa ad aliquip\"\n    },\n    {\n      \"entitySelector\": \"occaecat adipisicing proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"nulla eiusmod deserunt sint\"\n    },\n    {\n      \"entitySelector\": \"dolore elit\",\n      \"enabled\": false,\n      \"valueFormat\": \"aliquip cillum\"\n    },\n    {\n      \"entitySelector\": \"est nisi in\",\n      \"enabled\": true,\n      \"valueFormat\": \"dolor minim\"\n    },\n    {\n      \"entitySelector\": \"labore anim mollit\",\n      \"enabled\": true,\n      \"valueFormat\": \"culpa aliqua irure Lorem\"\n    },\n    {\n      \"entitySelector\": \"deserunt cupidatat laboris sunt Excepteur\",\n      \"enabled\": true,\n      \"valueFormat\": \"mollit ad\"\n    },\n    {\n      \"entitySelector\": \"cillum est proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint Excepte\"\n    },\n    {\n      \"entitySelector\": \"Lorem deserunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"in consectetur aute quis\"\n    },\n    {\n      \"entitySelector\": \"sint consectetur in culpa\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor aliqua\"\n    },\n    {\n      \"entitySelector\": \"cillum sed do fugiat\",\n      \"enabled\": true,\n      \"valueFormat\": \"do non quis ipsum\"\n    },\n    {\n      \"entitySelector\": \"incididun\",\n      \"enabled\": true,\n      \"valueFormat\": \"incididunt reprehenderit \"\n    },\n    {\n      \"entitySelector\": \"irure\",\n      \"enabled\": true,\n      \"valueFormat\": \"a\"\n    },\n    {\n      \"entitySelector\": \"labore aliqua commodo\",\n      \"enabled\": false,\n      \"valueFormat\": \"sit ad sint\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autoTags/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autoTags",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the auto-tag to be updated.\n\n If you set the ID in the body as well, it must match this ID."
										}
									]
								},
								"description": "If the auto-tag with the specified ID does not exist, a new auto-tag is created."
							},
							"response": [
								{
									"name": "Success. The new auto-tag has been created. The response body contains the ID of the new auto-tag.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"cillum incididunt\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ut mollit esse cupidatat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"adipisicing ea officia nostrud\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"velit qui tempor enim\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"aliqua dolor cillum commodo in\",\n      \"enabled\": false,\n      \"valueFormat\": \"proident aute consecte\"\n    },\n    {\n      \"entitySelector\": \"aute id\",\n      \"enabled\": true,\n      \"valueFormat\": \"eiusmod fugiat sunt d\"\n    },\n    {\n      \"entitySelector\": \"in pariatur qui sunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"do ut eiusmod dolore vel\"\n    },\n    {\n      \"entitySelector\": \"in irure Excepteur ipsum\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"deserunt in\",\n      \"enabled\": true,\n      \"valueFormat\": \"deserunt voluptate amet\"\n    },\n    {\n      \"entitySelector\": \"reprehenderit\",\n      \"enabled\": false,\n      \"valueFormat\": \"tempor \"\n    },\n    {\n      \"entitySelector\": \"Excepteur ad ut esse\",\n      \"enabled\": false,\n      \"valueFormat\": \"Excepteur ipsum nisi\"\n    },\n    {\n      \"entitySelector\": \"consectetur laboris\",\n      \"enabled\": false,\n      \"valueFormat\": \"commodo culpa ad aliquip\"\n    },\n    {\n      \"entitySelector\": \"occaecat adipisicing proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"nulla eiusmod deserunt sint\"\n    },\n    {\n      \"entitySelector\": \"dolore elit\",\n      \"enabled\": false,\n      \"valueFormat\": \"aliquip cillum\"\n    },\n    {\n      \"entitySelector\": \"est nisi in\",\n      \"enabled\": true,\n      \"valueFormat\": \"dolor minim\"\n    },\n    {\n      \"entitySelector\": \"labore anim mollit\",\n      \"enabled\": true,\n      \"valueFormat\": \"culpa aliqua irure Lorem\"\n    },\n    {\n      \"entitySelector\": \"deserunt cupidatat laboris sunt Excepteur\",\n      \"enabled\": true,\n      \"valueFormat\": \"mollit ad\"\n    },\n    {\n      \"entitySelector\": \"cillum est proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint Excepte\"\n    },\n    {\n      \"entitySelector\": \"Lorem deserunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"in consectetur aute quis\"\n    },\n    {\n      \"entitySelector\": \"sint consectetur in culpa\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor aliqua\"\n    },\n    {\n      \"entitySelector\": \"cillum sed do fugiat\",\n      \"enabled\": true,\n      \"valueFormat\": \"do non quis ipsum\"\n    },\n    {\n      \"entitySelector\": \"incididun\",\n      \"enabled\": true,\n      \"valueFormat\": \"incididunt reprehenderit \"\n    },\n    {\n      \"entitySelector\": \"irure\",\n      \"enabled\": true,\n      \"valueFormat\": \"a\"\n    },\n    {\n      \"entitySelector\": \"labore aliqua commodo\",\n      \"enabled\": false,\n      \"valueFormat\": \"sit ad sint\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/autoTags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"autoTags",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the auto-tag to be updated.\n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Success. The auto-tag has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"cillum incididunt\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ut mollit esse cupidatat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"adipisicing ea officia nostrud\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"velit qui tempor enim\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"aliqua dolor cillum commodo in\",\n      \"enabled\": false,\n      \"valueFormat\": \"proident aute consecte\"\n    },\n    {\n      \"entitySelector\": \"aute id\",\n      \"enabled\": true,\n      \"valueFormat\": \"eiusmod fugiat sunt d\"\n    },\n    {\n      \"entitySelector\": \"in pariatur qui sunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"do ut eiusmod dolore vel\"\n    },\n    {\n      \"entitySelector\": \"in irure Excepteur ipsum\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"deserunt in\",\n      \"enabled\": true,\n      \"valueFormat\": \"deserunt voluptate amet\"\n    },\n    {\n      \"entitySelector\": \"reprehenderit\",\n      \"enabled\": false,\n      \"valueFormat\": \"tempor \"\n    },\n    {\n      \"entitySelector\": \"Excepteur ad ut esse\",\n      \"enabled\": false,\n      \"valueFormat\": \"Excepteur ipsum nisi\"\n    },\n    {\n      \"entitySelector\": \"consectetur laboris\",\n      \"enabled\": false,\n      \"valueFormat\": \"commodo culpa ad aliquip\"\n    },\n    {\n      \"entitySelector\": \"occaecat adipisicing proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"nulla eiusmod deserunt sint\"\n    },\n    {\n      \"entitySelector\": \"dolore elit\",\n      \"enabled\": false,\n      \"valueFormat\": \"aliquip cillum\"\n    },\n    {\n      \"entitySelector\": \"est nisi in\",\n      \"enabled\": true,\n      \"valueFormat\": \"dolor minim\"\n    },\n    {\n      \"entitySelector\": \"labore anim mollit\",\n      \"enabled\": true,\n      \"valueFormat\": \"culpa aliqua irure Lorem\"\n    },\n    {\n      \"entitySelector\": \"deserunt cupidatat laboris sunt Excepteur\",\n      \"enabled\": true,\n      \"valueFormat\": \"mollit ad\"\n    },\n    {\n      \"entitySelector\": \"cillum est proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint Excepte\"\n    },\n    {\n      \"entitySelector\": \"Lorem deserunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"in consectetur aute quis\"\n    },\n    {\n      \"entitySelector\": \"sint consectetur in culpa\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor aliqua\"\n    },\n    {\n      \"entitySelector\": \"cillum sed do fugiat\",\n      \"enabled\": true,\n      \"valueFormat\": \"do non quis ipsum\"\n    },\n    {\n      \"entitySelector\": \"incididun\",\n      \"enabled\": true,\n      \"valueFormat\": \"incididunt reprehenderit \"\n    },\n    {\n      \"entitySelector\": \"irure\",\n      \"enabled\": true,\n      \"valueFormat\": \"a\"\n    },\n    {\n      \"entitySelector\": \"labore aliqua commodo\",\n      \"enabled\": false,\n      \"valueFormat\": \"sit ad sint\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/autoTags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"autoTags",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the auto-tag to be updated.\n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"cillum incididunt\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ut mollit esse cupidatat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"adipisicing ea officia nostrud\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"velit qui tempor enim\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"aliqua dolor cillum commodo in\",\n      \"enabled\": false,\n      \"valueFormat\": \"proident aute consecte\"\n    },\n    {\n      \"entitySelector\": \"aute id\",\n      \"enabled\": true,\n      \"valueFormat\": \"eiusmod fugiat sunt d\"\n    },\n    {\n      \"entitySelector\": \"in pariatur qui sunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"do ut eiusmod dolore vel\"\n    },\n    {\n      \"entitySelector\": \"in irure Excepteur ipsum\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"deserunt in\",\n      \"enabled\": true,\n      \"valueFormat\": \"deserunt voluptate amet\"\n    },\n    {\n      \"entitySelector\": \"reprehenderit\",\n      \"enabled\": false,\n      \"valueFormat\": \"tempor \"\n    },\n    {\n      \"entitySelector\": \"Excepteur ad ut esse\",\n      \"enabled\": false,\n      \"valueFormat\": \"Excepteur ipsum nisi\"\n    },\n    {\n      \"entitySelector\": \"consectetur laboris\",\n      \"enabled\": false,\n      \"valueFormat\": \"commodo culpa ad aliquip\"\n    },\n    {\n      \"entitySelector\": \"occaecat adipisicing proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"nulla eiusmod deserunt sint\"\n    },\n    {\n      \"entitySelector\": \"dolore elit\",\n      \"enabled\": false,\n      \"valueFormat\": \"aliquip cillum\"\n    },\n    {\n      \"entitySelector\": \"est nisi in\",\n      \"enabled\": true,\n      \"valueFormat\": \"dolor minim\"\n    },\n    {\n      \"entitySelector\": \"labore anim mollit\",\n      \"enabled\": true,\n      \"valueFormat\": \"culpa aliqua irure Lorem\"\n    },\n    {\n      \"entitySelector\": \"deserunt cupidatat laboris sunt Excepteur\",\n      \"enabled\": true,\n      \"valueFormat\": \"mollit ad\"\n    },\n    {\n      \"entitySelector\": \"cillum est proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint Excepte\"\n    },\n    {\n      \"entitySelector\": \"Lorem deserunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"in consectetur aute quis\"\n    },\n    {\n      \"entitySelector\": \"sint consectetur in culpa\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor aliqua\"\n    },\n    {\n      \"entitySelector\": \"cillum sed do fugiat\",\n      \"enabled\": true,\n      \"valueFormat\": \"do non quis ipsum\"\n    },\n    {\n      \"entitySelector\": \"incididun\",\n      \"enabled\": true,\n      \"valueFormat\": \"incididunt reprehenderit \"\n    },\n    {\n      \"entitySelector\": \"irure\",\n      \"enabled\": true,\n      \"valueFormat\": \"a\"\n    },\n    {\n      \"entitySelector\": \"labore aliqua commodo\",\n      \"enabled\": false,\n      \"valueFormat\": \"sit ad sint\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/autoTags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"autoTags",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the auto-tag to be updated.\n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified auto-tag",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/autoTags/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autoTags",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the auto-tag to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/autoTags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"autoTags",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the auto-tag to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /autoTags/{id}` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"cillum incididunt\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ut mollit esse cupidatat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"adipisicing ea officia nostrud\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"velit qui tempor enim\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"aliqua dolor cillum commodo in\",\n      \"enabled\": false,\n      \"valueFormat\": \"proident aute consecte\"\n    },\n    {\n      \"entitySelector\": \"aute id\",\n      \"enabled\": true,\n      \"valueFormat\": \"eiusmod fugiat sunt d\"\n    },\n    {\n      \"entitySelector\": \"in pariatur qui sunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"do ut eiusmod dolore vel\"\n    },\n    {\n      \"entitySelector\": \"in irure Excepteur ipsum\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"deserunt in\",\n      \"enabled\": true,\n      \"valueFormat\": \"deserunt voluptate amet\"\n    },\n    {\n      \"entitySelector\": \"reprehenderit\",\n      \"enabled\": false,\n      \"valueFormat\": \"tempor \"\n    },\n    {\n      \"entitySelector\": \"Excepteur ad ut esse\",\n      \"enabled\": false,\n      \"valueFormat\": \"Excepteur ipsum nisi\"\n    },\n    {\n      \"entitySelector\": \"consectetur laboris\",\n      \"enabled\": false,\n      \"valueFormat\": \"commodo culpa ad aliquip\"\n    },\n    {\n      \"entitySelector\": \"occaecat adipisicing proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"nulla eiusmod deserunt sint\"\n    },\n    {\n      \"entitySelector\": \"dolore elit\",\n      \"enabled\": false,\n      \"valueFormat\": \"aliquip cillum\"\n    },\n    {\n      \"entitySelector\": \"est nisi in\",\n      \"enabled\": true,\n      \"valueFormat\": \"dolor minim\"\n    },\n    {\n      \"entitySelector\": \"labore anim mollit\",\n      \"enabled\": true,\n      \"valueFormat\": \"culpa aliqua irure Lorem\"\n    },\n    {\n      \"entitySelector\": \"deserunt cupidatat laboris sunt Excepteur\",\n      \"enabled\": true,\n      \"valueFormat\": \"mollit ad\"\n    },\n    {\n      \"entitySelector\": \"cillum est proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint Excepte\"\n    },\n    {\n      \"entitySelector\": \"Lorem deserunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"in consectetur aute quis\"\n    },\n    {\n      \"entitySelector\": \"sint consectetur in culpa\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor aliqua\"\n    },\n    {\n      \"entitySelector\": \"cillum sed do fugiat\",\n      \"enabled\": true,\n      \"valueFormat\": \"do non quis ipsum\"\n    },\n    {\n      \"entitySelector\": \"incididun\",\n      \"enabled\": true,\n      \"valueFormat\": \"incididunt reprehenderit \"\n    },\n    {\n      \"entitySelector\": \"irure\",\n      \"enabled\": true,\n      \"valueFormat\": \"a\"\n    },\n    {\n      \"entitySelector\": \"labore aliqua commodo\",\n      \"enabled\": false,\n      \"valueFormat\": \"sit ad sint\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autoTags/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autoTags",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the auto-tag to be validated."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"cillum incididunt\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ut mollit esse cupidatat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"adipisicing ea officia nostrud\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"velit qui tempor enim\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"aliqua dolor cillum commodo in\",\n      \"enabled\": false,\n      \"valueFormat\": \"proident aute consecte\"\n    },\n    {\n      \"entitySelector\": \"aute id\",\n      \"enabled\": true,\n      \"valueFormat\": \"eiusmod fugiat sunt d\"\n    },\n    {\n      \"entitySelector\": \"in pariatur qui sunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"do ut eiusmod dolore vel\"\n    },\n    {\n      \"entitySelector\": \"in irure Excepteur ipsum\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"deserunt in\",\n      \"enabled\": true,\n      \"valueFormat\": \"deserunt voluptate amet\"\n    },\n    {\n      \"entitySelector\": \"reprehenderit\",\n      \"enabled\": false,\n      \"valueFormat\": \"tempor \"\n    },\n    {\n      \"entitySelector\": \"Excepteur ad ut esse\",\n      \"enabled\": false,\n      \"valueFormat\": \"Excepteur ipsum nisi\"\n    },\n    {\n      \"entitySelector\": \"consectetur laboris\",\n      \"enabled\": false,\n      \"valueFormat\": \"commodo culpa ad aliquip\"\n    },\n    {\n      \"entitySelector\": \"occaecat adipisicing proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"nulla eiusmod deserunt sint\"\n    },\n    {\n      \"entitySelector\": \"dolore elit\",\n      \"enabled\": false,\n      \"valueFormat\": \"aliquip cillum\"\n    },\n    {\n      \"entitySelector\": \"est nisi in\",\n      \"enabled\": true,\n      \"valueFormat\": \"dolor minim\"\n    },\n    {\n      \"entitySelector\": \"labore anim mollit\",\n      \"enabled\": true,\n      \"valueFormat\": \"culpa aliqua irure Lorem\"\n    },\n    {\n      \"entitySelector\": \"deserunt cupidatat laboris sunt Excepteur\",\n      \"enabled\": true,\n      \"valueFormat\": \"mollit ad\"\n    },\n    {\n      \"entitySelector\": \"cillum est proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint Excepte\"\n    },\n    {\n      \"entitySelector\": \"Lorem deserunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"in consectetur aute quis\"\n    },\n    {\n      \"entitySelector\": \"sint consectetur in culpa\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor aliqua\"\n    },\n    {\n      \"entitySelector\": \"cillum sed do fugiat\",\n      \"enabled\": true,\n      \"valueFormat\": \"do non quis ipsum\"\n    },\n    {\n      \"entitySelector\": \"incididun\",\n      \"enabled\": true,\n      \"valueFormat\": \"incididunt reprehenderit \"\n    },\n    {\n      \"entitySelector\": \"irure\",\n      \"enabled\": true,\n      \"valueFormat\": \"a\"\n    },\n    {\n      \"entitySelector\": \"labore aliqua commodo\",\n      \"enabled\": false,\n      \"valueFormat\": \"sit ad sint\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/autoTags/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"autoTags",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the auto-tag to be validated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"cillum incididunt\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ut mollit esse cupidatat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"adipisicing ea officia nostrud\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"velit qui tempor enim\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"aliqua dolor cillum commodo in\",\n      \"enabled\": false,\n      \"valueFormat\": \"proident aute consecte\"\n    },\n    {\n      \"entitySelector\": \"aute id\",\n      \"enabled\": true,\n      \"valueFormat\": \"eiusmod fugiat sunt d\"\n    },\n    {\n      \"entitySelector\": \"in pariatur qui sunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"do ut eiusmod dolore vel\"\n    },\n    {\n      \"entitySelector\": \"in irure Excepteur ipsum\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"deserunt in\",\n      \"enabled\": true,\n      \"valueFormat\": \"deserunt voluptate amet\"\n    },\n    {\n      \"entitySelector\": \"reprehenderit\",\n      \"enabled\": false,\n      \"valueFormat\": \"tempor \"\n    },\n    {\n      \"entitySelector\": \"Excepteur ad ut esse\",\n      \"enabled\": false,\n      \"valueFormat\": \"Excepteur ipsum nisi\"\n    },\n    {\n      \"entitySelector\": \"consectetur laboris\",\n      \"enabled\": false,\n      \"valueFormat\": \"commodo culpa ad aliquip\"\n    },\n    {\n      \"entitySelector\": \"occaecat adipisicing proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"nulla eiusmod deserunt sint\"\n    },\n    {\n      \"entitySelector\": \"dolore elit\",\n      \"enabled\": false,\n      \"valueFormat\": \"aliquip cillum\"\n    },\n    {\n      \"entitySelector\": \"est nisi in\",\n      \"enabled\": true,\n      \"valueFormat\": \"dolor minim\"\n    },\n    {\n      \"entitySelector\": \"labore anim mollit\",\n      \"enabled\": true,\n      \"valueFormat\": \"culpa aliqua irure Lorem\"\n    },\n    {\n      \"entitySelector\": \"deserunt cupidatat laboris sunt Excepteur\",\n      \"enabled\": true,\n      \"valueFormat\": \"mollit ad\"\n    },\n    {\n      \"entitySelector\": \"cillum est proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint Excepte\"\n    },\n    {\n      \"entitySelector\": \"Lorem deserunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"in consectetur aute quis\"\n    },\n    {\n      \"entitySelector\": \"sint consectetur in culpa\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor aliqua\"\n    },\n    {\n      \"entitySelector\": \"cillum sed do fugiat\",\n      \"enabled\": true,\n      \"valueFormat\": \"do non quis ipsum\"\n    },\n    {\n      \"entitySelector\": \"incididun\",\n      \"enabled\": true,\n      \"valueFormat\": \"incididunt reprehenderit \"\n    },\n    {\n      \"entitySelector\": \"irure\",\n      \"enabled\": true,\n      \"valueFormat\": \"a\"\n    },\n    {\n      \"entitySelector\": \"labore aliqua commodo\",\n      \"enabled\": false,\n      \"valueFormat\": \"sit ad sint\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/autoTags/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"autoTags",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the auto-tag to be validated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all configured auto-tags",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/autoTags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autoTags"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/autoTags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autoTags"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new auto-tag",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"nisi\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ullamco occaecat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"PROCESS_GROUP\",\n      \"valueFormat\": \"commodo adipisicing esse\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"valueFormat\": \"officia voluptate fugiat reprehenderit ipsum\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"Ut occaecat dolore\",\n      \"enabled\": false,\n      \"valueFormat\": \"ullamco do\"\n    },\n    {\n      \"entitySelector\": \"amet et\",\n      \"enabled\": true,\n      \"valueFormat\": \"cillum occaecat deserunt esse\"\n    },\n    {\n      \"entitySelector\": \"voluptate pariatur veniam\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor ipsum\"\n    },\n    {\n      \"entitySelector\": \"dolore eu ad est\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"est nostrud consectetur laborum\",\n      \"enabled\": true,\n      \"valueFormat\": \"reprehenderit magna\"\n    },\n    {\n      \"entitySelector\": \"Duis id\",\n      \"enabled\": true,\n      \"valueFormat\": \"fugiat\"\n    },\n    {\n      \"entitySelector\": \"aute\",\n      \"enabled\": true,\n      \"valueFormat\": \"labo\"\n    },\n    {\n      \"entitySelector\": \"et ex\",\n      \"enabled\": true,\n      \"valueFormat\": \"anim sit\"\n    },\n    {\n      \"entitySelector\": \"labore cillum\",\n      \"enabled\": false,\n      \"valueFormat\": \"ad minim elit\"\n    },\n    {\n      \"entitySelector\": \"ut sed\",\n      \"enabled\": true,\n      \"valueFormat\": \"Lorem reprehenderit sed\"\n    },\n    {\n      \"entitySelector\": \"nostr\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor ut velit\"\n    },\n    {\n      \"entitySelector\": \"ipsum magna\",\n      \"enabled\": true,\n      \"valueFormat\": \"ut dolor\"\n    },\n    {\n      \"entitySelector\": \"velit in consectetur non\",\n      \"enabled\": true,\n      \"valueFormat\": \"Exc\"\n    },\n    {\n      \"entitySelector\": \"proident u\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint laborum sunt elit\"\n    },\n    {\n      \"entitySelector\": \"Ut minim incididunt cillum\",\n      \"enabled\": true,\n      \"valueFormat\": \"pariatur nostrud\"\n    },\n    {\n      \"entitySelector\": \"sunt irure dolor in\",\n      \"enabled\": false,\n      \"valueFormat\": \"nostrud officia et cupidatat\"\n    },\n    {\n      \"entitySelector\": \"in nulla et\",\n      \"enabled\": true,\n      \"valueFormat\": \"elit Duis sunt nostrud\"\n    },\n    {\n      \"entitySelector\": \"incididunt lab\",\n      \"enabled\": true,\n      \"valueFormat\": \"voluptate culpa dolore\"\n    },\n    {\n      \"entitySelector\": \"enim Duis consectetur irure pariatur\",\n      \"enabled\": true,\n      \"valueFormat\": \"commodo Lorem incididunt\"\n    },\n    {\n      \"entitySelector\": \"non aute eiusmod\",\n      \"enabled\": true,\n      \"valueFormat\": \"velit\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autoTags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autoTags"
							]
						},
						"description": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server."
					},
					"response": [
						{
							"name": "Success. The auto-tag has been created. The response body contains the ID of the new auto-tag.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"cillum incididunt\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ut mollit esse cupidatat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"adipisicing ea officia nostrud\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"velit qui tempor enim\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"aliqua dolor cillum commodo in\",\n      \"enabled\": false,\n      \"valueFormat\": \"proident aute consecte\"\n    },\n    {\n      \"entitySelector\": \"aute id\",\n      \"enabled\": true,\n      \"valueFormat\": \"eiusmod fugiat sunt d\"\n    },\n    {\n      \"entitySelector\": \"in pariatur qui sunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"do ut eiusmod dolore vel\"\n    },\n    {\n      \"entitySelector\": \"in irure Excepteur ipsum\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"deserunt in\",\n      \"enabled\": true,\n      \"valueFormat\": \"deserunt voluptate amet\"\n    },\n    {\n      \"entitySelector\": \"reprehenderit\",\n      \"enabled\": false,\n      \"valueFormat\": \"tempor \"\n    },\n    {\n      \"entitySelector\": \"Excepteur ad ut esse\",\n      \"enabled\": false,\n      \"valueFormat\": \"Excepteur ipsum nisi\"\n    },\n    {\n      \"entitySelector\": \"consectetur laboris\",\n      \"enabled\": false,\n      \"valueFormat\": \"commodo culpa ad aliquip\"\n    },\n    {\n      \"entitySelector\": \"occaecat adipisicing proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"nulla eiusmod deserunt sint\"\n    },\n    {\n      \"entitySelector\": \"dolore elit\",\n      \"enabled\": false,\n      \"valueFormat\": \"aliquip cillum\"\n    },\n    {\n      \"entitySelector\": \"est nisi in\",\n      \"enabled\": true,\n      \"valueFormat\": \"dolor minim\"\n    },\n    {\n      \"entitySelector\": \"labore anim mollit\",\n      \"enabled\": true,\n      \"valueFormat\": \"culpa aliqua irure Lorem\"\n    },\n    {\n      \"entitySelector\": \"deserunt cupidatat laboris sunt Excepteur\",\n      \"enabled\": true,\n      \"valueFormat\": \"mollit ad\"\n    },\n    {\n      \"entitySelector\": \"cillum est proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint Excepte\"\n    },\n    {\n      \"entitySelector\": \"Lorem deserunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"in consectetur aute quis\"\n    },\n    {\n      \"entitySelector\": \"sint consectetur in culpa\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor aliqua\"\n    },\n    {\n      \"entitySelector\": \"cillum sed do fugiat\",\n      \"enabled\": true,\n      \"valueFormat\": \"do non quis ipsum\"\n    },\n    {\n      \"entitySelector\": \"incididun\",\n      \"enabled\": true,\n      \"valueFormat\": \"incididunt reprehenderit \"\n    },\n    {\n      \"entitySelector\": \"irure\",\n      \"enabled\": true,\n      \"valueFormat\": \"a\"\n    },\n    {\n      \"entitySelector\": \"labore aliqua commodo\",\n      \"enabled\": false,\n      \"valueFormat\": \"sit ad sint\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autoTags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autoTags"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"cillum incididunt\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ut mollit esse cupidatat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"adipisicing ea officia nostrud\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"velit qui tempor enim\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"aliqua dolor cillum commodo in\",\n      \"enabled\": false,\n      \"valueFormat\": \"proident aute consecte\"\n    },\n    {\n      \"entitySelector\": \"aute id\",\n      \"enabled\": true,\n      \"valueFormat\": \"eiusmod fugiat sunt d\"\n    },\n    {\n      \"entitySelector\": \"in pariatur qui sunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"do ut eiusmod dolore vel\"\n    },\n    {\n      \"entitySelector\": \"in irure Excepteur ipsum\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"deserunt in\",\n      \"enabled\": true,\n      \"valueFormat\": \"deserunt voluptate amet\"\n    },\n    {\n      \"entitySelector\": \"reprehenderit\",\n      \"enabled\": false,\n      \"valueFormat\": \"tempor \"\n    },\n    {\n      \"entitySelector\": \"Excepteur ad ut esse\",\n      \"enabled\": false,\n      \"valueFormat\": \"Excepteur ipsum nisi\"\n    },\n    {\n      \"entitySelector\": \"consectetur laboris\",\n      \"enabled\": false,\n      \"valueFormat\": \"commodo culpa ad aliquip\"\n    },\n    {\n      \"entitySelector\": \"occaecat adipisicing proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"nulla eiusmod deserunt sint\"\n    },\n    {\n      \"entitySelector\": \"dolore elit\",\n      \"enabled\": false,\n      \"valueFormat\": \"aliquip cillum\"\n    },\n    {\n      \"entitySelector\": \"est nisi in\",\n      \"enabled\": true,\n      \"valueFormat\": \"dolor minim\"\n    },\n    {\n      \"entitySelector\": \"labore anim mollit\",\n      \"enabled\": true,\n      \"valueFormat\": \"culpa aliqua irure Lorem\"\n    },\n    {\n      \"entitySelector\": \"deserunt cupidatat laboris sunt Excepteur\",\n      \"enabled\": true,\n      \"valueFormat\": \"mollit ad\"\n    },\n    {\n      \"entitySelector\": \"cillum est proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint Excepte\"\n    },\n    {\n      \"entitySelector\": \"Lorem deserunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"in consectetur aute quis\"\n    },\n    {\n      \"entitySelector\": \"sint consectetur in culpa\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor aliqua\"\n    },\n    {\n      \"entitySelector\": \"cillum sed do fugiat\",\n      \"enabled\": true,\n      \"valueFormat\": \"do non quis ipsum\"\n    },\n    {\n      \"entitySelector\": \"incididun\",\n      \"enabled\": true,\n      \"valueFormat\": \"incididunt reprehenderit \"\n    },\n    {\n      \"entitySelector\": \"irure\",\n      \"enabled\": true,\n      \"valueFormat\": \"a\"\n    },\n    {\n      \"entitySelector\": \"labore aliqua commodo\",\n      \"enabled\": false,\n      \"valueFormat\": \"sit ad sint\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autoTags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autoTags"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the `POST /autoTags` request",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"cillum incididunt\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ut mollit esse cupidatat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"adipisicing ea officia nostrud\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"velit qui tempor enim\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"aliqua dolor cillum commodo in\",\n      \"enabled\": false,\n      \"valueFormat\": \"proident aute consecte\"\n    },\n    {\n      \"entitySelector\": \"aute id\",\n      \"enabled\": true,\n      \"valueFormat\": \"eiusmod fugiat sunt d\"\n    },\n    {\n      \"entitySelector\": \"in pariatur qui sunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"do ut eiusmod dolore vel\"\n    },\n    {\n      \"entitySelector\": \"in irure Excepteur ipsum\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"deserunt in\",\n      \"enabled\": true,\n      \"valueFormat\": \"deserunt voluptate amet\"\n    },\n    {\n      \"entitySelector\": \"reprehenderit\",\n      \"enabled\": false,\n      \"valueFormat\": \"tempor \"\n    },\n    {\n      \"entitySelector\": \"Excepteur ad ut esse\",\n      \"enabled\": false,\n      \"valueFormat\": \"Excepteur ipsum nisi\"\n    },\n    {\n      \"entitySelector\": \"consectetur laboris\",\n      \"enabled\": false,\n      \"valueFormat\": \"commodo culpa ad aliquip\"\n    },\n    {\n      \"entitySelector\": \"occaecat adipisicing proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"nulla eiusmod deserunt sint\"\n    },\n    {\n      \"entitySelector\": \"dolore elit\",\n      \"enabled\": false,\n      \"valueFormat\": \"aliquip cillum\"\n    },\n    {\n      \"entitySelector\": \"est nisi in\",\n      \"enabled\": true,\n      \"valueFormat\": \"dolor minim\"\n    },\n    {\n      \"entitySelector\": \"labore anim mollit\",\n      \"enabled\": true,\n      \"valueFormat\": \"culpa aliqua irure Lorem\"\n    },\n    {\n      \"entitySelector\": \"deserunt cupidatat laboris sunt Excepteur\",\n      \"enabled\": true,\n      \"valueFormat\": \"mollit ad\"\n    },\n    {\n      \"entitySelector\": \"cillum est proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint Excepte\"\n    },\n    {\n      \"entitySelector\": \"Lorem deserunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"in consectetur aute quis\"\n    },\n    {\n      \"entitySelector\": \"sint consectetur in culpa\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor aliqua\"\n    },\n    {\n      \"entitySelector\": \"cillum sed do fugiat\",\n      \"enabled\": true,\n      \"valueFormat\": \"do non quis ipsum\"\n    },\n    {\n      \"entitySelector\": \"incididun\",\n      \"enabled\": true,\n      \"valueFormat\": \"incididunt reprehenderit \"\n    },\n    {\n      \"entitySelector\": \"irure\",\n      \"enabled\": true,\n      \"valueFormat\": \"a\"\n    },\n    {\n      \"entitySelector\": \"labore aliqua commodo\",\n      \"enabled\": false,\n      \"valueFormat\": \"sit ad sint\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/autoTags/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"autoTags",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"cillum incididunt\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ut mollit esse cupidatat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"adipisicing ea officia nostrud\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"velit qui tempor enim\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"aliqua dolor cillum commodo in\",\n      \"enabled\": false,\n      \"valueFormat\": \"proident aute consecte\"\n    },\n    {\n      \"entitySelector\": \"aute id\",\n      \"enabled\": true,\n      \"valueFormat\": \"eiusmod fugiat sunt d\"\n    },\n    {\n      \"entitySelector\": \"in pariatur qui sunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"do ut eiusmod dolore vel\"\n    },\n    {\n      \"entitySelector\": \"in irure Excepteur ipsum\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"deserunt in\",\n      \"enabled\": true,\n      \"valueFormat\": \"deserunt voluptate amet\"\n    },\n    {\n      \"entitySelector\": \"reprehenderit\",\n      \"enabled\": false,\n      \"valueFormat\": \"tempor \"\n    },\n    {\n      \"entitySelector\": \"Excepteur ad ut esse\",\n      \"enabled\": false,\n      \"valueFormat\": \"Excepteur ipsum nisi\"\n    },\n    {\n      \"entitySelector\": \"consectetur laboris\",\n      \"enabled\": false,\n      \"valueFormat\": \"commodo culpa ad aliquip\"\n    },\n    {\n      \"entitySelector\": \"occaecat adipisicing proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"nulla eiusmod deserunt sint\"\n    },\n    {\n      \"entitySelector\": \"dolore elit\",\n      \"enabled\": false,\n      \"valueFormat\": \"aliquip cillum\"\n    },\n    {\n      \"entitySelector\": \"est nisi in\",\n      \"enabled\": true,\n      \"valueFormat\": \"dolor minim\"\n    },\n    {\n      \"entitySelector\": \"labore anim mollit\",\n      \"enabled\": true,\n      \"valueFormat\": \"culpa aliqua irure Lorem\"\n    },\n    {\n      \"entitySelector\": \"deserunt cupidatat laboris sunt Excepteur\",\n      \"enabled\": true,\n      \"valueFormat\": \"mollit ad\"\n    },\n    {\n      \"entitySelector\": \"cillum est proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint Excepte\"\n    },\n    {\n      \"entitySelector\": \"Lorem deserunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"in consectetur aute quis\"\n    },\n    {\n      \"entitySelector\": \"sint consectetur in culpa\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor aliqua\"\n    },\n    {\n      \"entitySelector\": \"cillum sed do fugiat\",\n      \"enabled\": true,\n      \"valueFormat\": \"do non quis ipsum\"\n    },\n    {\n      \"entitySelector\": \"incididun\",\n      \"enabled\": true,\n      \"valueFormat\": \"incididunt reprehenderit \"\n    },\n    {\n      \"entitySelector\": \"irure\",\n      \"enabled\": true,\n      \"valueFormat\": \"a\"\n    },\n    {\n      \"entitySelector\": \"labore aliqua commodo\",\n      \"enabled\": false,\n      \"valueFormat\": \"sit ad sint\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autoTags/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autoTags",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"cillum incididunt\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\",\n  \"description\": \"ut mollit esse cupidatat\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"adipisicing ea officia nostrud\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ESXI_HOST\",\n      \"valueFormat\": \"velit qui tempor enim\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"aliqua dolor cillum commodo in\",\n      \"enabled\": false,\n      \"valueFormat\": \"proident aute consecte\"\n    },\n    {\n      \"entitySelector\": \"aute id\",\n      \"enabled\": true,\n      \"valueFormat\": \"eiusmod fugiat sunt d\"\n    },\n    {\n      \"entitySelector\": \"in pariatur qui sunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"do ut eiusmod dolore vel\"\n    },\n    {\n      \"entitySelector\": \"in irure Excepteur ipsum\",\n      \"enabled\": true,\n      \"valueFormat\": \"proident\"\n    },\n    {\n      \"entitySelector\": \"deserunt in\",\n      \"enabled\": true,\n      \"valueFormat\": \"deserunt voluptate amet\"\n    },\n    {\n      \"entitySelector\": \"reprehenderit\",\n      \"enabled\": false,\n      \"valueFormat\": \"tempor \"\n    },\n    {\n      \"entitySelector\": \"Excepteur ad ut esse\",\n      \"enabled\": false,\n      \"valueFormat\": \"Excepteur ipsum nisi\"\n    },\n    {\n      \"entitySelector\": \"consectetur laboris\",\n      \"enabled\": false,\n      \"valueFormat\": \"commodo culpa ad aliquip\"\n    },\n    {\n      \"entitySelector\": \"occaecat adipisicing proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"nulla eiusmod deserunt sint\"\n    },\n    {\n      \"entitySelector\": \"dolore elit\",\n      \"enabled\": false,\n      \"valueFormat\": \"aliquip cillum\"\n    },\n    {\n      \"entitySelector\": \"est nisi in\",\n      \"enabled\": true,\n      \"valueFormat\": \"dolor minim\"\n    },\n    {\n      \"entitySelector\": \"labore anim mollit\",\n      \"enabled\": true,\n      \"valueFormat\": \"culpa aliqua irure Lorem\"\n    },\n    {\n      \"entitySelector\": \"deserunt cupidatat laboris sunt Excepteur\",\n      \"enabled\": true,\n      \"valueFormat\": \"mollit ad\"\n    },\n    {\n      \"entitySelector\": \"cillum est proident\",\n      \"enabled\": false,\n      \"valueFormat\": \"sint Excepte\"\n    },\n    {\n      \"entitySelector\": \"Lorem deserunt\",\n      \"enabled\": true,\n      \"valueFormat\": \"in consectetur aute quis\"\n    },\n    {\n      \"entitySelector\": \"sint consectetur in culpa\",\n      \"enabled\": false,\n      \"valueFormat\": \"dolor aliqua\"\n    },\n    {\n      \"entitySelector\": \"cillum sed do fugiat\",\n      \"enabled\": true,\n      \"valueFormat\": \"do non quis ipsum\"\n    },\n    {\n      \"entitySelector\": \"incididun\",\n      \"enabled\": true,\n      \"valueFormat\": \"incididunt reprehenderit \"\n    },\n    {\n      \"entitySelector\": \"irure\",\n      \"enabled\": true,\n      \"valueFormat\": \"a\"\n    },\n    {\n      \"entitySelector\": \"labore aliqua commodo\",\n      \"enabled\": false,\n      \"valueFormat\": \"sit ad sint\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/autoTags/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"autoTags",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "hosts",
			"item": [
				{
					"name": "autoupdate",
					"item": [
						{
							"name": "Gets the environment-wide configuration of OneAgents auto-update",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hosts/autoupdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hosts",
										"autoupdate"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/hosts/autoupdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												"autoupdate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Updates the environment-wide configuration of OneAgents auto-update",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/hosts/autoupdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hosts",
										"autoupdate"
									]
								},
								"description": "OneAgents are updated several minutes after the change of configuration. \n\nThe process can take more time depending on number of OneAgents in the update queue."
							},
							"response": [
								{
									"name": "Success. The configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hosts/autoupdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												"autoupdate"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hosts/autoupdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												"autoupdate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /hosts/autoupdate` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/hosts/autoupdate/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hosts",
										"autoupdate",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hosts/autoupdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												"autoupdate",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hosts/autoupdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												"autoupdate",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "autoupdate",
							"item": [
								{
									"name": "Gets the configuration of OneAgent auto-update on the specified host",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/hosts/:id/autoupdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":id",
												"autoupdate"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required host."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/hosts/:id/autoupdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hosts",
														":id",
														"autoupdate"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Dynatrace entity ID of the required host."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"HOST-0123456789ABCDE\",\n  \"version\": \"1.191.0.20200326-161115\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"effectiveSetting\": \"DISABLED\",\n  \"effectiveVersion\": \"1.191.0.20200326-161115\"\n}"
										}
									]
								},
								{
									"name": "Updates the configuration of OneAgent auto-update on the specified host",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.191.0.20200326-161115\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hosts/:id/autoupdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":id",
												"autoupdate"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required host."
												}
											]
										},
										"description": "OneAgent is updated several minutes after the change of configuration. \n\nThe process can take more time depending on number of OneAgents in the update queue."
									},
									"response": [
										{
											"name": "Success. The configuration has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.191.0.20200326-161115\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/hosts/:id/autoupdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hosts",
														":id",
														"autoupdate"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Dynatrace entity ID of the required host."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.191.0.20200326-161115\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/hosts/:id/autoupdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hosts",
														":id",
														"autoupdate"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Dynatrace entity ID of the required host."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `PUT /hosts/{id}/autoupdate` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.191.0.20200326-161115\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hosts/:id/autoupdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":id",
												"autoupdate",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required host."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.191.0.20200326-161115\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/hosts/:id/autoupdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hosts",
														":id",
														"autoupdate",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Dynatrace entity ID of the required host."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.191.0.20200326-161115\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/hosts/:id/autoupdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hosts",
														":id",
														"autoupdate",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Dynatrace entity ID of the required host."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "monitoring",
							"item": [
								{
									"name": "Gets the monitoring configuration of OneAgent on the specified host",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/hosts/:id/monitoring",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":id",
												"monitoring"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required host."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/hosts/:id/monitoring",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hosts",
														":id",
														"monitoring"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Dynatrace entity ID of the required host."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"monitoringEnabled\": true,\n  \"monitoringMode\": \"FULL_STACK\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"HOST-0123456789ABCDE\"\n}"
										}
									]
								},
								{
									"name": "Updates the monitoring configuration of OneAgent on the specified host",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"monitoringEnabled\": true,\n  \"monitoringMode\": \"FULL_STACK\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hosts/:id/monitoring",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":id",
												"monitoring"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required host."
												}
											]
										},
										"description": "The monitoring mode of OneAgent is updated several minutes after the change of configuration."
									},
									"response": [
										{
											"name": "Success. The configuration has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"monitoringEnabled\": true,\n  \"monitoringMode\": \"FULL_STACK\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/hosts/:id/monitoring",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hosts",
														":id",
														"monitoring"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Dynatrace entity ID of the required host."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"monitoringEnabled\": true,\n  \"monitoringMode\": \"FULL_STACK\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/hosts/:id/monitoring",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hosts",
														":id",
														"monitoring"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Dynatrace entity ID of the required host."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `PUT /hosts/{id}/monitoring` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"monitoringEnabled\": true,\n  \"monitoringMode\": \"FULL_STACK\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hosts/:id/monitoring/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":id",
												"monitoring",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required host."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"monitoringEnabled\": true,\n  \"monitoringMode\": \"FULL_STACK\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/hosts/:id/monitoring/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hosts",
														":id",
														"monitoring",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Dynatrace entity ID of the required host."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"monitoringEnabled\": true,\n  \"monitoringMode\": \"FULL_STACK\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/hosts/:id/monitoring/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"hosts",
														":id",
														"monitoring",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The Dynatrace entity ID of the required host."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the OneAgent configuration on the specified host",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hosts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hosts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The Dynatrace entity ID of the required host."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/hosts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required host."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"HOST-0123456789ABCDE\",\n  \"monitoringConfig\": {\n    \"monitoringEnabled\": true,\n    \"monitoringMode\": \"FULL_STACK\",\n    \"metadata\": {\n      \"configurationVersions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentConfigurationVersions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"clusterVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"id\": \"HOST-0123456789ABCDE\"\n  },\n  \"autoUpdateConfig\": {\n    \"setting\": \"DISABLED\",\n    \"metadata\": {\n      \"configurationVersions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentConfigurationVersions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"clusterVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"id\": \"HOST-0123456789ABCDE\",\n    \"version\": \"1.191.0.20200326-161115\",\n    \"updateWindows\": {\n      \"windows\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"effectiveSetting\": \"DISABLED\",\n    \"effectiveVersion\": \"1.191.0.20200326-161115\"\n  },\n  \"techMonitoringConfigList\": {\n    \"technologies\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"metadata\": {\n      \"configurationVersions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentConfigurationVersions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"clusterVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
								}
							]
						},
						{
							"name": "Gets the configuration of monitored technologies on the specified host",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hosts/:id/technologies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hosts",
										":id",
										"technologies"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The Dynatrace entity ID of the required host."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/hosts/:id/technologies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hosts",
												":id",
												"technologies"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required host."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"technologies\": [\n    {\n      \"monitoringEnabled\": true,\n      \"type\": \"JAVA\",\n      \"scope\": \"ENVIRONMENT\"\n    },\n    {\n      \"monitoringEnabled\": true,\n      \"type\": \"JAVA\",\n      \"scope\": \"ENVIRONMENT\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "allowed Beacon Origins For Cors",
			"item": [
				{
					"name": "Gets the configuration of the allowed beacon origins for CORS requests",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/allowedBeaconOriginsForCors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"allowedBeaconOriginsForCors"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/allowedBeaconOriginsForCors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allowedBeaconOriginsForCors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"clusterVersion\": \"Mock version\"\n  },\n  \"allowedBeaconOrigins\": [\n    {\n      \"domainNameMatcher\": \"EQUALS\",\n      \"domainNamePattern\": \"dynatrace.com\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Updates the configuration of the allowed beacon origins for CORS requests",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"allowedBeaconOrigins\": [\n    {\n      \"domainNameMatcher\": \"EQUALS\",\n      \"domainNamePattern\": \"dolore\"\n    },\n    {\n      \"domainNameMatcher\": \"STARTS_WITH\",\n      \"domainNamePattern\": \"aliquip tempor Lorem\"\n    }\n  ],\n  \"rejectBeaconsWithoutOriginHeader\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/allowedBeaconOriginsForCors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"allowedBeaconOriginsForCors"
							]
						},
						"description": "The request overwrites the existing configuration. Any rules not presented in the payload will be lost."
					},
					"response": [
						{
							"name": "Success. The configuration has been updated. Response doesn't have a body.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"allowedBeaconOrigins\": [\n    {\n      \"domainNameMatcher\": \"EQUALS\",\n      \"domainNamePattern\": \"dolore\"\n    },\n    {\n      \"domainNameMatcher\": \"STARTS_WITH\",\n      \"domainNamePattern\": \"aliquip tempor Lorem\"\n    }\n  ],\n  \"rejectBeaconsWithoutOriginHeader\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/allowedBeaconOriginsForCors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allowedBeaconOriginsForCors"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"allowedBeaconOrigins\": [\n    {\n      \"domainNameMatcher\": \"EQUALS\",\n      \"domainNamePattern\": \"dolore\"\n    },\n    {\n      \"domainNameMatcher\": \"STARTS_WITH\",\n      \"domainNamePattern\": \"aliquip tempor Lorem\"\n    }\n  ],\n  \"rejectBeaconsWithoutOriginHeader\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/allowedBeaconOriginsForCors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allowedBeaconOriginsForCors"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the `PUT /allowedBeaconOriginsForCors` request",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"allowedBeaconOrigins\": [\n    {\n      \"domainNameMatcher\": \"EQUALS\",\n      \"domainNamePattern\": \"dolore\"\n    },\n    {\n      \"domainNameMatcher\": \"STARTS_WITH\",\n      \"domainNamePattern\": \"aliquip tempor Lorem\"\n    }\n  ],\n  \"rejectBeaconsWithoutOriginHeader\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/allowedBeaconOriginsForCors/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"allowedBeaconOriginsForCors",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"allowedBeaconOrigins\": [\n    {\n      \"domainNameMatcher\": \"EQUALS\",\n      \"domainNamePattern\": \"dolore\"\n    },\n    {\n      \"domainNameMatcher\": \"STARTS_WITH\",\n      \"domainNamePattern\": \"aliquip tempor Lorem\"\n    }\n  ],\n  \"rejectBeaconsWithoutOriginHeader\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/allowedBeaconOriginsForCors/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allowedBeaconOriginsForCors",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"allowedBeaconOrigins\": [\n    {\n      \"domainNameMatcher\": \"EQUALS\",\n      \"domainNamePattern\": \"dolore\"\n    },\n    {\n      \"domainNameMatcher\": \"STARTS_WITH\",\n      \"domainNamePattern\": \"aliquip tempor Lorem\"\n    }\n  ],\n  \"rejectBeaconsWithoutOriginHeader\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/allowedBeaconOriginsForCors/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allowedBeaconOriginsForCors",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "conditional Naming/{type}",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Lists the parameters of the specified naming rule",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conditionalNaming/:type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conditionalNaming",
										":type",
										":id"
									],
									"variable": [
										{
											"key": "type",
											"value": "host",
											"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
										},
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the required naming rule."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conditionalNaming/:type/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conditionalNaming",
												":type",
												":id"
											],
											"variable": [
												{
													"key": "type",
													"value": "host",
													"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
												},
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the required naming rule."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}"
								}
							]
						},
						{
							"name": "Updates the specified naming rule",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conditionalNaming/:type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conditionalNaming",
										":type",
										":id"
									],
									"variable": [
										{
											"key": "type",
											"value": "host",
											"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
										},
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the naming rule to be updated."
										}
									]
								},
								"description": "If the rule with the specified ID doesn't exist, a new rule will be created at the end of the rules list and will be the last to evaluate."
							},
							"response": [
								{
									"name": "Success. The naming rule has been created. The response contains the ID of the new rule.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conditionalNaming/:type/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conditionalNaming",
												":type",
												":id"
											],
											"variable": [
												{
													"key": "type",
													"value": "host",
													"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
												},
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the naming rule to be updated."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Success. The naming rule has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conditionalNaming/:type/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conditionalNaming",
												":type",
												":id"
											],
											"variable": [
												{
													"key": "type",
													"value": "host",
													"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
												},
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the naming rule to be updated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conditionalNaming/:type/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conditionalNaming",
												":type",
												":id"
											],
											"variable": [
												{
													"key": "type",
													"value": "host",
													"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
												},
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the naming rule to be updated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified naming rule",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/conditionalNaming/:type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conditionalNaming",
										":type",
										":id"
									],
									"variable": [
										{
											"key": "type",
											"value": "host",
											"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
										},
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the naming rule to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conditionalNaming/:type/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conditionalNaming",
												":type",
												":id"
											],
											"variable": [
												{
													"key": "type",
													"value": "host",
													"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
												},
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the naming rule to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /conditionalNaming/{type}/{id}` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conditionalNaming/:type/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conditionalNaming",
										":type",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "type",
											"value": "host",
											"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
										},
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the naming rule to be validated."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conditionalNaming/:type/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conditionalNaming",
												":type",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "type",
													"value": "host",
													"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
												},
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the naming rule to be validated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conditionalNaming/:type/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conditionalNaming",
												":type",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "type",
													"value": "host",
													"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
												},
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the naming rule to be validated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all configured naming rules of the specified type",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conditionalNaming/:type",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conditionalNaming",
								":type"
							],
							"variable": [
								{
									"key": "type",
									"value": "host",
									"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conditionalNaming/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conditionalNaming",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "host",
											"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new naming rule",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/conditionalNaming/:type",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conditionalNaming",
								":type"
							],
							"variable": [
								{
									"key": "type",
									"value": "host",
									"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
								}
							]
						},
						"description": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server."
					},
					"response": [
						{
							"name": "Success. The naming rule has been created. The response contains the ID of the new rule",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conditionalNaming/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conditionalNaming",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "host",
											"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conditionalNaming/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conditionalNaming",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "host",
											"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the `POST /conditionalNaming/{type}` request",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/conditionalNaming/:type/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conditionalNaming",
								":type",
								"validator"
							],
							"variable": [
								{
									"key": "type",
									"value": "host",
									"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
								}
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conditionalNaming/:type/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conditionalNaming",
										":type",
										"validator"
									],
									"variable": [
										{
											"key": "type",
											"value": "host",
											"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Host Naming Rule using Cores\",\n  \"enabled\": false,\n  \"nameFormat\": \"Host with {Host:CpuCores} cores\",\n  \"rules\": [\n    {\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"type\": \"PROCESS_GROUP\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"12345678-abcd-1234-abcd-1234567890ab\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conditionalNaming/:type/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conditionalNaming",
										":type",
										"validator"
									],
									"variable": [
										{
											"key": "type",
											"value": "host",
											"description": "(Required) The type of the rule, defined by the type of Dynatrace entities to which the rule applies."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "content Resources",
			"item": [
				{
					"name": "Gets the configuration of content resources",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/contentResources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contentResources"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contentResources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contentResources"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"resourceProviders\": [\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"occaecat in dolor\",\n      \"resourceType\": \"THIRD_PARTY_RESOURCES\",\n      \"brandIconUrl\": \"id officia pariatur\"\n    },\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"occaecat elit lab\",\n      \"resourceType\": \"FIRST_PARTY_RESOURCES\",\n      \"brandIconUrl\": \"officia minim fugiat\"\n    }\n  ],\n  \"resourceUrlCleanupRules\": [\n    {\n      \"regularExpression\": \"anim mollit\",\n      \"replaceWith\": \"nisi sunt occaecat\",\n      \"resourceName\": \"non incididunt dolor deserunt mollit\"\n    },\n    {\n      \"regularExpression\": \"et commodo ea\",\n      \"replaceWith\": \"ea officia\",\n      \"resourceName\": \"qui irure\"\n    }\n  ],\n  \"resourceTypes\": [\n    {\n      \"primaryResourceType\": \"OTHER\",\n      \"regularExpression\": \"enim eu\",\n      \"secondaryResourceType\": \"ullamco eu\"\n    },\n    {\n      \"primaryResourceType\": \"CSS\",\n      \"regularExpression\": \"Ut ipsum elit\",\n      \"secondaryResourceType\": \"exercitation ullamco Exc\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Updates the configuration of content resources",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"resourceProviders\": [\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"esse eu\",\n      \"resourceType\": \"FIRST_PARTY_RESOURCES\",\n      \"brandIconUrl\": \"mollit\"\n    },\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"nisi\",\n      \"resourceType\": \"CDN_RESOURCES\",\n      \"brandIconUrl\": \"commodo aliquip reprehenderit\"\n    }\n  ],\n  \"resourceUrlCleanupRules\": [\n    {\n      \"regularExpression\": \"voluptate commodo fugiat\",\n      \"replaceWith\": \"culpa aliquip\",\n      \"resourceName\": \"eu labore in qui reprehenderit\"\n    },\n    {\n      \"regularExpression\": \"eiusmod cupidatat sit nostrud qui\",\n      \"replaceWith\": \"quis sunt proident\",\n      \"resourceName\": \"dolor\"\n    }\n  ],\n  \"resourceTypes\": [\n    {\n      \"primaryResourceType\": \"OTHER\",\n      \"regularExpression\": \"nisi adipisicing\",\n      \"secondaryResourceType\": \"consectetur anim velit\"\n    },\n    {\n      \"primaryResourceType\": \"SCRIPT\",\n      \"regularExpression\": \"sunt veniam\",\n      \"secondaryResourceType\": \"esse in exercitation ea\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/contentResources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contentResources"
							]
						}
					},
					"response": [
						{
							"name": "Success. The configuration has been updated. Response doesn't have a body.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resourceProviders\": [\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"esse eu\",\n      \"resourceType\": \"FIRST_PARTY_RESOURCES\",\n      \"brandIconUrl\": \"mollit\"\n    },\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"nisi\",\n      \"resourceType\": \"CDN_RESOURCES\",\n      \"brandIconUrl\": \"commodo aliquip reprehenderit\"\n    }\n  ],\n  \"resourceUrlCleanupRules\": [\n    {\n      \"regularExpression\": \"voluptate commodo fugiat\",\n      \"replaceWith\": \"culpa aliquip\",\n      \"resourceName\": \"eu labore in qui reprehenderit\"\n    },\n    {\n      \"regularExpression\": \"eiusmod cupidatat sit nostrud qui\",\n      \"replaceWith\": \"quis sunt proident\",\n      \"resourceName\": \"dolor\"\n    }\n  ],\n  \"resourceTypes\": [\n    {\n      \"primaryResourceType\": \"OTHER\",\n      \"regularExpression\": \"nisi adipisicing\",\n      \"secondaryResourceType\": \"consectetur anim velit\"\n    },\n    {\n      \"primaryResourceType\": \"SCRIPT\",\n      \"regularExpression\": \"sunt veniam\",\n      \"secondaryResourceType\": \"esse in exercitation ea\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contentResources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contentResources"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resourceProviders\": [\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"esse eu\",\n      \"resourceType\": \"FIRST_PARTY_RESOURCES\",\n      \"brandIconUrl\": \"mollit\"\n    },\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"nisi\",\n      \"resourceType\": \"CDN_RESOURCES\",\n      \"brandIconUrl\": \"commodo aliquip reprehenderit\"\n    }\n  ],\n  \"resourceUrlCleanupRules\": [\n    {\n      \"regularExpression\": \"voluptate commodo fugiat\",\n      \"replaceWith\": \"culpa aliquip\",\n      \"resourceName\": \"eu labore in qui reprehenderit\"\n    },\n    {\n      \"regularExpression\": \"eiusmod cupidatat sit nostrud qui\",\n      \"replaceWith\": \"quis sunt proident\",\n      \"resourceName\": \"dolor\"\n    }\n  ],\n  \"resourceTypes\": [\n    {\n      \"primaryResourceType\": \"OTHER\",\n      \"regularExpression\": \"nisi adipisicing\",\n      \"secondaryResourceType\": \"consectetur anim velit\"\n    },\n    {\n      \"primaryResourceType\": \"SCRIPT\",\n      \"regularExpression\": \"sunt veniam\",\n      \"secondaryResourceType\": \"esse in exercitation ea\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contentResources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contentResources"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the `PUT /contentResources` request",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"resourceProviders\": [\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"esse eu\",\n      \"resourceType\": \"FIRST_PARTY_RESOURCES\",\n      \"brandIconUrl\": \"mollit\"\n    },\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"nisi\",\n      \"resourceType\": \"CDN_RESOURCES\",\n      \"brandIconUrl\": \"commodo aliquip reprehenderit\"\n    }\n  ],\n  \"resourceUrlCleanupRules\": [\n    {\n      \"regularExpression\": \"voluptate commodo fugiat\",\n      \"replaceWith\": \"culpa aliquip\",\n      \"resourceName\": \"eu labore in qui reprehenderit\"\n    },\n    {\n      \"regularExpression\": \"eiusmod cupidatat sit nostrud qui\",\n      \"replaceWith\": \"quis sunt proident\",\n      \"resourceName\": \"dolor\"\n    }\n  ],\n  \"resourceTypes\": [\n    {\n      \"primaryResourceType\": \"OTHER\",\n      \"regularExpression\": \"nisi adipisicing\",\n      \"secondaryResourceType\": \"consectetur anim velit\"\n    },\n    {\n      \"primaryResourceType\": \"SCRIPT\",\n      \"regularExpression\": \"sunt veniam\",\n      \"secondaryResourceType\": \"esse in exercitation ea\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/contentResources/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contentResources",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resourceProviders\": [\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"esse eu\",\n      \"resourceType\": \"FIRST_PARTY_RESOURCES\",\n      \"brandIconUrl\": \"mollit\"\n    },\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"nisi\",\n      \"resourceType\": \"CDN_RESOURCES\",\n      \"brandIconUrl\": \"commodo aliquip reprehenderit\"\n    }\n  ],\n  \"resourceUrlCleanupRules\": [\n    {\n      \"regularExpression\": \"voluptate commodo fugiat\",\n      \"replaceWith\": \"culpa aliquip\",\n      \"resourceName\": \"eu labore in qui reprehenderit\"\n    },\n    {\n      \"regularExpression\": \"eiusmod cupidatat sit nostrud qui\",\n      \"replaceWith\": \"quis sunt proident\",\n      \"resourceName\": \"dolor\"\n    }\n  ],\n  \"resourceTypes\": [\n    {\n      \"primaryResourceType\": \"OTHER\",\n      \"regularExpression\": \"nisi adipisicing\",\n      \"secondaryResourceType\": \"consectetur anim velit\"\n    },\n    {\n      \"primaryResourceType\": \"SCRIPT\",\n      \"regularExpression\": \"sunt veniam\",\n      \"secondaryResourceType\": \"esse in exercitation ea\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contentResources/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contentResources",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resourceProviders\": [\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"esse eu\",\n      \"resourceType\": \"FIRST_PARTY_RESOURCES\",\n      \"brandIconUrl\": \"mollit\"\n    },\n    {\n      \"domainNamePatterns\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"resourceName\": \"nisi\",\n      \"resourceType\": \"CDN_RESOURCES\",\n      \"brandIconUrl\": \"commodo aliquip reprehenderit\"\n    }\n  ],\n  \"resourceUrlCleanupRules\": [\n    {\n      \"regularExpression\": \"voluptate commodo fugiat\",\n      \"replaceWith\": \"culpa aliquip\",\n      \"resourceName\": \"eu labore in qui reprehenderit\"\n    },\n    {\n      \"regularExpression\": \"eiusmod cupidatat sit nostrud qui\",\n      \"replaceWith\": \"quis sunt proident\",\n      \"resourceName\": \"dolor\"\n    }\n  ],\n  \"resourceTypes\": [\n    {\n      \"primaryResourceType\": \"OTHER\",\n      \"regularExpression\": \"nisi adipisicing\",\n      \"secondaryResourceType\": \"consectetur anim velit\"\n    },\n    {\n      \"primaryResourceType\": \"SCRIPT\",\n      \"regularExpression\": \"sunt veniam\",\n      \"secondaryResourceType\": \"esse in exercitation ea\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contentResources/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contentResources",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "credentials",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the metadata of the specified credentials set",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The Dynatrace entity ID of the required credentials set."
										}
									]
								},
								"description": "The credentials set itself (username/certificate and password) is not included in the response."
							},
							"response": [
								{
									"name": "Success. The response contains the metadata of the credentials set.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required credentials set."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"credentialUsageSummary\": [\n    {\n      \"type\": \"magna nostrud velit\",\n      \"count\": -83396360\n    },\n    {\n      \"type\": \"est\",\n      \"count\": -32585630\n    }\n  ],\n  \"description\": \"eu nulla sunt\",\n  \"name\": \"exercitation ipsum\",\n  \"owner\": \"fugiat reprehenderit officia ut anim\",\n  \"ownerAccessOnly\": false,\n  \"type\": \"UNKNOWN\",\n  \"id\": \"non in voluptate\",\n  \"scope\": \"ALL\",\n  \"externalVault\": {\n    \"sourceAuthMethod\": \"AZURE_KEY_VAULT_CLIENT_SECRET\",\n    \"type\": \"AZURE_KEY_VAULT_CERTIFICATE\",\n    \"vaultUrl\": \"cillum ex\",\n    \"usernameSecretName\": \"velit aliquip\",\n    \"passwordSecretName\": \"pariatur magna id\"\n  }\n}"
								}
							]
						},
						{
							"name": "Updates the specified credentials set",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"cillum aute\",\n  \"scope\": \"SYNTHETIC\",\n  \"id\": \"ipsum ut\",\n  \"description\": \"mollit officia dolore occaecat cillum\",\n  \"ownerAccessOnly\": true,\n  \"type\": \"TOKEN\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The Dynatrace entity ID of the credentials set to be updated."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The new credentials set has been created. The response contains the ID of the set.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"cillum aute\",\n  \"scope\": \"SYNTHETIC\",\n  \"id\": \"ipsum ut\",\n  \"description\": \"mollit officia dolore occaecat cillum\",\n  \"ownerAccessOnly\": true,\n  \"type\": \"TOKEN\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the credentials set to be updated."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"credentialUsageSummary\": [\n    {\n      \"type\": \"magna nostrud velit\",\n      \"count\": -83396360\n    },\n    {\n      \"type\": \"est\",\n      \"count\": -32585630\n    }\n  ],\n  \"description\": \"eu nulla sunt\",\n  \"name\": \"exercitation ipsum\",\n  \"owner\": \"fugiat reprehenderit officia ut anim\",\n  \"ownerAccessOnly\": false,\n  \"type\": \"UNKNOWN\",\n  \"id\": \"non in voluptate\",\n  \"scope\": \"ALL\",\n  \"externalVault\": {\n    \"sourceAuthMethod\": \"AZURE_KEY_VAULT_CLIENT_SECRET\",\n    \"type\": \"AZURE_KEY_VAULT_CERTIFICATE\",\n    \"vaultUrl\": \"cillum ex\",\n    \"usernameSecretName\": \"velit aliquip\",\n    \"passwordSecretName\": \"pariatur magna id\"\n  }\n}"
								},
								{
									"name": "Success. The credentials set has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"cillum aute\",\n  \"scope\": \"SYNTHETIC\",\n  \"id\": \"ipsum ut\",\n  \"description\": \"mollit officia dolore occaecat cillum\",\n  \"ownerAccessOnly\": true,\n  \"type\": \"TOKEN\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the credentials set to be updated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"cillum aute\",\n  \"scope\": \"SYNTHETIC\",\n  \"id\": \"ipsum ut\",\n  \"description\": \"mollit officia dolore occaecat cillum\",\n  \"ownerAccessOnly\": true,\n  \"type\": \"TOKEN\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the credentials set to be updated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified credentials set",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the credentials set to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The credentials set has been deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the credentials set to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all sets of credentials for synthetic monitors stored in your environment",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/credentials?type=USERNAME_PASSWORD",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"credentials"
							],
							"query": [
								{
									"key": "type",
									"value": "USERNAME_PASSWORD",
									"description": "Filters the result by the specified credentials type."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/credentials?type=USERNAME_PASSWORD",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"credentials"
									],
									"query": [
										{
											"key": "type",
											"value": "USERNAME_PASSWORD"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"credentials\": [\n    {\n      \"credentialUsageSummary\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"description\": \"non amet Duis\",\n      \"name\": \"sint et esse consequat sit\",\n      \"owner\": \"sed ad\",\n      \"ownerAccessOnly\": true,\n      \"type\": \"PUBLIC_CERTIFICATE\",\n      \"id\": \"sit ea veniam consectetur cillum\",\n      \"scope\": \"EXTENSION\",\n      \"externalVault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"credentialUsageSummary\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"description\": \"id in commodo mollit cillum\",\n      \"name\": \"eiusmod esse sed\",\n      \"owner\": \"non Ut occaecat\",\n      \"ownerAccessOnly\": true,\n      \"type\": \"USERNAME_PASSWORD\",\n      \"id\": \"sint ipsum magna quis\",\n      \"scope\": \"EXTENSION\",\n      \"externalVault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new credentials set",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"cillum aute\",\n  \"scope\": \"SYNTHETIC\",\n  \"id\": \"ipsum ut\",\n  \"description\": \"mollit officia dolore occaecat cillum\",\n  \"ownerAccessOnly\": true,\n  \"type\": \"TOKEN\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"credentials"
							]
						},
						"description": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server."
					},
					"response": [
						{
							"name": "Success. The new credentials set has been created. The response contains the ID of the set.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"cillum aute\",\n  \"scope\": \"SYNTHETIC\",\n  \"id\": \"ipsum ut\",\n  \"description\": \"mollit officia dolore occaecat cillum\",\n  \"ownerAccessOnly\": true,\n  \"type\": \"TOKEN\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"credentials"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"credentialUsageSummary\": [\n    {\n      \"type\": \"magna nostrud velit\",\n      \"count\": -83396360\n    },\n    {\n      \"type\": \"est\",\n      \"count\": -32585630\n    }\n  ],\n  \"description\": \"eu nulla sunt\",\n  \"name\": \"exercitation ipsum\",\n  \"owner\": \"fugiat reprehenderit officia ut anim\",\n  \"ownerAccessOnly\": false,\n  \"type\": \"UNKNOWN\",\n  \"id\": \"non in voluptate\",\n  \"scope\": \"ALL\",\n  \"externalVault\": {\n    \"sourceAuthMethod\": \"AZURE_KEY_VAULT_CLIENT_SECRET\",\n    \"type\": \"AZURE_KEY_VAULT_CERTIFICATE\",\n    \"vaultUrl\": \"cillum ex\",\n    \"usernameSecretName\": \"velit aliquip\",\n    \"passwordSecretName\": \"pariatur magna id\"\n  }\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"cillum aute\",\n  \"scope\": \"SYNTHETIC\",\n  \"id\": \"ipsum ut\",\n  \"description\": \"mollit officia dolore occaecat cillum\",\n  \"ownerAccessOnly\": true,\n  \"type\": \"TOKEN\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"credentials"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "service",
			"item": [
				{
					"name": "custom Services/{technology}",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Gets the definition of the specified custom service",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/customServices/:technology/:id?includeProcessGroupReferences=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"customServices",
												":technology",
												":id"
											],
											"query": [
												{
													"key": "includeProcessGroupReferences",
													"value": "false",
													"description": "Flag to include process group references to the response. \n\n Process group references aren't compatible across environments. \n\n`false` is used if the value is not set."
												}
											],
											"variable": [
												{
													"key": "technology",
													"value": "dotNet",
													"description": "(Required) Technology of the custom service you're inquiring."
												},
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the custom service you're inquiring."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/customServices/:technology/:id?includeProcessGroupReferences=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"customServices",
														":technology",
														":id"
													],
													"query": [
														{
															"key": "includeProcessGroupReferences",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "technology",
															"value": "dotNet",
															"description": "(Required) Technology of the custom service you're inquiring."
														},
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the custom service you're inquiring."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}"
										}
									]
								},
								{
									"name": "Updates the specified custom service or create a new one.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/customServices/:technology/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"customServices",
												":technology",
												":id"
											],
											"variable": [
												{
													"key": "technology",
													"value": "dotNet",
													"description": "(Required) Technology of the custom service to update."
												},
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the custom service to update.\n\n The ID of the custom service in the body of the request must match this ID."
												}
											]
										},
										"description": "Will use the config's ´order´ attribute if supplied, otherwise keeps the order of the existing config or appends if no existing config with the supplied ID was found."
									},
									"response": [
										{
											"name": "Success. Custom service has been created. Response contains the new service's ID and name.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/customServices/:technology/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"customServices",
														":technology",
														":id"
													],
													"variable": [
														{
															"key": "technology",
															"value": "dotNet",
															"description": "(Required) Technology of the custom service to update."
														},
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the custom service to update.\n\n The ID of the custom service in the body of the request must match this ID."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Success. Custom service has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/customServices/:technology/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"customServices",
														":technology",
														":id"
													],
													"variable": [
														{
															"key": "technology",
															"value": "dotNet",
															"description": "(Required) Technology of the custom service to update."
														},
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the custom service to update.\n\n The ID of the custom service in the body of the request must match this ID."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/customServices/:technology/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"customServices",
														":technology",
														":id"
													],
													"variable": [
														{
															"key": "technology",
															"value": "dotNet",
															"description": "(Required) Technology of the custom service to update."
														},
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the custom service to update.\n\n The ID of the custom service in the body of the request must match this ID."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified custom service",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/service/customServices/:technology/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"customServices",
												":technology",
												":id"
											],
											"variable": [
												{
													"key": "technology",
													"value": "dotNet",
													"description": "(Required) Technology of the custom service to delete."
												},
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the custom service to delete."
												}
											]
										}
									},
									"response": [
										{
											"name": "Deleted. Response does not have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/customServices/:technology/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"customServices",
														":technology",
														":id"
													],
													"variable": [
														{
															"key": "technology",
															"value": "dotNet",
															"description": "(Required) Technology of the custom service to delete."
														},
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the custom service to delete."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Validate the new custom service for the `PUT /customServices/{technology}/{id}` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/customServices/:technology/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"customServices",
												":technology",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "technology",
													"value": "dotNet",
													"description": "(Required) Technology of the custom service to validate."
												},
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the custom service to validate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response does not have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/customServices/:technology/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"customServices",
														":technology",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "technology",
															"value": "dotNet",
															"description": "(Required) Technology of the custom service to validate."
														},
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the custom service to validate."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/customServices/:technology/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"customServices",
														":technology",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "technology",
															"value": "dotNet",
															"description": "(Required) Technology of the custom service to validate."
														},
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the custom service to validate."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all custom services of the specified technology",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service/customServices/:technology",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"customServices",
										":technology"
									],
									"variable": [
										{
											"key": "technology",
											"value": "dotNet",
											"description": "(Required) Technology of the required custom services."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/customServices/:technology",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"customServices",
												":technology"
											],
											"variable": [
												{
													"key": "technology",
													"value": "dotNet",
													"description": "(Required) Technology of the required custom services."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Creates a custom service",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service/customServices/:technology?position=APPEND",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"customServices",
										":technology"
									],
									"query": [
										{
											"key": "position",
											"value": "APPEND",
											"description": "Order of the new custom service. Set to `PREPEND` to prepend it to the list, `APPEND` to append it. Defaults to `APPEND`."
										}
									],
									"variable": [
										{
											"key": "technology",
											"value": "dotNet",
											"description": "(Required) Technology of the new custom service."
										}
									]
								},
								"description": "In the body of the request, neither custom service nor its rules can have the ID. All IDs will be generated automatically by Dynatrace."
							},
							"response": [
								{
									"name": "Success. The custom service has been created. Response contains the new service's ID and name.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/customServices/:technology?position=APPEND",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"customServices",
												":technology"
											],
											"query": [
												{
													"key": "position",
													"value": "APPEND"
												}
											],
											"variable": [
												{
													"key": "technology",
													"value": "dotNet",
													"description": "(Required) Technology of the new custom service."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/customServices/:technology?position=APPEND",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"customServices",
												":technology"
											],
											"query": [
												{
													"key": "position",
													"value": "APPEND"
												}
											],
											"variable": [
												{
													"key": "technology",
													"value": "dotNet",
													"description": "(Required) Technology of the new custom service."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Reorders the custom services of the specified technology",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service/customServices/:technology/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"customServices",
										":technology",
										"order"
									],
									"variable": [
										{
											"key": "technology",
											"value": "dotNet",
											"description": "(Required) Technology of custom services to update."
										}
									]
								},
								"description": "This request reorders the custom services of the specified technology according to the given list of IDs. Custom services not present in the body of the request will retain their relative ordering but will be ordered *after* all those present in the request."
							},
							"response": [
								{
									"name": "Success. Custom services have been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/customServices/:technology/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"customServices",
												":technology",
												"order"
											],
											"variable": [
												{
													"key": "technology",
													"value": "dotNet",
													"description": "(Required) Technology of custom services to update."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/customServices/:technology/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"customServices",
												":technology",
												"order"
											],
											"variable": [
												{
													"key": "technology",
													"value": "dotNet",
													"description": "(Required) Technology of custom services to update."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validate the new custom service for the `POST /customServices/{technology}` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service/customServices/:technology/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"customServices",
										":technology",
										"validator"
									],
									"variable": [
										{
											"key": "technology",
											"value": "dotNet",
											"description": "(Required) Technology of the custom service to validate."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response does not have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/customServices/:technology/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"customServices",
												":technology",
												"validator"
											],
											"variable": [
												{
													"key": "technology",
													"value": "dotNet",
													"description": "(Required) Technology of the custom service to validate."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"CustomService\",\n  \"enabled\": true,\n  \"rules\": [\n    {\n      \"enabled\": true,\n      \"className\": \"com.your.company.ClassName\",\n      \"methodRules\": [\n        {\n          \"methodName\": \"AMethod\",\n          \"argumentTypes\": [\n            \"java.lang.String\"\n          ],\n          \"returnType\": \"void\"\n        }\n      ]\n    }\n  ],\n  \"queueEntryPoint\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/customServices/:technology/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"customServices",
												":technology",
												"validator"
											],
											"variable": [
												{
													"key": "technology",
													"value": "dotNet",
													"description": "(Required) Technology of the custom service to validate."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "failure Detection/parameter Selection",
					"item": [
						{
							"name": "parameter Sets",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Gets the specified failure detection parameter set | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"parameterSets",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required failure detection parameter set."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"parameterSets",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection parameter set."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"consectetur incididunt deser\",\n  \"name\": \"nisi tempor\",\n  \"description\": \"non fugiat\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"tempor consequat\",\n  \"failingHttpCodesServerSide\": \"dolor sit\",\n  \"http404NotFoundFailureEnabled\": true,\n  \"brokenLinkDomains\": [\n    \"cupidatat Excepteur in\",\n    \"occaecat aliquip\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"nulla quis aute sint\",\n      \"messagePattern\": \"aliquip anim ut cillum cupidatat\"\n    },\n    {\n      \"classPattern\": \"amet labore qui aliqua\",\n      \"messagePattern\": \"labore adipisicing\"\n    }\n  ],\n  \"ignoredExceptionPatterns\": [\n    {\n      \"classPattern\": \"Lorem q\",\n      \"messagePattern\": \"proident occaecat anim\"\n    },\n    {\n      \"classPattern\": \"quis dolor\",\n      \"messagePattern\": \"enim incididunt labore in\"\n    }\n  ],\n  \"exceptionOnAnyNodeExceptionPatterns\": [\n    {\n      \"classPattern\": \"in non aliquip esse\",\n      \"messagePattern\": \"laborum quis\"\n    },\n    {\n      \"classPattern\": \"pariatur Excepteur sed deserunt cillum\",\n      \"messagePattern\": \"mollit Lorem ea nulla adipisicing\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"incididunt ex occaecat exercitation\"\n    },\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"eiusmod nostrud ea\"\n    }\n  ]\n}"
												},
												{
													"name": "Failed. The specified entity doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"parameterSets",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection parameter set."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates the specified failure detection parameter set | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"consectetur incididunt deser\",\n  \"name\": \"nisi tempor\",\n  \"description\": \"non fugiat\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"tempor consequat\",\n  \"failingHttpCodesServerSide\": \"dolor sit\",\n  \"http404NotFoundFailureEnabled\": true,\n  \"brokenLinkDomains\": [\n    \"cupidatat Excepteur in\",\n    \"occaecat aliquip\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"nulla quis aute sint\",\n      \"messagePattern\": \"aliquip anim ut cillum cupidatat\"\n    },\n    {\n      \"classPattern\": \"amet labore qui aliqua\",\n      \"messagePattern\": \"labore adipisicing\"\n    }\n  ],\n  \"ignoredExceptionPatterns\": [\n    {\n      \"classPattern\": \"Lorem q\",\n      \"messagePattern\": \"proident occaecat anim\"\n    },\n    {\n      \"classPattern\": \"quis dolor\",\n      \"messagePattern\": \"enim incididunt labore in\"\n    }\n  ],\n  \"exceptionOnAnyNodeExceptionPatterns\": [\n    {\n      \"classPattern\": \"in non aliquip esse\",\n      \"messagePattern\": \"laborum quis\"\n    },\n    {\n      \"classPattern\": \"pariatur Excepteur sed deserunt cillum\",\n      \"messagePattern\": \"mollit Lorem ea nulla adipisicing\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"incididunt ex occaecat exercitation\"\n    },\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"eiusmod nostrud ea\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"parameterSets",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required failure detection parameter set."
														}
													]
												},
												"description": "If a set with the specified ID doesn't exist, a new one is created."
											},
											"response": [
												{
													"name": "Success. The new failure detection parameter set has been created. The response contains the ID of the new set.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"consectetur incididunt deser\",\n  \"name\": \"nisi tempor\",\n  \"description\": \"non fugiat\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"tempor consequat\",\n  \"failingHttpCodesServerSide\": \"dolor sit\",\n  \"http404NotFoundFailureEnabled\": true,\n  \"brokenLinkDomains\": [\n    \"cupidatat Excepteur in\",\n    \"occaecat aliquip\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"nulla quis aute sint\",\n      \"messagePattern\": \"aliquip anim ut cillum cupidatat\"\n    },\n    {\n      \"classPattern\": \"amet labore qui aliqua\",\n      \"messagePattern\": \"labore adipisicing\"\n    }\n  ],\n  \"ignoredExceptionPatterns\": [\n    {\n      \"classPattern\": \"Lorem q\",\n      \"messagePattern\": \"proident occaecat anim\"\n    },\n    {\n      \"classPattern\": \"quis dolor\",\n      \"messagePattern\": \"enim incididunt labore in\"\n    }\n  ],\n  \"exceptionOnAnyNodeExceptionPatterns\": [\n    {\n      \"classPattern\": \"in non aliquip esse\",\n      \"messagePattern\": \"laborum quis\"\n    },\n    {\n      \"classPattern\": \"pariatur Excepteur sed deserunt cillum\",\n      \"messagePattern\": \"mollit Lorem ea nulla adipisicing\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"incididunt ex occaecat exercitation\"\n    },\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"eiusmod nostrud ea\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"parameterSets",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection parameter set."
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
												},
												{
													"name": "Success. The failure detection parameter set has been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"consectetur incididunt deser\",\n  \"name\": \"nisi tempor\",\n  \"description\": \"non fugiat\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"tempor consequat\",\n  \"failingHttpCodesServerSide\": \"dolor sit\",\n  \"http404NotFoundFailureEnabled\": true,\n  \"brokenLinkDomains\": [\n    \"cupidatat Excepteur in\",\n    \"occaecat aliquip\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"nulla quis aute sint\",\n      \"messagePattern\": \"aliquip anim ut cillum cupidatat\"\n    },\n    {\n      \"classPattern\": \"amet labore qui aliqua\",\n      \"messagePattern\": \"labore adipisicing\"\n    }\n  ],\n  \"ignoredExceptionPatterns\": [\n    {\n      \"classPattern\": \"Lorem q\",\n      \"messagePattern\": \"proident occaecat anim\"\n    },\n    {\n      \"classPattern\": \"quis dolor\",\n      \"messagePattern\": \"enim incididunt labore in\"\n    }\n  ],\n  \"exceptionOnAnyNodeExceptionPatterns\": [\n    {\n      \"classPattern\": \"in non aliquip esse\",\n      \"messagePattern\": \"laborum quis\"\n    },\n    {\n      \"classPattern\": \"pariatur Excepteur sed deserunt cillum\",\n      \"messagePattern\": \"mollit Lorem ea nulla adipisicing\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"incididunt ex occaecat exercitation\"\n    },\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"eiusmod nostrud ea\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"parameterSets",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection parameter set."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"consectetur incididunt deser\",\n  \"name\": \"nisi tempor\",\n  \"description\": \"non fugiat\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"tempor consequat\",\n  \"failingHttpCodesServerSide\": \"dolor sit\",\n  \"http404NotFoundFailureEnabled\": true,\n  \"brokenLinkDomains\": [\n    \"cupidatat Excepteur in\",\n    \"occaecat aliquip\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"nulla quis aute sint\",\n      \"messagePattern\": \"aliquip anim ut cillum cupidatat\"\n    },\n    {\n      \"classPattern\": \"amet labore qui aliqua\",\n      \"messagePattern\": \"labore adipisicing\"\n    }\n  ],\n  \"ignoredExceptionPatterns\": [\n    {\n      \"classPattern\": \"Lorem q\",\n      \"messagePattern\": \"proident occaecat anim\"\n    },\n    {\n      \"classPattern\": \"quis dolor\",\n      \"messagePattern\": \"enim incididunt labore in\"\n    }\n  ],\n  \"exceptionOnAnyNodeExceptionPatterns\": [\n    {\n      \"classPattern\": \"in non aliquip esse\",\n      \"messagePattern\": \"laborum quis\"\n    },\n    {\n      \"classPattern\": \"pariatur Excepteur sed deserunt cillum\",\n      \"messagePattern\": \"mollit Lorem ea nulla adipisicing\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"incididunt ex occaecat exercitation\"\n    },\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"eiusmod nostrud ea\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"parameterSets",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection parameter set."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified failure detection parameter set | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"parameterSets",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required failure detection parameter set."
														}
													]
												},
												"description": "You cannot delete the set that is used by any failure detection rule. \n\nIf you need to delete such a set, switch the rule to a new set or delete the rule first."
											},
											"response": [
												{
													"name": "Success. The failure detection parameter set has been deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"parameterSets",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection parameter set."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The specified entity doesn't exist.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"parameterSets",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection parameter set."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Changes the ID of the specified failure detection parameter set | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"aliqua\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id/changeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"parameterSets",
														":id",
														"changeId"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required failure detection parameter set."
														}
													]
												},
												"description": "Rules that use the set will be automatically adapted to the new ID."
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"aliqua\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id/changeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"parameterSets",
																":id",
																"changeId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection parameter set."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"aliqua\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id/changeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"parameterSets",
																":id",
																"changeId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection parameter set."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Validates the payload for the `PUT /service/failureDetection/parameterSelection/parameterSets/{id}` request | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"consectetur incididunt deser\",\n  \"name\": \"nisi tempor\",\n  \"description\": \"non fugiat\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"tempor consequat\",\n  \"failingHttpCodesServerSide\": \"dolor sit\",\n  \"http404NotFoundFailureEnabled\": true,\n  \"brokenLinkDomains\": [\n    \"cupidatat Excepteur in\",\n    \"occaecat aliquip\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"nulla quis aute sint\",\n      \"messagePattern\": \"aliquip anim ut cillum cupidatat\"\n    },\n    {\n      \"classPattern\": \"amet labore qui aliqua\",\n      \"messagePattern\": \"labore adipisicing\"\n    }\n  ],\n  \"ignoredExceptionPatterns\": [\n    {\n      \"classPattern\": \"Lorem q\",\n      \"messagePattern\": \"proident occaecat anim\"\n    },\n    {\n      \"classPattern\": \"quis dolor\",\n      \"messagePattern\": \"enim incididunt labore in\"\n    }\n  ],\n  \"exceptionOnAnyNodeExceptionPatterns\": [\n    {\n      \"classPattern\": \"in non aliquip esse\",\n      \"messagePattern\": \"laborum quis\"\n    },\n    {\n      \"classPattern\": \"pariatur Excepteur sed deserunt cillum\",\n      \"messagePattern\": \"mollit Lorem ea nulla adipisicing\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"incididunt ex occaecat exercitation\"\n    },\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"eiusmod nostrud ea\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"parameterSets",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required failure detection parameter set."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"consectetur incididunt deser\",\n  \"name\": \"nisi tempor\",\n  \"description\": \"non fugiat\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"tempor consequat\",\n  \"failingHttpCodesServerSide\": \"dolor sit\",\n  \"http404NotFoundFailureEnabled\": true,\n  \"brokenLinkDomains\": [\n    \"cupidatat Excepteur in\",\n    \"occaecat aliquip\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"nulla quis aute sint\",\n      \"messagePattern\": \"aliquip anim ut cillum cupidatat\"\n    },\n    {\n      \"classPattern\": \"amet labore qui aliqua\",\n      \"messagePattern\": \"labore adipisicing\"\n    }\n  ],\n  \"ignoredExceptionPatterns\": [\n    {\n      \"classPattern\": \"Lorem q\",\n      \"messagePattern\": \"proident occaecat anim\"\n    },\n    {\n      \"classPattern\": \"quis dolor\",\n      \"messagePattern\": \"enim incididunt labore in\"\n    }\n  ],\n  \"exceptionOnAnyNodeExceptionPatterns\": [\n    {\n      \"classPattern\": \"in non aliquip esse\",\n      \"messagePattern\": \"laborum quis\"\n    },\n    {\n      \"classPattern\": \"pariatur Excepteur sed deserunt cillum\",\n      \"messagePattern\": \"mollit Lorem ea nulla adipisicing\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"incididunt ex occaecat exercitation\"\n    },\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"eiusmod nostrud ea\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"parameterSets",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection parameter set."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"consectetur incididunt deser\",\n  \"name\": \"nisi tempor\",\n  \"description\": \"non fugiat\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"tempor consequat\",\n  \"failingHttpCodesServerSide\": \"dolor sit\",\n  \"http404NotFoundFailureEnabled\": true,\n  \"brokenLinkDomains\": [\n    \"cupidatat Excepteur in\",\n    \"occaecat aliquip\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"nulla quis aute sint\",\n      \"messagePattern\": \"aliquip anim ut cillum cupidatat\"\n    },\n    {\n      \"classPattern\": \"amet labore qui aliqua\",\n      \"messagePattern\": \"labore adipisicing\"\n    }\n  ],\n  \"ignoredExceptionPatterns\": [\n    {\n      \"classPattern\": \"Lorem q\",\n      \"messagePattern\": \"proident occaecat anim\"\n    },\n    {\n      \"classPattern\": \"quis dolor\",\n      \"messagePattern\": \"enim incididunt labore in\"\n    }\n  ],\n  \"exceptionOnAnyNodeExceptionPatterns\": [\n    {\n      \"classPattern\": \"in non aliquip esse\",\n      \"messagePattern\": \"laborum quis\"\n    },\n    {\n      \"classPattern\": \"pariatur Excepteur sed deserunt cillum\",\n      \"messagePattern\": \"mollit Lorem ea nulla adipisicing\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"incididunt ex occaecat exercitation\"\n    },\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"eiusmod nostrud ea\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"parameterSets",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection parameter set."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists all available failure detection parameter sets | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"failureDetection",
												"parameterSelection",
												"parameterSets"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"parameterSets"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Creates a new failure detection parameter set | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"400-599\",\n  \"failingHttpCodesServerSide\": \"500-599\",\n  \"http404NotFoundFailureEnabled\": false,\n  \"brokenLinkDomains\": [\n    \"mydomain.com\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"NullPointerException\",\n      \"messagePattern\": \"\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"tagKey\": \"myTag\",\n      \"predicate\": {\n        \"type\": \"STRING_EQUALS\",\n        \"value\": \"NG\",\n        \"ignoreCase\": true\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"failureDetection",
												"parameterSelection",
												"parameterSets"
											]
										}
									},
									"response": [
										{
											"name": "Success. The new failure detection parameter set has been created. The response contains the ID of the new set.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"consectetur incididunt deser\",\n  \"name\": \"nisi tempor\",\n  \"description\": \"non fugiat\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"tempor consequat\",\n  \"failingHttpCodesServerSide\": \"dolor sit\",\n  \"http404NotFoundFailureEnabled\": true,\n  \"brokenLinkDomains\": [\n    \"cupidatat Excepteur in\",\n    \"occaecat aliquip\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"nulla quis aute sint\",\n      \"messagePattern\": \"aliquip anim ut cillum cupidatat\"\n    },\n    {\n      \"classPattern\": \"amet labore qui aliqua\",\n      \"messagePattern\": \"labore adipisicing\"\n    }\n  ],\n  \"ignoredExceptionPatterns\": [\n    {\n      \"classPattern\": \"Lorem q\",\n      \"messagePattern\": \"proident occaecat anim\"\n    },\n    {\n      \"classPattern\": \"quis dolor\",\n      \"messagePattern\": \"enim incididunt labore in\"\n    }\n  ],\n  \"exceptionOnAnyNodeExceptionPatterns\": [\n    {\n      \"classPattern\": \"in non aliquip esse\",\n      \"messagePattern\": \"laborum quis\"\n    },\n    {\n      \"classPattern\": \"pariatur Excepteur sed deserunt cillum\",\n      \"messagePattern\": \"mollit Lorem ea nulla adipisicing\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"incididunt ex occaecat exercitation\"\n    },\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"eiusmod nostrud ea\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"parameterSets"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"consectetur incididunt deser\",\n  \"name\": \"nisi tempor\",\n  \"description\": \"non fugiat\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"tempor consequat\",\n  \"failingHttpCodesServerSide\": \"dolor sit\",\n  \"http404NotFoundFailureEnabled\": true,\n  \"brokenLinkDomains\": [\n    \"cupidatat Excepteur in\",\n    \"occaecat aliquip\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"nulla quis aute sint\",\n      \"messagePattern\": \"aliquip anim ut cillum cupidatat\"\n    },\n    {\n      \"classPattern\": \"amet labore qui aliqua\",\n      \"messagePattern\": \"labore adipisicing\"\n    }\n  ],\n  \"ignoredExceptionPatterns\": [\n    {\n      \"classPattern\": \"Lorem q\",\n      \"messagePattern\": \"proident occaecat anim\"\n    },\n    {\n      \"classPattern\": \"quis dolor\",\n      \"messagePattern\": \"enim incididunt labore in\"\n    }\n  ],\n  \"exceptionOnAnyNodeExceptionPatterns\": [\n    {\n      \"classPattern\": \"in non aliquip esse\",\n      \"messagePattern\": \"laborum quis\"\n    },\n    {\n      \"classPattern\": \"pariatur Excepteur sed deserunt cillum\",\n      \"messagePattern\": \"mollit Lorem ea nulla adipisicing\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"incididunt ex occaecat exercitation\"\n    },\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"eiusmod nostrud ea\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"parameterSets"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /service/failureDetection/parameterSelection/parameterSets` request | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"consectetur incididunt deser\",\n  \"name\": \"nisi tempor\",\n  \"description\": \"non fugiat\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"tempor consequat\",\n  \"failingHttpCodesServerSide\": \"dolor sit\",\n  \"http404NotFoundFailureEnabled\": true,\n  \"brokenLinkDomains\": [\n    \"cupidatat Excepteur in\",\n    \"occaecat aliquip\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"nulla quis aute sint\",\n      \"messagePattern\": \"aliquip anim ut cillum cupidatat\"\n    },\n    {\n      \"classPattern\": \"amet labore qui aliqua\",\n      \"messagePattern\": \"labore adipisicing\"\n    }\n  ],\n  \"ignoredExceptionPatterns\": [\n    {\n      \"classPattern\": \"Lorem q\",\n      \"messagePattern\": \"proident occaecat anim\"\n    },\n    {\n      \"classPattern\": \"quis dolor\",\n      \"messagePattern\": \"enim incididunt labore in\"\n    }\n  ],\n  \"exceptionOnAnyNodeExceptionPatterns\": [\n    {\n      \"classPattern\": \"in non aliquip esse\",\n      \"messagePattern\": \"laborum quis\"\n    },\n    {\n      \"classPattern\": \"pariatur Excepteur sed deserunt cillum\",\n      \"messagePattern\": \"mollit Lorem ea nulla adipisicing\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"incididunt ex occaecat exercitation\"\n    },\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"eiusmod nostrud ea\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"failureDetection",
												"parameterSelection",
												"parameterSets",
												"validator"
											]
										}
									},
									"response": [
										{
											"name": "Success. The configuration has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"consectetur incididunt deser\",\n  \"name\": \"nisi tempor\",\n  \"description\": \"non fugiat\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"tempor consequat\",\n  \"failingHttpCodesServerSide\": \"dolor sit\",\n  \"http404NotFoundFailureEnabled\": true,\n  \"brokenLinkDomains\": [\n    \"cupidatat Excepteur in\",\n    \"occaecat aliquip\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"nulla quis aute sint\",\n      \"messagePattern\": \"aliquip anim ut cillum cupidatat\"\n    },\n    {\n      \"classPattern\": \"amet labore qui aliqua\",\n      \"messagePattern\": \"labore adipisicing\"\n    }\n  ],\n  \"ignoredExceptionPatterns\": [\n    {\n      \"classPattern\": \"Lorem q\",\n      \"messagePattern\": \"proident occaecat anim\"\n    },\n    {\n      \"classPattern\": \"quis dolor\",\n      \"messagePattern\": \"enim incididunt labore in\"\n    }\n  ],\n  \"exceptionOnAnyNodeExceptionPatterns\": [\n    {\n      \"classPattern\": \"in non aliquip esse\",\n      \"messagePattern\": \"laborum quis\"\n    },\n    {\n      \"classPattern\": \"pariatur Excepteur sed deserunt cillum\",\n      \"messagePattern\": \"mollit Lorem ea nulla adipisicing\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"incididunt ex occaecat exercitation\"\n    },\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"eiusmod nostrud ea\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"parameterSets",
														"validator"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"consectetur incididunt deser\",\n  \"name\": \"nisi tempor\",\n  \"description\": \"non fugiat\",\n  \"clientSideMissingHttpCodeIsFailure\": false,\n  \"serverSideMissingHttpCodeIsFailure\": false,\n  \"failingHttpCodesClientSide\": \"tempor consequat\",\n  \"failingHttpCodesServerSide\": \"dolor sit\",\n  \"http404NotFoundFailureEnabled\": true,\n  \"brokenLinkDomains\": [\n    \"cupidatat Excepteur in\",\n    \"occaecat aliquip\"\n  ],\n  \"successForcingExceptionPatterns\": [\n    {\n      \"classPattern\": \"nulla quis aute sint\",\n      \"messagePattern\": \"aliquip anim ut cillum cupidatat\"\n    },\n    {\n      \"classPattern\": \"amet labore qui aliqua\",\n      \"messagePattern\": \"labore adipisicing\"\n    }\n  ],\n  \"ignoredExceptionPatterns\": [\n    {\n      \"classPattern\": \"Lorem q\",\n      \"messagePattern\": \"proident occaecat anim\"\n    },\n    {\n      \"classPattern\": \"quis dolor\",\n      \"messagePattern\": \"enim incididunt labore in\"\n    }\n  ],\n  \"exceptionOnAnyNodeExceptionPatterns\": [\n    {\n      \"classPattern\": \"in non aliquip esse\",\n      \"messagePattern\": \"laborum quis\"\n    },\n    {\n      \"classPattern\": \"pariatur Excepteur sed deserunt cillum\",\n      \"messagePattern\": \"mollit Lorem ea nulla adipisicing\"\n    }\n  ],\n  \"tagConditions\": [\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"incididunt ex occaecat exercitation\"\n    },\n    {\n      \"predicate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagKey\": \"eiusmod nostrud ea\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/parameterSets/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"parameterSets",
														"validator"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "rules",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Gets the properties of the specified rule | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"rules",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required failure detection rule. "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"rules",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection rule. "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}"
												},
												{
													"name": "Failed. The specified entity doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"rules",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection rule. "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates the specified failure detection rule rule | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"rules",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required failure detection rule. "
														}
													]
												},
												"description": "If a rule with the specified ID doesn't exist, a new one is created and appended to the end of the rule list. \n\nRules are evaluated from top to bottom, the first matching rule applies.To enforce a particular order use the reorder request. \n\nThe failure detection parameter set used by the rule must exist at the time of rule creation."
											},
											"response": [
												{
													"name": "Success. The new failure detection rule has been created. The response contains the ID of the new rule.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"rules",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection rule. "
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
												},
												{
													"name": "Success. The failure detection rule has been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"rules",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection rule. "
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"rules",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection rule. "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified failure detection rule | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"rules",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required failure detection rule. "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The failure detection rule has been deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"rules",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection rule. "
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The specified entity doesn't exist.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"rules",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection rule. "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Changes the ID of the specified rule | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"aliqua\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id/changeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"rules",
														":id",
														"changeId"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required failure detection rule. "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"aliqua\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id/changeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"rules",
																":id",
																"changeId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection rule. "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"aliqua\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id/changeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"rules",
																":id",
																"changeId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection rule. "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Validates the payload for the `PUT /service/failureDetection/parameterSelection/rules/{id}` request | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"rules",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required failure detection rule. "
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"rules",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection rule. "
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"failureDetection",
																"parameterSelection",
																"rules",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required failure detection rule. "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists all available failure detection rules | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"failureDetection",
												"parameterSelection",
												"rules"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"rules"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Creates a new failure detection rule | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"failureDetection",
												"parameterSelection",
												"rules"
											]
										},
										"description": "The new rule is appended to the end of the rule list. \n\nRules are evaluated from top to bottom, the first matching rule applies.To enforce a particular order use the reorder request. \n\nThe failure detection parameter set used by the rule must exist at the time of rule creation."
									},
									"response": [
										{
											"name": "Success. The new failure detection rule has been created. The response contains the ID of the new rule.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"rules"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"rules"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Reorders failure detection rules | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ruleIds\": [\n    \"minim enim\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/reorderRules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"failureDetection",
												"parameterSelection",
												"rules",
												"reorderRules"
											]
										},
										"description": "Rules are evaluated from top to bottom, the first matching rule applies."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ruleIds\": [\n    \"minim enim\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/reorderRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"rules",
														"reorderRules"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ruleIds\": [\n    \"minim enim\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/reorderRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"rules",
														"reorderRules"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /service/failureDetection/parameterSelection/rules` request | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"failureDetection",
												"parameterSelection",
												"rules",
												"validator"
											]
										}
									},
									"response": [
										{
											"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"rules",
														"validator"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"shipping\",\n  \"description\": \"for requests from shipping module\",\n  \"enabled\": true,\n  \"fdpId\": \"FDP_9\",\n  \"conditions\": [\n    {\n      \"attribute\": \"SERVICE_NAME\",\n      \"predicate\": {\n        \"type\": \"STRING_STARTS_WITH\",\n        \"ignoreCase\": false,\n        \"values\": [\n          \"shp\",\n          \"stg_shp\"\n        ]\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/failureDetection/parameterSelection/rules/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"failureDetection",
														"parameterSelection",
														"rules",
														"validator"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "ibm MQ Tracing",
					"item": [
						{
							"name": "ims Entry Queue",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Gets the properties of the specified IBM IMS entry queue",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"imsEntryQueue",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the required IBM IMS entry queue."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"imsEntryQueue",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the required IBM IMS entry queue."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}"
												}
											]
										},
										{
											"name": "Updates an existing IBM IMS entry queue or creates a new one",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"imsEntryQueue",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the IBM IMS entry queue to update.\n\n If you set the ID in the body as well, it must match this ID."
														}
													]
												},
												"description": "If the IBM IMS entry queue with the specified ID does not exist, a new IBM IMS entry queue will be created."
											},
											"response": [
												{
													"name": "Success. The new IBM IMS entry queue has been created. The response body contains the ID and name of the created IBM IMS entry queue.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"imsEntryQueue",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the IBM IMS entry queue to update.\n\n If you set the ID in the body as well, it must match this ID."
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
												},
												{
													"name": "Success. The IBM IMS entry queue has been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"imsEntryQueue",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the IBM IMS entry queue to update.\n\n If you set the ID in the body as well, it must match this ID."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"imsEntryQueue",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the IBM IMS entry queue to update.\n\n If you set the ID in the body as well, it must match this ID."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified IBM IMS entry queue",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"imsEntryQueue",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the IBM IMS entry queue to be deleted."
														}
													]
												}
											},
											"response": [
												{
													"name": "Deleted. Response does not have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"imsEntryQueue",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the IBM IMS entry queue to be deleted."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Validates update of existing IBM IMS entry queues for the `PUT /service/ibmMQTracing/imsEntryQueue/{id}` request",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"imsEntryQueue",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the IBM IMS entry queue to validate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Validated. The submitted configuration is valid. Response does not have a body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"imsEntryQueue",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the IBM IMS entry queue to validate."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"imsEntryQueue",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the IBM IMS entry queue to validate."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists all IBM IMS entry queues",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"ibmMQTracing",
												"imsEntryQueue"
											]
										},
										"description": "This endpoint is used to provide Dynatrace with all IBM MQ queues (defined by QueueManagerName and QueueName) which are used to send messages to IBM IMS on the mainframe. \n\n This is required to facilitate end to end tracing for messages sent via IBM MQ to IBM IMS."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"imsEntryQueue"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Creates an IBM IMS entry queue",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"ibmMQTracing",
												"imsEntryQueue"
											]
										},
										"description": "The body must not provide an ID as it will be automatically assigned by the Dynatrace server."
									},
									"response": [
										{
											"name": "Success. The IBM IMS entry queue has been created. The response body contains the generated ID.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"imsEntryQueue"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"imsEntryQueue"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates new IBM IMS entry queues for the `POST /service/ibmMQTracing/imsEntryQueue` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"ibmMQTracing",
												"imsEntryQueue",
												"validator"
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response does not have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"imsEntryQueue",
														"validator"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"queueManagerName\": \"MyQueueManagerName\",\n  \"queueName\": \"MyQueueName\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/imsEntryQueue/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"imsEntryQueue",
														"validator"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "queue Manager",
							"item": [
								{
									"name": "{name}",
									"item": [
										{
											"name": "Gets the parameters of the specified queue manager",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/queueManager/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"queueManager",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "aliqua",
															"description": "(Required) The name of the queue manager you're inquiring."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/queueManager/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"queueManager",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "aliqua",
																	"description": "(Required) The name of the queue manager you're inquiring."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"aliasQueues\": [\n    {\n      \"aliasQueue\": \"irure veniam\",\n      \"baseQueue\": \"et nisi amet in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea\",\n      \"baseQueue\": \"dolor nulla tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ipsum eiusmod\",\n      \"baseQueue\": \"anim nostrud in exercitation nisi\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip Ut et\",\n      \"baseQueue\": \"quis mollit null\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"esse nulla sunt in laborum\",\n      \"baseQueue\": \"Duis in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliqua nostrud\",\n      \"baseQueue\": \"esse minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"nulla\",\n      \"baseQueue\": \"consequat ad\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"est occaecat velit aliqua\",\n      \"baseQueue\": \"dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"anim consectetur\",\n      \"baseQueue\": \"elit consequat\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea labore\",\n      \"baseQueue\": \"id adipisicing laborum\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"quis ex ut \",\n      \"baseQueue\": \"pariatur Excepteur tempor dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"dolor nisi mollit\",\n      \"baseQueue\": \"culpa ex magna dolore tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"adipisicing aliquip\",\n      \"baseQueue\": \"minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"in ipsum\",\n      \"baseQueue\": \"officia ut in aliqua\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"minim nostrud culpa\",\n      \"baseQueue\": \"proident non sed\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"irure \",\n      \"baseQueue\": \"Duis\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip reprehenderit\",\n      \"baseQueue\": \"consectetur\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"eiusmod\",\n      \"baseQueue\": \"non\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"consectetur\",\n      \"baseQueue\": \"do pariatur velit eiusmod\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"veniam ad do\",\n      \"baseQueue\": \"laboris irure\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"clusterQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in ad Ut aliquip cupidatat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"elit aliquip\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"consectetur aliqua sint esse\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"id ea nisi voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"nostrud sed mollit dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ad aliquip sunt nisi\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in enim\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"culpa cillum dolor Excepteur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"tempor laborum esse consequat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"Excepteur sed mollit dolor consectetur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"mollit est do laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ea minim tempor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse officia proident laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ut commodo\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"est\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non commodo aliqua irure elit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor incididunt\"\n    }\n  ],\n  \"clusters\": [\n    \"Ut ut sit irure enim\",\n    \"fugiat aliqua adipisicing minim\",\n    \"ea voluptate nisi\",\n    \"eu ut\",\n    \"Ut Excepteur nulla\",\n    \"Duis dolor sed\",\n    \"eu\",\n    \"irure\",\n    \"ex sunt voluptate\",\n    \"et\",\n    \"in do labore\",\n    \"consectetur\",\n    \"anim officia\",\n    \"nostrud pariatur in\",\n    \"anim in dolor culpa\",\n    \"id velit nostrud aute\",\n    \"sit incididunt quis Duis\",\n    \"aute dol\",\n    \"\",\n    \"anim pariatur aute laboris\"\n  ],\n  \"name\": \"in\",\n  \"remoteQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse\",\n      \"remoteQueue\": \"ex do\",\n      \"remoteQueueManager\": \"dolore aliquip pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"occaecat ea\",\n      \"remoteQueue\": \"laboris reprehenderit Ut pariatur\",\n      \"remoteQueueManager\": \"Ut incididunt cillum labore\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"deserunt\",\n      \"remoteQueue\": \"aliquip\",\n      \"remoteQueueManager\": \"quis id\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ullamco consequat\",\n      \"remoteQueue\": \"Duis et\",\n      \"remoteQueueManager\": \"ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ex\",\n      \"remoteQueue\": \"ipsum\",\n      \"remoteQueueManager\": \"amet eiusmod sunt\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"fugiat nisi in a\",\n      \"remoteQueue\": \"irur\",\n      \"remoteQueueManager\": \"cillum occaecat pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"eu sit\",\n      \"remoteQueue\": \"Lorem\",\n      \"remoteQueueManager\": \"non eu consectetur sit nostrud\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim ea dolore\",\n      \"remoteQueue\": \"sed qui id cupid\",\n      \"remoteQueueManager\": \"nisi enim ullamco voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in cons\",\n      \"remoteQueue\": \"nisi consequat anim\",\n      \"remoteQueueManager\": \"occaecat in id incididunt ullamco\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"cupidatat quis aliqua\",\n      \"remoteQueue\": \"in commodo ipsum\",\n      \"remoteQueueManager\": \"eiusmod dolore Duis ea cillum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do nulla non dolore\",\n      \"remoteQueue\": \"proident aute\",\n      \"remoteQueueManager\": \"elit incididunt fugiat sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"aliqua tempor ex\",\n      \"remoteQueue\": \"Duis sit\",\n      \"remoteQueueManager\": \"ad tempor sit eu\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in\",\n      \"remoteQueue\": \"nostrud\",\n      \"remoteQueueManager\": \"tempor sunt officia\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"officia reprehenderit\",\n      \"remoteQueue\": \"commodo eu anim\",\n      \"remoteQueueManager\": \"consectetur anim fugiat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"adipisicing\",\n      \"remoteQueue\": \"elit\",\n      \"remoteQueueManager\": \"et ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"irure aute minim amet nostrud\",\n      \"remoteQueue\": \"veniam\",\n      \"remoteQueueManager\": \"ut aute occaecat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do voluptate esse occaecat\",\n      \"remoteQueue\": \"anim\",\n      \"remoteQueueManager\": \"velit occaecat commodo ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"veniam exercitation\",\n      \"remoteQueue\": \"aute consequat fugiat eu\",\n      \"remoteQueueManager\": \"Ut pariatur ut Duis\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"sit sunt\",\n      \"remoteQueue\": \"exercitation velit ullamco anim\",\n      \"remoteQueueManager\": \"des\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"et dolore est ex non\",\n      \"remoteQueue\": \"in sed adipisicing c\",\n      \"remoteQueueManager\": \"laborum nulla\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Updates the specified queue manager or creates a new one",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"aliasQueues\": [\n    {\n      \"aliasQueue\": \"irure veniam\",\n      \"baseQueue\": \"et nisi amet in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea\",\n      \"baseQueue\": \"dolor nulla tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ipsum eiusmod\",\n      \"baseQueue\": \"anim nostrud in exercitation nisi\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip Ut et\",\n      \"baseQueue\": \"quis mollit null\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"esse nulla sunt in laborum\",\n      \"baseQueue\": \"Duis in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliqua nostrud\",\n      \"baseQueue\": \"esse minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"nulla\",\n      \"baseQueue\": \"consequat ad\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"est occaecat velit aliqua\",\n      \"baseQueue\": \"dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"anim consectetur\",\n      \"baseQueue\": \"elit consequat\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea labore\",\n      \"baseQueue\": \"id adipisicing laborum\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"quis ex ut \",\n      \"baseQueue\": \"pariatur Excepteur tempor dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"dolor nisi mollit\",\n      \"baseQueue\": \"culpa ex magna dolore tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"adipisicing aliquip\",\n      \"baseQueue\": \"minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"in ipsum\",\n      \"baseQueue\": \"officia ut in aliqua\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"minim nostrud culpa\",\n      \"baseQueue\": \"proident non sed\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"irure \",\n      \"baseQueue\": \"Duis\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip reprehenderit\",\n      \"baseQueue\": \"consectetur\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"eiusmod\",\n      \"baseQueue\": \"non\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"consectetur\",\n      \"baseQueue\": \"do pariatur velit eiusmod\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"veniam ad do\",\n      \"baseQueue\": \"laboris irure\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"clusterQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in ad Ut aliquip cupidatat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"elit aliquip\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"consectetur aliqua sint esse\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"id ea nisi voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"nostrud sed mollit dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ad aliquip sunt nisi\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in enim\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"culpa cillum dolor Excepteur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"tempor laborum esse consequat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"Excepteur sed mollit dolor consectetur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"mollit est do laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ea minim tempor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse officia proident laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ut commodo\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"est\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non commodo aliqua irure elit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor incididunt\"\n    }\n  ],\n  \"clusters\": [\n    \"Ut ut sit irure enim\",\n    \"fugiat aliqua adipisicing minim\",\n    \"ea voluptate nisi\",\n    \"eu ut\",\n    \"Ut Excepteur nulla\",\n    \"Duis dolor sed\",\n    \"eu\",\n    \"irure\",\n    \"ex sunt voluptate\",\n    \"et\",\n    \"in do labore\",\n    \"consectetur\",\n    \"anim officia\",\n    \"nostrud pariatur in\",\n    \"anim in dolor culpa\",\n    \"id velit nostrud aute\",\n    \"sit incididunt quis Duis\",\n    \"aute dol\",\n    \"\",\n    \"anim pariatur aute laboris\"\n  ],\n  \"name\": \"in\",\n  \"remoteQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse\",\n      \"remoteQueue\": \"ex do\",\n      \"remoteQueueManager\": \"dolore aliquip pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"occaecat ea\",\n      \"remoteQueue\": \"laboris reprehenderit Ut pariatur\",\n      \"remoteQueueManager\": \"Ut incididunt cillum labore\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"deserunt\",\n      \"remoteQueue\": \"aliquip\",\n      \"remoteQueueManager\": \"quis id\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ullamco consequat\",\n      \"remoteQueue\": \"Duis et\",\n      \"remoteQueueManager\": \"ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ex\",\n      \"remoteQueue\": \"ipsum\",\n      \"remoteQueueManager\": \"amet eiusmod sunt\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"fugiat nisi in a\",\n      \"remoteQueue\": \"irur\",\n      \"remoteQueueManager\": \"cillum occaecat pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"eu sit\",\n      \"remoteQueue\": \"Lorem\",\n      \"remoteQueueManager\": \"non eu consectetur sit nostrud\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim ea dolore\",\n      \"remoteQueue\": \"sed qui id cupid\",\n      \"remoteQueueManager\": \"nisi enim ullamco voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in cons\",\n      \"remoteQueue\": \"nisi consequat anim\",\n      \"remoteQueueManager\": \"occaecat in id incididunt ullamco\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"cupidatat quis aliqua\",\n      \"remoteQueue\": \"in commodo ipsum\",\n      \"remoteQueueManager\": \"eiusmod dolore Duis ea cillum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do nulla non dolore\",\n      \"remoteQueue\": \"proident aute\",\n      \"remoteQueueManager\": \"elit incididunt fugiat sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"aliqua tempor ex\",\n      \"remoteQueue\": \"Duis sit\",\n      \"remoteQueueManager\": \"ad tempor sit eu\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in\",\n      \"remoteQueue\": \"nostrud\",\n      \"remoteQueueManager\": \"tempor sunt officia\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"officia reprehenderit\",\n      \"remoteQueue\": \"commodo eu anim\",\n      \"remoteQueueManager\": \"consectetur anim fugiat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"adipisicing\",\n      \"remoteQueue\": \"elit\",\n      \"remoteQueueManager\": \"et ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"irure aute minim amet nostrud\",\n      \"remoteQueue\": \"veniam\",\n      \"remoteQueueManager\": \"ut aute occaecat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do voluptate esse occaecat\",\n      \"remoteQueue\": \"anim\",\n      \"remoteQueueManager\": \"velit occaecat commodo ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"veniam exercitation\",\n      \"remoteQueue\": \"aute consequat fugiat eu\",\n      \"remoteQueueManager\": \"Ut pariatur ut Duis\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"sit sunt\",\n      \"remoteQueue\": \"exercitation velit ullamco anim\",\n      \"remoteQueueManager\": \"des\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"et dolore est ex non\",\n      \"remoteQueue\": \"in sed adipisicing c\",\n      \"remoteQueueManager\": \"laborum nulla\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/queueManager/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"queueManager",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "aliqua",
															"description": "(Required) The name of the queue manager to be updated. \n\n The name of the queue manager in the body of the request must match this name."
														}
													]
												},
												"description": "If the queue manager with the specified ID doesn’t exist, a new queue manager will be created."
											},
											"response": [
												{
													"name": "Success. The new queue manager has been created. Response contains the name of the queue manager.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"aliasQueues\": [\n    {\n      \"aliasQueue\": \"irure veniam\",\n      \"baseQueue\": \"et nisi amet in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea\",\n      \"baseQueue\": \"dolor nulla tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ipsum eiusmod\",\n      \"baseQueue\": \"anim nostrud in exercitation nisi\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip Ut et\",\n      \"baseQueue\": \"quis mollit null\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"esse nulla sunt in laborum\",\n      \"baseQueue\": \"Duis in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliqua nostrud\",\n      \"baseQueue\": \"esse minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"nulla\",\n      \"baseQueue\": \"consequat ad\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"est occaecat velit aliqua\",\n      \"baseQueue\": \"dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"anim consectetur\",\n      \"baseQueue\": \"elit consequat\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea labore\",\n      \"baseQueue\": \"id adipisicing laborum\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"quis ex ut \",\n      \"baseQueue\": \"pariatur Excepteur tempor dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"dolor nisi mollit\",\n      \"baseQueue\": \"culpa ex magna dolore tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"adipisicing aliquip\",\n      \"baseQueue\": \"minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"in ipsum\",\n      \"baseQueue\": \"officia ut in aliqua\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"minim nostrud culpa\",\n      \"baseQueue\": \"proident non sed\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"irure \",\n      \"baseQueue\": \"Duis\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip reprehenderit\",\n      \"baseQueue\": \"consectetur\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"eiusmod\",\n      \"baseQueue\": \"non\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"consectetur\",\n      \"baseQueue\": \"do pariatur velit eiusmod\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"veniam ad do\",\n      \"baseQueue\": \"laboris irure\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"clusterQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in ad Ut aliquip cupidatat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"elit aliquip\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"consectetur aliqua sint esse\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"id ea nisi voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"nostrud sed mollit dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ad aliquip sunt nisi\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in enim\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"culpa cillum dolor Excepteur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"tempor laborum esse consequat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"Excepteur sed mollit dolor consectetur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"mollit est do laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ea minim tempor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse officia proident laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ut commodo\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"est\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non commodo aliqua irure elit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor incididunt\"\n    }\n  ],\n  \"clusters\": [\n    \"Ut ut sit irure enim\",\n    \"fugiat aliqua adipisicing minim\",\n    \"ea voluptate nisi\",\n    \"eu ut\",\n    \"Ut Excepteur nulla\",\n    \"Duis dolor sed\",\n    \"eu\",\n    \"irure\",\n    \"ex sunt voluptate\",\n    \"et\",\n    \"in do labore\",\n    \"consectetur\",\n    \"anim officia\",\n    \"nostrud pariatur in\",\n    \"anim in dolor culpa\",\n    \"id velit nostrud aute\",\n    \"sit incididunt quis Duis\",\n    \"aute dol\",\n    \"\",\n    \"anim pariatur aute laboris\"\n  ],\n  \"name\": \"in\",\n  \"remoteQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse\",\n      \"remoteQueue\": \"ex do\",\n      \"remoteQueueManager\": \"dolore aliquip pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"occaecat ea\",\n      \"remoteQueue\": \"laboris reprehenderit Ut pariatur\",\n      \"remoteQueueManager\": \"Ut incididunt cillum labore\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"deserunt\",\n      \"remoteQueue\": \"aliquip\",\n      \"remoteQueueManager\": \"quis id\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ullamco consequat\",\n      \"remoteQueue\": \"Duis et\",\n      \"remoteQueueManager\": \"ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ex\",\n      \"remoteQueue\": \"ipsum\",\n      \"remoteQueueManager\": \"amet eiusmod sunt\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"fugiat nisi in a\",\n      \"remoteQueue\": \"irur\",\n      \"remoteQueueManager\": \"cillum occaecat pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"eu sit\",\n      \"remoteQueue\": \"Lorem\",\n      \"remoteQueueManager\": \"non eu consectetur sit nostrud\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim ea dolore\",\n      \"remoteQueue\": \"sed qui id cupid\",\n      \"remoteQueueManager\": \"nisi enim ullamco voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in cons\",\n      \"remoteQueue\": \"nisi consequat anim\",\n      \"remoteQueueManager\": \"occaecat in id incididunt ullamco\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"cupidatat quis aliqua\",\n      \"remoteQueue\": \"in commodo ipsum\",\n      \"remoteQueueManager\": \"eiusmod dolore Duis ea cillum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do nulla non dolore\",\n      \"remoteQueue\": \"proident aute\",\n      \"remoteQueueManager\": \"elit incididunt fugiat sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"aliqua tempor ex\",\n      \"remoteQueue\": \"Duis sit\",\n      \"remoteQueueManager\": \"ad tempor sit eu\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in\",\n      \"remoteQueue\": \"nostrud\",\n      \"remoteQueueManager\": \"tempor sunt officia\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"officia reprehenderit\",\n      \"remoteQueue\": \"commodo eu anim\",\n      \"remoteQueueManager\": \"consectetur anim fugiat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"adipisicing\",\n      \"remoteQueue\": \"elit\",\n      \"remoteQueueManager\": \"et ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"irure aute minim amet nostrud\",\n      \"remoteQueue\": \"veniam\",\n      \"remoteQueueManager\": \"ut aute occaecat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do voluptate esse occaecat\",\n      \"remoteQueue\": \"anim\",\n      \"remoteQueueManager\": \"velit occaecat commodo ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"veniam exercitation\",\n      \"remoteQueue\": \"aute consequat fugiat eu\",\n      \"remoteQueueManager\": \"Ut pariatur ut Duis\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"sit sunt\",\n      \"remoteQueue\": \"exercitation velit ullamco anim\",\n      \"remoteQueueManager\": \"des\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"et dolore est ex non\",\n      \"remoteQueue\": \"in sed adipisicing c\",\n      \"remoteQueueManager\": \"laborum nulla\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/queueManager/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"queueManager",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "aliqua",
																	"description": "(Required) The name of the queue manager to be updated. \n\n The name of the queue manager in the body of the request must match this name."
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
												},
												{
													"name": "Success. The queue manager has been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"aliasQueues\": [\n    {\n      \"aliasQueue\": \"irure veniam\",\n      \"baseQueue\": \"et nisi amet in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea\",\n      \"baseQueue\": \"dolor nulla tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ipsum eiusmod\",\n      \"baseQueue\": \"anim nostrud in exercitation nisi\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip Ut et\",\n      \"baseQueue\": \"quis mollit null\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"esse nulla sunt in laborum\",\n      \"baseQueue\": \"Duis in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliqua nostrud\",\n      \"baseQueue\": \"esse minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"nulla\",\n      \"baseQueue\": \"consequat ad\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"est occaecat velit aliqua\",\n      \"baseQueue\": \"dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"anim consectetur\",\n      \"baseQueue\": \"elit consequat\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea labore\",\n      \"baseQueue\": \"id adipisicing laborum\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"quis ex ut \",\n      \"baseQueue\": \"pariatur Excepteur tempor dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"dolor nisi mollit\",\n      \"baseQueue\": \"culpa ex magna dolore tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"adipisicing aliquip\",\n      \"baseQueue\": \"minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"in ipsum\",\n      \"baseQueue\": \"officia ut in aliqua\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"minim nostrud culpa\",\n      \"baseQueue\": \"proident non sed\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"irure \",\n      \"baseQueue\": \"Duis\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip reprehenderit\",\n      \"baseQueue\": \"consectetur\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"eiusmod\",\n      \"baseQueue\": \"non\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"consectetur\",\n      \"baseQueue\": \"do pariatur velit eiusmod\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"veniam ad do\",\n      \"baseQueue\": \"laboris irure\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"clusterQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in ad Ut aliquip cupidatat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"elit aliquip\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"consectetur aliqua sint esse\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"id ea nisi voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"nostrud sed mollit dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ad aliquip sunt nisi\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in enim\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"culpa cillum dolor Excepteur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"tempor laborum esse consequat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"Excepteur sed mollit dolor consectetur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"mollit est do laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ea minim tempor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse officia proident laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ut commodo\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"est\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non commodo aliqua irure elit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor incididunt\"\n    }\n  ],\n  \"clusters\": [\n    \"Ut ut sit irure enim\",\n    \"fugiat aliqua adipisicing minim\",\n    \"ea voluptate nisi\",\n    \"eu ut\",\n    \"Ut Excepteur nulla\",\n    \"Duis dolor sed\",\n    \"eu\",\n    \"irure\",\n    \"ex sunt voluptate\",\n    \"et\",\n    \"in do labore\",\n    \"consectetur\",\n    \"anim officia\",\n    \"nostrud pariatur in\",\n    \"anim in dolor culpa\",\n    \"id velit nostrud aute\",\n    \"sit incididunt quis Duis\",\n    \"aute dol\",\n    \"\",\n    \"anim pariatur aute laboris\"\n  ],\n  \"name\": \"in\",\n  \"remoteQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse\",\n      \"remoteQueue\": \"ex do\",\n      \"remoteQueueManager\": \"dolore aliquip pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"occaecat ea\",\n      \"remoteQueue\": \"laboris reprehenderit Ut pariatur\",\n      \"remoteQueueManager\": \"Ut incididunt cillum labore\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"deserunt\",\n      \"remoteQueue\": \"aliquip\",\n      \"remoteQueueManager\": \"quis id\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ullamco consequat\",\n      \"remoteQueue\": \"Duis et\",\n      \"remoteQueueManager\": \"ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ex\",\n      \"remoteQueue\": \"ipsum\",\n      \"remoteQueueManager\": \"amet eiusmod sunt\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"fugiat nisi in a\",\n      \"remoteQueue\": \"irur\",\n      \"remoteQueueManager\": \"cillum occaecat pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"eu sit\",\n      \"remoteQueue\": \"Lorem\",\n      \"remoteQueueManager\": \"non eu consectetur sit nostrud\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim ea dolore\",\n      \"remoteQueue\": \"sed qui id cupid\",\n      \"remoteQueueManager\": \"nisi enim ullamco voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in cons\",\n      \"remoteQueue\": \"nisi consequat anim\",\n      \"remoteQueueManager\": \"occaecat in id incididunt ullamco\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"cupidatat quis aliqua\",\n      \"remoteQueue\": \"in commodo ipsum\",\n      \"remoteQueueManager\": \"eiusmod dolore Duis ea cillum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do nulla non dolore\",\n      \"remoteQueue\": \"proident aute\",\n      \"remoteQueueManager\": \"elit incididunt fugiat sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"aliqua tempor ex\",\n      \"remoteQueue\": \"Duis sit\",\n      \"remoteQueueManager\": \"ad tempor sit eu\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in\",\n      \"remoteQueue\": \"nostrud\",\n      \"remoteQueueManager\": \"tempor sunt officia\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"officia reprehenderit\",\n      \"remoteQueue\": \"commodo eu anim\",\n      \"remoteQueueManager\": \"consectetur anim fugiat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"adipisicing\",\n      \"remoteQueue\": \"elit\",\n      \"remoteQueueManager\": \"et ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"irure aute minim amet nostrud\",\n      \"remoteQueue\": \"veniam\",\n      \"remoteQueueManager\": \"ut aute occaecat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do voluptate esse occaecat\",\n      \"remoteQueue\": \"anim\",\n      \"remoteQueueManager\": \"velit occaecat commodo ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"veniam exercitation\",\n      \"remoteQueue\": \"aute consequat fugiat eu\",\n      \"remoteQueueManager\": \"Ut pariatur ut Duis\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"sit sunt\",\n      \"remoteQueue\": \"exercitation velit ullamco anim\",\n      \"remoteQueueManager\": \"des\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"et dolore est ex non\",\n      \"remoteQueue\": \"in sed adipisicing c\",\n      \"remoteQueueManager\": \"laborum nulla\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/queueManager/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"queueManager",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "aliqua",
																	"description": "(Required) The name of the queue manager to be updated. \n\n The name of the queue manager in the body of the request must match this name."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid. See the response body for details.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"aliasQueues\": [\n    {\n      \"aliasQueue\": \"irure veniam\",\n      \"baseQueue\": \"et nisi amet in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea\",\n      \"baseQueue\": \"dolor nulla tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ipsum eiusmod\",\n      \"baseQueue\": \"anim nostrud in exercitation nisi\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip Ut et\",\n      \"baseQueue\": \"quis mollit null\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"esse nulla sunt in laborum\",\n      \"baseQueue\": \"Duis in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliqua nostrud\",\n      \"baseQueue\": \"esse minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"nulla\",\n      \"baseQueue\": \"consequat ad\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"est occaecat velit aliqua\",\n      \"baseQueue\": \"dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"anim consectetur\",\n      \"baseQueue\": \"elit consequat\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea labore\",\n      \"baseQueue\": \"id adipisicing laborum\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"quis ex ut \",\n      \"baseQueue\": \"pariatur Excepteur tempor dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"dolor nisi mollit\",\n      \"baseQueue\": \"culpa ex magna dolore tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"adipisicing aliquip\",\n      \"baseQueue\": \"minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"in ipsum\",\n      \"baseQueue\": \"officia ut in aliqua\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"minim nostrud culpa\",\n      \"baseQueue\": \"proident non sed\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"irure \",\n      \"baseQueue\": \"Duis\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip reprehenderit\",\n      \"baseQueue\": \"consectetur\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"eiusmod\",\n      \"baseQueue\": \"non\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"consectetur\",\n      \"baseQueue\": \"do pariatur velit eiusmod\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"veniam ad do\",\n      \"baseQueue\": \"laboris irure\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"clusterQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in ad Ut aliquip cupidatat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"elit aliquip\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"consectetur aliqua sint esse\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"id ea nisi voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"nostrud sed mollit dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ad aliquip sunt nisi\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in enim\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"culpa cillum dolor Excepteur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"tempor laborum esse consequat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"Excepteur sed mollit dolor consectetur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"mollit est do laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ea minim tempor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse officia proident laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ut commodo\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"est\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non commodo aliqua irure elit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor incididunt\"\n    }\n  ],\n  \"clusters\": [\n    \"Ut ut sit irure enim\",\n    \"fugiat aliqua adipisicing minim\",\n    \"ea voluptate nisi\",\n    \"eu ut\",\n    \"Ut Excepteur nulla\",\n    \"Duis dolor sed\",\n    \"eu\",\n    \"irure\",\n    \"ex sunt voluptate\",\n    \"et\",\n    \"in do labore\",\n    \"consectetur\",\n    \"anim officia\",\n    \"nostrud pariatur in\",\n    \"anim in dolor culpa\",\n    \"id velit nostrud aute\",\n    \"sit incididunt quis Duis\",\n    \"aute dol\",\n    \"\",\n    \"anim pariatur aute laboris\"\n  ],\n  \"name\": \"in\",\n  \"remoteQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse\",\n      \"remoteQueue\": \"ex do\",\n      \"remoteQueueManager\": \"dolore aliquip pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"occaecat ea\",\n      \"remoteQueue\": \"laboris reprehenderit Ut pariatur\",\n      \"remoteQueueManager\": \"Ut incididunt cillum labore\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"deserunt\",\n      \"remoteQueue\": \"aliquip\",\n      \"remoteQueueManager\": \"quis id\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ullamco consequat\",\n      \"remoteQueue\": \"Duis et\",\n      \"remoteQueueManager\": \"ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ex\",\n      \"remoteQueue\": \"ipsum\",\n      \"remoteQueueManager\": \"amet eiusmod sunt\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"fugiat nisi in a\",\n      \"remoteQueue\": \"irur\",\n      \"remoteQueueManager\": \"cillum occaecat pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"eu sit\",\n      \"remoteQueue\": \"Lorem\",\n      \"remoteQueueManager\": \"non eu consectetur sit nostrud\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim ea dolore\",\n      \"remoteQueue\": \"sed qui id cupid\",\n      \"remoteQueueManager\": \"nisi enim ullamco voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in cons\",\n      \"remoteQueue\": \"nisi consequat anim\",\n      \"remoteQueueManager\": \"occaecat in id incididunt ullamco\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"cupidatat quis aliqua\",\n      \"remoteQueue\": \"in commodo ipsum\",\n      \"remoteQueueManager\": \"eiusmod dolore Duis ea cillum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do nulla non dolore\",\n      \"remoteQueue\": \"proident aute\",\n      \"remoteQueueManager\": \"elit incididunt fugiat sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"aliqua tempor ex\",\n      \"remoteQueue\": \"Duis sit\",\n      \"remoteQueueManager\": \"ad tempor sit eu\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in\",\n      \"remoteQueue\": \"nostrud\",\n      \"remoteQueueManager\": \"tempor sunt officia\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"officia reprehenderit\",\n      \"remoteQueue\": \"commodo eu anim\",\n      \"remoteQueueManager\": \"consectetur anim fugiat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"adipisicing\",\n      \"remoteQueue\": \"elit\",\n      \"remoteQueueManager\": \"et ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"irure aute minim amet nostrud\",\n      \"remoteQueue\": \"veniam\",\n      \"remoteQueueManager\": \"ut aute occaecat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do voluptate esse occaecat\",\n      \"remoteQueue\": \"anim\",\n      \"remoteQueueManager\": \"velit occaecat commodo ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"veniam exercitation\",\n      \"remoteQueue\": \"aute consequat fugiat eu\",\n      \"remoteQueueManager\": \"Ut pariatur ut Duis\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"sit sunt\",\n      \"remoteQueue\": \"exercitation velit ullamco anim\",\n      \"remoteQueueManager\": \"des\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"et dolore est ex non\",\n      \"remoteQueue\": \"in sed adipisicing c\",\n      \"remoteQueueManager\": \"laborum nulla\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/queueManager/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"queueManager",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "aliqua",
																	"description": "(Required) The name of the queue manager to be updated. \n\n The name of the queue manager in the body of the request must match this name."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified queue manager",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/queueManager/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"queueManager",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "aliqua",
															"description": "(Required) The name of the queue manager to be deleted."
														}
													]
												}
											},
											"response": [
												{
													"name": "Deleted. Response does not have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/queueManager/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"queueManager",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "aliqua",
																	"description": "(Required) The name of the queue manager to be deleted."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Validates the queue manager update for the `PUT /service/ibmMQTracing/queueManager/{name}` request",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"aliasQueues\": [\n    {\n      \"aliasQueue\": \"irure veniam\",\n      \"baseQueue\": \"et nisi amet in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea\",\n      \"baseQueue\": \"dolor nulla tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ipsum eiusmod\",\n      \"baseQueue\": \"anim nostrud in exercitation nisi\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip Ut et\",\n      \"baseQueue\": \"quis mollit null\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"esse nulla sunt in laborum\",\n      \"baseQueue\": \"Duis in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliqua nostrud\",\n      \"baseQueue\": \"esse minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"nulla\",\n      \"baseQueue\": \"consequat ad\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"est occaecat velit aliqua\",\n      \"baseQueue\": \"dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"anim consectetur\",\n      \"baseQueue\": \"elit consequat\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea labore\",\n      \"baseQueue\": \"id adipisicing laborum\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"quis ex ut \",\n      \"baseQueue\": \"pariatur Excepteur tempor dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"dolor nisi mollit\",\n      \"baseQueue\": \"culpa ex magna dolore tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"adipisicing aliquip\",\n      \"baseQueue\": \"minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"in ipsum\",\n      \"baseQueue\": \"officia ut in aliqua\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"minim nostrud culpa\",\n      \"baseQueue\": \"proident non sed\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"irure \",\n      \"baseQueue\": \"Duis\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip reprehenderit\",\n      \"baseQueue\": \"consectetur\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"eiusmod\",\n      \"baseQueue\": \"non\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"consectetur\",\n      \"baseQueue\": \"do pariatur velit eiusmod\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"veniam ad do\",\n      \"baseQueue\": \"laboris irure\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"clusterQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in ad Ut aliquip cupidatat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"elit aliquip\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"consectetur aliqua sint esse\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"id ea nisi voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"nostrud sed mollit dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ad aliquip sunt nisi\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in enim\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"culpa cillum dolor Excepteur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"tempor laborum esse consequat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"Excepteur sed mollit dolor consectetur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"mollit est do laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ea minim tempor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse officia proident laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ut commodo\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"est\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non commodo aliqua irure elit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor incididunt\"\n    }\n  ],\n  \"clusters\": [\n    \"Ut ut sit irure enim\",\n    \"fugiat aliqua adipisicing minim\",\n    \"ea voluptate nisi\",\n    \"eu ut\",\n    \"Ut Excepteur nulla\",\n    \"Duis dolor sed\",\n    \"eu\",\n    \"irure\",\n    \"ex sunt voluptate\",\n    \"et\",\n    \"in do labore\",\n    \"consectetur\",\n    \"anim officia\",\n    \"nostrud pariatur in\",\n    \"anim in dolor culpa\",\n    \"id velit nostrud aute\",\n    \"sit incididunt quis Duis\",\n    \"aute dol\",\n    \"\",\n    \"anim pariatur aute laboris\"\n  ],\n  \"name\": \"in\",\n  \"remoteQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse\",\n      \"remoteQueue\": \"ex do\",\n      \"remoteQueueManager\": \"dolore aliquip pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"occaecat ea\",\n      \"remoteQueue\": \"laboris reprehenderit Ut pariatur\",\n      \"remoteQueueManager\": \"Ut incididunt cillum labore\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"deserunt\",\n      \"remoteQueue\": \"aliquip\",\n      \"remoteQueueManager\": \"quis id\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ullamco consequat\",\n      \"remoteQueue\": \"Duis et\",\n      \"remoteQueueManager\": \"ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ex\",\n      \"remoteQueue\": \"ipsum\",\n      \"remoteQueueManager\": \"amet eiusmod sunt\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"fugiat nisi in a\",\n      \"remoteQueue\": \"irur\",\n      \"remoteQueueManager\": \"cillum occaecat pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"eu sit\",\n      \"remoteQueue\": \"Lorem\",\n      \"remoteQueueManager\": \"non eu consectetur sit nostrud\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim ea dolore\",\n      \"remoteQueue\": \"sed qui id cupid\",\n      \"remoteQueueManager\": \"nisi enim ullamco voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in cons\",\n      \"remoteQueue\": \"nisi consequat anim\",\n      \"remoteQueueManager\": \"occaecat in id incididunt ullamco\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"cupidatat quis aliqua\",\n      \"remoteQueue\": \"in commodo ipsum\",\n      \"remoteQueueManager\": \"eiusmod dolore Duis ea cillum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do nulla non dolore\",\n      \"remoteQueue\": \"proident aute\",\n      \"remoteQueueManager\": \"elit incididunt fugiat sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"aliqua tempor ex\",\n      \"remoteQueue\": \"Duis sit\",\n      \"remoteQueueManager\": \"ad tempor sit eu\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in\",\n      \"remoteQueue\": \"nostrud\",\n      \"remoteQueueManager\": \"tempor sunt officia\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"officia reprehenderit\",\n      \"remoteQueue\": \"commodo eu anim\",\n      \"remoteQueueManager\": \"consectetur anim fugiat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"adipisicing\",\n      \"remoteQueue\": \"elit\",\n      \"remoteQueueManager\": \"et ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"irure aute minim amet nostrud\",\n      \"remoteQueue\": \"veniam\",\n      \"remoteQueueManager\": \"ut aute occaecat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do voluptate esse occaecat\",\n      \"remoteQueue\": \"anim\",\n      \"remoteQueueManager\": \"velit occaecat commodo ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"veniam exercitation\",\n      \"remoteQueue\": \"aute consequat fugiat eu\",\n      \"remoteQueueManager\": \"Ut pariatur ut Duis\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"sit sunt\",\n      \"remoteQueue\": \"exercitation velit ullamco anim\",\n      \"remoteQueueManager\": \"des\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"et dolore est ex non\",\n      \"remoteQueue\": \"in sed adipisicing c\",\n      \"remoteQueueManager\": \"laborum nulla\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/queueManager/:name/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"queueManager",
														":name",
														"validator"
													],
													"variable": [
														{
															"key": "name",
															"value": "aliqua",
															"description": "(Required) The name of the queue manager to be validated. \n\n The name of the queue manager in the body of the request must match this name."
														}
													]
												}
											},
											"response": [
												{
													"name": "Validated. The submitted configuration is valid. Response does not have a body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"aliasQueues\": [\n    {\n      \"aliasQueue\": \"irure veniam\",\n      \"baseQueue\": \"et nisi amet in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea\",\n      \"baseQueue\": \"dolor nulla tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ipsum eiusmod\",\n      \"baseQueue\": \"anim nostrud in exercitation nisi\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip Ut et\",\n      \"baseQueue\": \"quis mollit null\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"esse nulla sunt in laborum\",\n      \"baseQueue\": \"Duis in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliqua nostrud\",\n      \"baseQueue\": \"esse minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"nulla\",\n      \"baseQueue\": \"consequat ad\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"est occaecat velit aliqua\",\n      \"baseQueue\": \"dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"anim consectetur\",\n      \"baseQueue\": \"elit consequat\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea labore\",\n      \"baseQueue\": \"id adipisicing laborum\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"quis ex ut \",\n      \"baseQueue\": \"pariatur Excepteur tempor dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"dolor nisi mollit\",\n      \"baseQueue\": \"culpa ex magna dolore tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"adipisicing aliquip\",\n      \"baseQueue\": \"minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"in ipsum\",\n      \"baseQueue\": \"officia ut in aliqua\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"minim nostrud culpa\",\n      \"baseQueue\": \"proident non sed\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"irure \",\n      \"baseQueue\": \"Duis\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip reprehenderit\",\n      \"baseQueue\": \"consectetur\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"eiusmod\",\n      \"baseQueue\": \"non\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"consectetur\",\n      \"baseQueue\": \"do pariatur velit eiusmod\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"veniam ad do\",\n      \"baseQueue\": \"laboris irure\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"clusterQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in ad Ut aliquip cupidatat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"elit aliquip\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"consectetur aliqua sint esse\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"id ea nisi voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"nostrud sed mollit dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ad aliquip sunt nisi\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in enim\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"culpa cillum dolor Excepteur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"tempor laborum esse consequat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"Excepteur sed mollit dolor consectetur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"mollit est do laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ea minim tempor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse officia proident laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ut commodo\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"est\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non commodo aliqua irure elit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor incididunt\"\n    }\n  ],\n  \"clusters\": [\n    \"Ut ut sit irure enim\",\n    \"fugiat aliqua adipisicing minim\",\n    \"ea voluptate nisi\",\n    \"eu ut\",\n    \"Ut Excepteur nulla\",\n    \"Duis dolor sed\",\n    \"eu\",\n    \"irure\",\n    \"ex sunt voluptate\",\n    \"et\",\n    \"in do labore\",\n    \"consectetur\",\n    \"anim officia\",\n    \"nostrud pariatur in\",\n    \"anim in dolor culpa\",\n    \"id velit nostrud aute\",\n    \"sit incididunt quis Duis\",\n    \"aute dol\",\n    \"\",\n    \"anim pariatur aute laboris\"\n  ],\n  \"name\": \"in\",\n  \"remoteQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse\",\n      \"remoteQueue\": \"ex do\",\n      \"remoteQueueManager\": \"dolore aliquip pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"occaecat ea\",\n      \"remoteQueue\": \"laboris reprehenderit Ut pariatur\",\n      \"remoteQueueManager\": \"Ut incididunt cillum labore\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"deserunt\",\n      \"remoteQueue\": \"aliquip\",\n      \"remoteQueueManager\": \"quis id\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ullamco consequat\",\n      \"remoteQueue\": \"Duis et\",\n      \"remoteQueueManager\": \"ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ex\",\n      \"remoteQueue\": \"ipsum\",\n      \"remoteQueueManager\": \"amet eiusmod sunt\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"fugiat nisi in a\",\n      \"remoteQueue\": \"irur\",\n      \"remoteQueueManager\": \"cillum occaecat pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"eu sit\",\n      \"remoteQueue\": \"Lorem\",\n      \"remoteQueueManager\": \"non eu consectetur sit nostrud\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim ea dolore\",\n      \"remoteQueue\": \"sed qui id cupid\",\n      \"remoteQueueManager\": \"nisi enim ullamco voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in cons\",\n      \"remoteQueue\": \"nisi consequat anim\",\n      \"remoteQueueManager\": \"occaecat in id incididunt ullamco\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"cupidatat quis aliqua\",\n      \"remoteQueue\": \"in commodo ipsum\",\n      \"remoteQueueManager\": \"eiusmod dolore Duis ea cillum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do nulla non dolore\",\n      \"remoteQueue\": \"proident aute\",\n      \"remoteQueueManager\": \"elit incididunt fugiat sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"aliqua tempor ex\",\n      \"remoteQueue\": \"Duis sit\",\n      \"remoteQueueManager\": \"ad tempor sit eu\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in\",\n      \"remoteQueue\": \"nostrud\",\n      \"remoteQueueManager\": \"tempor sunt officia\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"officia reprehenderit\",\n      \"remoteQueue\": \"commodo eu anim\",\n      \"remoteQueueManager\": \"consectetur anim fugiat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"adipisicing\",\n      \"remoteQueue\": \"elit\",\n      \"remoteQueueManager\": \"et ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"irure aute minim amet nostrud\",\n      \"remoteQueue\": \"veniam\",\n      \"remoteQueueManager\": \"ut aute occaecat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do voluptate esse occaecat\",\n      \"remoteQueue\": \"anim\",\n      \"remoteQueueManager\": \"velit occaecat commodo ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"veniam exercitation\",\n      \"remoteQueue\": \"aute consequat fugiat eu\",\n      \"remoteQueueManager\": \"Ut pariatur ut Duis\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"sit sunt\",\n      \"remoteQueue\": \"exercitation velit ullamco anim\",\n      \"remoteQueueManager\": \"des\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"et dolore est ex non\",\n      \"remoteQueue\": \"in sed adipisicing c\",\n      \"remoteQueueManager\": \"laborum nulla\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/queueManager/:name/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"queueManager",
																":name",
																"validator"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "aliqua",
																	"description": "(Required) The name of the queue manager to be validated. \n\n The name of the queue manager in the body of the request must match this name."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid. See the response body for details.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"aliasQueues\": [\n    {\n      \"aliasQueue\": \"irure veniam\",\n      \"baseQueue\": \"et nisi amet in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea\",\n      \"baseQueue\": \"dolor nulla tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ipsum eiusmod\",\n      \"baseQueue\": \"anim nostrud in exercitation nisi\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip Ut et\",\n      \"baseQueue\": \"quis mollit null\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"esse nulla sunt in laborum\",\n      \"baseQueue\": \"Duis in\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliqua nostrud\",\n      \"baseQueue\": \"esse minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"nulla\",\n      \"baseQueue\": \"consequat ad\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"est occaecat velit aliqua\",\n      \"baseQueue\": \"dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"anim consectetur\",\n      \"baseQueue\": \"elit consequat\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"ea labore\",\n      \"baseQueue\": \"id adipisicing laborum\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"quis ex ut \",\n      \"baseQueue\": \"pariatur Excepteur tempor dolor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"dolor nisi mollit\",\n      \"baseQueue\": \"culpa ex magna dolore tempor\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"adipisicing aliquip\",\n      \"baseQueue\": \"minim\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"in ipsum\",\n      \"baseQueue\": \"officia ut in aliqua\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"minim nostrud culpa\",\n      \"baseQueue\": \"proident non sed\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"irure \",\n      \"baseQueue\": \"Duis\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"aliquip reprehenderit\",\n      \"baseQueue\": \"consectetur\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"eiusmod\",\n      \"baseQueue\": \"non\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"consectetur\",\n      \"baseQueue\": \"do pariatur velit eiusmod\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"aliasQueue\": \"veniam ad do\",\n      \"baseQueue\": \"laboris irure\",\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"clusterQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in ad Ut aliquip cupidatat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"elit aliquip\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"consectetur aliqua sint esse\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"id ea nisi voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"nostrud sed mollit dolor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ad aliquip sunt nisi\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in enim\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"culpa cillum dolor Excepteur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"tempor laborum esse consequat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"Excepteur sed mollit dolor consectetur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"mollit est do laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ea minim tempor\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse officia proident laboris\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ut commodo\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"est\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"non commodo aliqua irure elit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"dolor incididunt\"\n    }\n  ],\n  \"clusters\": [\n    \"Ut ut sit irure enim\",\n    \"fugiat aliqua adipisicing minim\",\n    \"ea voluptate nisi\",\n    \"eu ut\",\n    \"Ut Excepteur nulla\",\n    \"Duis dolor sed\",\n    \"eu\",\n    \"irure\",\n    \"ex sunt voluptate\",\n    \"et\",\n    \"in do labore\",\n    \"consectetur\",\n    \"anim officia\",\n    \"nostrud pariatur in\",\n    \"anim in dolor culpa\",\n    \"id velit nostrud aute\",\n    \"sit incididunt quis Duis\",\n    \"aute dol\",\n    \"\",\n    \"anim pariatur aute laboris\"\n  ],\n  \"name\": \"in\",\n  \"remoteQueues\": [\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"esse\",\n      \"remoteQueue\": \"ex do\",\n      \"remoteQueueManager\": \"dolore aliquip pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"occaecat ea\",\n      \"remoteQueue\": \"laboris reprehenderit Ut pariatur\",\n      \"remoteQueueManager\": \"Ut incididunt cillum labore\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"deserunt\",\n      \"remoteQueue\": \"aliquip\",\n      \"remoteQueueManager\": \"quis id\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ullamco consequat\",\n      \"remoteQueue\": \"Duis et\",\n      \"remoteQueueManager\": \"ipsum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"ex\",\n      \"remoteQueue\": \"ipsum\",\n      \"remoteQueueManager\": \"amet eiusmod sunt\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"fugiat nisi in a\",\n      \"remoteQueue\": \"irur\",\n      \"remoteQueueManager\": \"cillum occaecat pariatur\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"eu sit\",\n      \"remoteQueue\": \"Lorem\",\n      \"remoteQueueManager\": \"non eu consectetur sit nostrud\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"minim ea dolore\",\n      \"remoteQueue\": \"sed qui id cupid\",\n      \"remoteQueueManager\": \"nisi enim ullamco voluptate\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in cons\",\n      \"remoteQueue\": \"nisi consequat anim\",\n      \"remoteQueueManager\": \"occaecat in id incididunt ullamco\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"cupidatat quis aliqua\",\n      \"remoteQueue\": \"in commodo ipsum\",\n      \"remoteQueueManager\": \"eiusmod dolore Duis ea cillum\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do nulla non dolore\",\n      \"remoteQueue\": \"proident aute\",\n      \"remoteQueueManager\": \"elit incididunt fugiat sit\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"aliqua tempor ex\",\n      \"remoteQueue\": \"Duis sit\",\n      \"remoteQueueManager\": \"ad tempor sit eu\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"in\",\n      \"remoteQueue\": \"nostrud\",\n      \"remoteQueueManager\": \"tempor sunt officia\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"officia reprehenderit\",\n      \"remoteQueue\": \"commodo eu anim\",\n      \"remoteQueueManager\": \"consectetur anim fugiat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"adipisicing\",\n      \"remoteQueue\": \"elit\",\n      \"remoteQueueManager\": \"et ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"irure aute minim amet nostrud\",\n      \"remoteQueue\": \"veniam\",\n      \"remoteQueueManager\": \"ut aute occaecat\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"do voluptate esse occaecat\",\n      \"remoteQueue\": \"anim\",\n      \"remoteQueueManager\": \"velit occaecat commodo ut\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"veniam exercitation\",\n      \"remoteQueue\": \"aute consequat fugiat eu\",\n      \"remoteQueueManager\": \"Ut pariatur ut Duis\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"sit sunt\",\n      \"remoteQueue\": \"exercitation velit ullamco anim\",\n      \"remoteQueueManager\": \"des\"\n    },\n    {\n      \"clusterVisibility\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"localQueue\": \"et dolore est ex non\",\n      \"remoteQueue\": \"in sed adipisicing c\",\n      \"remoteQueueManager\": \"laborum nulla\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/ibmMQTracing/queueManager/:name/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"ibmMQTracing",
																"queueManager",
																":name",
																"validator"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "aliqua",
																	"description": "(Required) The name of the queue manager to be validated. \n\n The name of the queue manager in the body of the request must match this name."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists all available queue managers",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/ibmMQTracing/queueManager",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"ibmMQTracing",
												"queueManager"
											]
										},
										"description": "This endpoint is used to provide Dynatrace with your IBM MQ setup regarding alias, remote and cluster queues. \n\n This is required to facilitate end to end tracing for messages send via IBM MQ where sender and receiver use different queue names. Without this information Dynatrace would still trace all requests, but would not be able to stitch service calls that use these IBM MQ features."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/ibmMQTracing/queueManager",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"ibmMQTracing",
														"queueManager"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "request Attributes",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Shows the properties of the specified request attribute",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/requestAttributes/:id?includeProcessGroupReferences=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestAttributes",
												":id"
											],
											"query": [
												{
													"key": "includeProcessGroupReferences",
													"value": "false",
													"description": "Flag to include process group references to the response. \n\n Process Group group references aren't compatible across environments."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the required request attribute."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/requestAttributes/:id?includeProcessGroupReferences=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestAttributes",
														":id"
													],
													"query": [
														{
															"key": "includeProcessGroupReferences",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the required request attribute."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}"
										}
									]
								},
								{
									"name": "Updates an existing request attribute or creates a new one",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestAttributes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestAttributes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the request attribute to be updated.\n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The request attribute with the specified ID has been created. The ID of the new configuration is returned.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/requestAttributes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestAttributes",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the request attribute to be updated.\n\n If you set the ID in the body as well, it must match this ID."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Success. Request attribute has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/requestAttributes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestAttributes",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the request attribute to be updated.\n\n If you set the ID in the body as well, it must match this ID."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/requestAttributes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestAttributes",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the request attribute to be updated.\n\n If you set the ID in the body as well, it must match this ID."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified request attribute",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/service/requestAttributes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestAttributes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the request attribute to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Deleted. Response does not have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/requestAttributes/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestAttributes",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the request attribute to be deleted."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Validate updates of existing request attribute for the `PUT /requestAttributes/{id}` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestAttributes/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestAttributes",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the request attribute to be validated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response does not have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/requestAttributes/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestAttributes",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the request attribute to be validated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/requestAttributes/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestAttributes",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the request attribute to be validated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all available request attributes",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service/requestAttributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"requestAttributes"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/requestAttributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestAttributes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Creates a new request attribute",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service/requestAttributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"requestAttributes"
									]
								},
								"description": "The body must not provide an ID as IDs are automatically assigned."
							},
							"response": [
								{
									"name": "Success. Request attribute has been created. The ID of the new configuration is returned.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestAttributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestAttributes"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestAttributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestAttributes"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates new request attributes for the `POST /requestAttributes` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service/requestAttributes/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"requestAttributes",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response does not have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestAttributes/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestAttributes",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Query Term\",\n  \"enabled\": true,\n  \"dataType\": \"STRING\",\n  \"dataSources\": [\n    {\n      \"enabled\": true,\n      \"source\": \"QUERY_PARAMETER\",\n      \"parameterName\": \"query\",\n      \"scope\": {\n        \"tagOfProcessGroup\": \"SearchFrontend\"\n      },\n      \"capturingAndStorageLocation\": \"CAPTURE_AND_STORE_ON_SERVER\"\n    }\n  ],\n  \"normalization\": \"TO_LOWER_CASE\",\n  \"aggregation\": \"ALL_DISTINCT_VALUES\",\n  \"confidential\": false,\n  \"skipPersonalDataMasking\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestAttributes/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestAttributes",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "request Naming",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Gets the parameters of the specified request naming rule",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/requestNaming/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestNaming",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the request naming rule you're inquiring."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/requestNaming/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestNaming",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the request naming rule you're inquiring."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"conditions\": [\n    {\n      \"attribute\": \"HTTP_REQUEST_METHOD\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"SERVICE_TYPE\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"namingPattern\": \"reprehenderit cul\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"d17ae213-29b8-9281-d5fc-2521e4419f80\",\n  \"order\": \"dolore ullamco ea laborum\",\n  \"managementZones\": [\n    \"commodo\"\n  ],\n  \"placeholders\": [\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_COUNT\",\n      \"kind\": \"REGEX_EXTRACTION\",\n      \"name\": \"fugiat dolor officia\",\n      \"delimiterOrRegex\": \"ex tempor U\",\n      \"endDelimiter\": \"ut Lorem sed do\",\n      \"requestAttribute\": \"velit do ipsum et sit\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": true,\n      \"aggregation\": \"COUNT\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"REQUEST_NAME\",\n      \"kind\": \"BETWEEN_DELIMITER\",\n      \"name\": \"dolore\",\n      \"delimiterOrRegex\": \"voluptate\",\n      \"endDelimiter\": \"incididunt esse in exercitation\",\n      \"requestAttribute\": \"irure reprehenderit sint est ex\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": false,\n      \"aggregation\": \"LAST\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Updates the specified request naming rule",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"conditions\": [\n    {\n      \"attribute\": \"HTTP_REQUEST_METHOD\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"SERVICE_TYPE\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"namingPattern\": \"reprehenderit cul\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"d17ae213-29b8-9281-d5fc-2521e4419f80\",\n  \"order\": \"dolore ullamco ea laborum\",\n  \"managementZones\": [\n    \"commodo\"\n  ],\n  \"placeholders\": [\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_COUNT\",\n      \"kind\": \"REGEX_EXTRACTION\",\n      \"name\": \"fugiat dolor officia\",\n      \"delimiterOrRegex\": \"ex tempor U\",\n      \"endDelimiter\": \"ut Lorem sed do\",\n      \"requestAttribute\": \"velit do ipsum et sit\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": true,\n      \"aggregation\": \"COUNT\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"REQUEST_NAME\",\n      \"kind\": \"BETWEEN_DELIMITER\",\n      \"name\": \"dolore\",\n      \"delimiterOrRegex\": \"voluptate\",\n      \"endDelimiter\": \"incididunt esse in exercitation\",\n      \"requestAttribute\": \"irure reprehenderit sint est ex\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": false,\n      \"aggregation\": \"LAST\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestNaming/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestNaming",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the request naming to be updated.\n\n The ID of the request naming in the body of the request must match this ID."
												}
											]
										},
										"description": "If the rule with the specified ID doesn't exist, a new rule will be created at the end of the rules list and will be the last to evaluate."
									},
									"response": [
										{
											"name": "Success. Request naming rule has been created. Response contains the new request naming rule's ID and name.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"conditions\": [\n    {\n      \"attribute\": \"HTTP_REQUEST_METHOD\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"SERVICE_TYPE\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"namingPattern\": \"reprehenderit cul\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"d17ae213-29b8-9281-d5fc-2521e4419f80\",\n  \"order\": \"dolore ullamco ea laborum\",\n  \"managementZones\": [\n    \"commodo\"\n  ],\n  \"placeholders\": [\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_COUNT\",\n      \"kind\": \"REGEX_EXTRACTION\",\n      \"name\": \"fugiat dolor officia\",\n      \"delimiterOrRegex\": \"ex tempor U\",\n      \"endDelimiter\": \"ut Lorem sed do\",\n      \"requestAttribute\": \"velit do ipsum et sit\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": true,\n      \"aggregation\": \"COUNT\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"REQUEST_NAME\",\n      \"kind\": \"BETWEEN_DELIMITER\",\n      \"name\": \"dolore\",\n      \"delimiterOrRegex\": \"voluptate\",\n      \"endDelimiter\": \"incididunt esse in exercitation\",\n      \"requestAttribute\": \"irure reprehenderit sint est ex\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": false,\n      \"aggregation\": \"LAST\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/requestNaming/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestNaming",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the request naming to be updated.\n\n The ID of the request naming in the body of the request must match this ID."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Success. Request naming rule has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"conditions\": [\n    {\n      \"attribute\": \"HTTP_REQUEST_METHOD\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"SERVICE_TYPE\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"namingPattern\": \"reprehenderit cul\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"d17ae213-29b8-9281-d5fc-2521e4419f80\",\n  \"order\": \"dolore ullamco ea laborum\",\n  \"managementZones\": [\n    \"commodo\"\n  ],\n  \"placeholders\": [\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_COUNT\",\n      \"kind\": \"REGEX_EXTRACTION\",\n      \"name\": \"fugiat dolor officia\",\n      \"delimiterOrRegex\": \"ex tempor U\",\n      \"endDelimiter\": \"ut Lorem sed do\",\n      \"requestAttribute\": \"velit do ipsum et sit\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": true,\n      \"aggregation\": \"COUNT\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"REQUEST_NAME\",\n      \"kind\": \"BETWEEN_DELIMITER\",\n      \"name\": \"dolore\",\n      \"delimiterOrRegex\": \"voluptate\",\n      \"endDelimiter\": \"incididunt esse in exercitation\",\n      \"requestAttribute\": \"irure reprehenderit sint est ex\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": false,\n      \"aggregation\": \"LAST\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/requestNaming/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestNaming",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the request naming to be updated.\n\n The ID of the request naming in the body of the request must match this ID."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"conditions\": [\n    {\n      \"attribute\": \"HTTP_REQUEST_METHOD\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"SERVICE_TYPE\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"namingPattern\": \"reprehenderit cul\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"d17ae213-29b8-9281-d5fc-2521e4419f80\",\n  \"order\": \"dolore ullamco ea laborum\",\n  \"managementZones\": [\n    \"commodo\"\n  ],\n  \"placeholders\": [\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_COUNT\",\n      \"kind\": \"REGEX_EXTRACTION\",\n      \"name\": \"fugiat dolor officia\",\n      \"delimiterOrRegex\": \"ex tempor U\",\n      \"endDelimiter\": \"ut Lorem sed do\",\n      \"requestAttribute\": \"velit do ipsum et sit\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": true,\n      \"aggregation\": \"COUNT\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"REQUEST_NAME\",\n      \"kind\": \"BETWEEN_DELIMITER\",\n      \"name\": \"dolore\",\n      \"delimiterOrRegex\": \"voluptate\",\n      \"endDelimiter\": \"incididunt esse in exercitation\",\n      \"requestAttribute\": \"irure reprehenderit sint est ex\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": false,\n      \"aggregation\": \"LAST\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/requestNaming/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestNaming",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the request naming to be updated.\n\n The ID of the request naming in the body of the request must match this ID."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified request naming rule",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/service/requestNaming/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestNaming",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the request naming rule to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The rule has been deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/requestNaming/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestNaming",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the request naming rule to be deleted."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Validates the new request naming for the `PUT /requestNaming/{id}` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"conditions\": [\n    {\n      \"attribute\": \"HTTP_REQUEST_METHOD\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"SERVICE_TYPE\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"namingPattern\": \"reprehenderit cul\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"d17ae213-29b8-9281-d5fc-2521e4419f80\",\n  \"order\": \"dolore ullamco ea laborum\",\n  \"managementZones\": [\n    \"commodo\"\n  ],\n  \"placeholders\": [\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_COUNT\",\n      \"kind\": \"REGEX_EXTRACTION\",\n      \"name\": \"fugiat dolor officia\",\n      \"delimiterOrRegex\": \"ex tempor U\",\n      \"endDelimiter\": \"ut Lorem sed do\",\n      \"requestAttribute\": \"velit do ipsum et sit\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": true,\n      \"aggregation\": \"COUNT\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"REQUEST_NAME\",\n      \"kind\": \"BETWEEN_DELIMITER\",\n      \"name\": \"dolore\",\n      \"delimiterOrRegex\": \"voluptate\",\n      \"endDelimiter\": \"incididunt esse in exercitation\",\n      \"requestAttribute\": \"irure reprehenderit sint est ex\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": false,\n      \"aggregation\": \"LAST\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestNaming/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestNaming",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the request naming to be updated.\n\n The ID of the request naming in the body of the request must match this ID."
												}
											]
										},
										"description": "If the rule with the specified ID doesn't exist, a new rule will be created at the end of the rules list and will be the last to evaluate."
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response does not have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"conditions\": [\n    {\n      \"attribute\": \"HTTP_REQUEST_METHOD\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"SERVICE_TYPE\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"namingPattern\": \"reprehenderit cul\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"d17ae213-29b8-9281-d5fc-2521e4419f80\",\n  \"order\": \"dolore ullamco ea laborum\",\n  \"managementZones\": [\n    \"commodo\"\n  ],\n  \"placeholders\": [\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_COUNT\",\n      \"kind\": \"REGEX_EXTRACTION\",\n      \"name\": \"fugiat dolor officia\",\n      \"delimiterOrRegex\": \"ex tempor U\",\n      \"endDelimiter\": \"ut Lorem sed do\",\n      \"requestAttribute\": \"velit do ipsum et sit\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": true,\n      \"aggregation\": \"COUNT\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"REQUEST_NAME\",\n      \"kind\": \"BETWEEN_DELIMITER\",\n      \"name\": \"dolore\",\n      \"delimiterOrRegex\": \"voluptate\",\n      \"endDelimiter\": \"incididunt esse in exercitation\",\n      \"requestAttribute\": \"irure reprehenderit sint est ex\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": false,\n      \"aggregation\": \"LAST\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/requestNaming/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestNaming",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the request naming to be updated.\n\n The ID of the request naming in the body of the request must match this ID."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"conditions\": [\n    {\n      \"attribute\": \"HTTP_REQUEST_METHOD\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"SERVICE_TYPE\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"namingPattern\": \"reprehenderit cul\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"d17ae213-29b8-9281-d5fc-2521e4419f80\",\n  \"order\": \"dolore ullamco ea laborum\",\n  \"managementZones\": [\n    \"commodo\"\n  ],\n  \"placeholders\": [\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_COUNT\",\n      \"kind\": \"REGEX_EXTRACTION\",\n      \"name\": \"fugiat dolor officia\",\n      \"delimiterOrRegex\": \"ex tempor U\",\n      \"endDelimiter\": \"ut Lorem sed do\",\n      \"requestAttribute\": \"velit do ipsum et sit\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": true,\n      \"aggregation\": \"COUNT\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"REQUEST_NAME\",\n      \"kind\": \"BETWEEN_DELIMITER\",\n      \"name\": \"dolore\",\n      \"delimiterOrRegex\": \"voluptate\",\n      \"endDelimiter\": \"incididunt esse in exercitation\",\n      \"requestAttribute\": \"irure reprehenderit sint est ex\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": false,\n      \"aggregation\": \"LAST\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/requestNaming/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"requestNaming",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the request naming to be updated.\n\n The ID of the request naming in the body of the request must match this ID."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all request naming rules along with their parameters",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service/requestNaming",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"requestNaming"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/requestNaming",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestNaming"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Creates a new request naming rule",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"namingPattern\": \"renamed request\",\n  \"conditions\": [\n    {\n      \"attribute\": \"WEBREQUEST_URL_PATH\",\n      \"comparisonInfo\": {\n        \"type\": \"STRING\",\n        \"comparison\": \"BEGINS_WITH\",\n        \"value\": \"/url\",\n        \"negate\": false,\n        \"caseSensitive\": false\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service/requestNaming?position=APPEND",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"requestNaming"
									],
									"query": [
										{
											"key": "position",
											"value": "APPEND",
											"description": "Order of the new request naming rule. Set to `PREPEND` to prepend it to the list, `APPEND` to append it. Defaults to `APPEND`."
										}
									]
								},
								"description": "The new rule goes to the end of the rules list and will be the last to evaluate. Existing rules remain unaffected."
							},
							"response": [
								{
									"name": "Success. The request naming has been created. Response contains the new service's ID.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"conditions\": [\n    {\n      \"attribute\": \"HTTP_REQUEST_METHOD\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"SERVICE_TYPE\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"namingPattern\": \"reprehenderit cul\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"d17ae213-29b8-9281-d5fc-2521e4419f80\",\n  \"order\": \"dolore ullamco ea laborum\",\n  \"managementZones\": [\n    \"commodo\"\n  ],\n  \"placeholders\": [\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_COUNT\",\n      \"kind\": \"REGEX_EXTRACTION\",\n      \"name\": \"fugiat dolor officia\",\n      \"delimiterOrRegex\": \"ex tempor U\",\n      \"endDelimiter\": \"ut Lorem sed do\",\n      \"requestAttribute\": \"velit do ipsum et sit\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": true,\n      \"aggregation\": \"COUNT\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"REQUEST_NAME\",\n      \"kind\": \"BETWEEN_DELIMITER\",\n      \"name\": \"dolore\",\n      \"delimiterOrRegex\": \"voluptate\",\n      \"endDelimiter\": \"incididunt esse in exercitation\",\n      \"requestAttribute\": \"irure reprehenderit sint est ex\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": false,\n      \"aggregation\": \"LAST\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestNaming?position=APPEND",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestNaming"
											],
											"query": [
												{
													"key": "position",
													"value": "APPEND"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"conditions\": [\n    {\n      \"attribute\": \"HTTP_REQUEST_METHOD\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"SERVICE_TYPE\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"namingPattern\": \"reprehenderit cul\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"d17ae213-29b8-9281-d5fc-2521e4419f80\",\n  \"order\": \"dolore ullamco ea laborum\",\n  \"managementZones\": [\n    \"commodo\"\n  ],\n  \"placeholders\": [\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_COUNT\",\n      \"kind\": \"REGEX_EXTRACTION\",\n      \"name\": \"fugiat dolor officia\",\n      \"delimiterOrRegex\": \"ex tempor U\",\n      \"endDelimiter\": \"ut Lorem sed do\",\n      \"requestAttribute\": \"velit do ipsum et sit\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": true,\n      \"aggregation\": \"COUNT\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"REQUEST_NAME\",\n      \"kind\": \"BETWEEN_DELIMITER\",\n      \"name\": \"dolore\",\n      \"delimiterOrRegex\": \"voluptate\",\n      \"endDelimiter\": \"incididunt esse in exercitation\",\n      \"requestAttribute\": \"irure reprehenderit sint est ex\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": false,\n      \"aggregation\": \"LAST\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestNaming?position=APPEND",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestNaming"
											],
											"query": [
												{
													"key": "position",
													"value": "APPEND"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Reorders the request namings",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service/requestNaming/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"requestNaming",
										"order"
									]
								},
								"description": "This request reorders the request namings according to the given list of IDs. Request namings not present in the body of the request will retain their relative ordering but will be ordered *after* all those present in the request."
							},
							"response": [
								{
									"name": "Success. Request namings have been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestNaming/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestNaming",
												"order"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestNaming/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestNaming",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the new request naming rule for the `POST /requestNaming` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"conditions\": [\n    {\n      \"attribute\": \"HTTP_REQUEST_METHOD\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"SERVICE_TYPE\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"namingPattern\": \"reprehenderit cul\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"d17ae213-29b8-9281-d5fc-2521e4419f80\",\n  \"order\": \"dolore ullamco ea laborum\",\n  \"managementZones\": [\n    \"commodo\"\n  ],\n  \"placeholders\": [\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_COUNT\",\n      \"kind\": \"REGEX_EXTRACTION\",\n      \"name\": \"fugiat dolor officia\",\n      \"delimiterOrRegex\": \"ex tempor U\",\n      \"endDelimiter\": \"ut Lorem sed do\",\n      \"requestAttribute\": \"velit do ipsum et sit\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": true,\n      \"aggregation\": \"COUNT\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"REQUEST_NAME\",\n      \"kind\": \"BETWEEN_DELIMITER\",\n      \"name\": \"dolore\",\n      \"delimiterOrRegex\": \"voluptate\",\n      \"endDelimiter\": \"incididunt esse in exercitation\",\n      \"requestAttribute\": \"irure reprehenderit sint est ex\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": false,\n      \"aggregation\": \"LAST\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service/requestNaming/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"requestNaming",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response does not have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"conditions\": [\n    {\n      \"attribute\": \"HTTP_REQUEST_METHOD\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"SERVICE_TYPE\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"namingPattern\": \"reprehenderit cul\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"d17ae213-29b8-9281-d5fc-2521e4419f80\",\n  \"order\": \"dolore ullamco ea laborum\",\n  \"managementZones\": [\n    \"commodo\"\n  ],\n  \"placeholders\": [\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_COUNT\",\n      \"kind\": \"REGEX_EXTRACTION\",\n      \"name\": \"fugiat dolor officia\",\n      \"delimiterOrRegex\": \"ex tempor U\",\n      \"endDelimiter\": \"ut Lorem sed do\",\n      \"requestAttribute\": \"velit do ipsum et sit\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": true,\n      \"aggregation\": \"COUNT\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"REQUEST_NAME\",\n      \"kind\": \"BETWEEN_DELIMITER\",\n      \"name\": \"dolore\",\n      \"delimiterOrRegex\": \"voluptate\",\n      \"endDelimiter\": \"incididunt esse in exercitation\",\n      \"requestAttribute\": \"irure reprehenderit sint est ex\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": false,\n      \"aggregation\": \"LAST\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestNaming/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestNaming",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"conditions\": [\n    {\n      \"attribute\": \"HTTP_REQUEST_METHOD\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"SERVICE_TYPE\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"enabled\": true,\n  \"namingPattern\": \"reprehenderit cul\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"d17ae213-29b8-9281-d5fc-2521e4419f80\",\n  \"order\": \"dolore ullamco ea laborum\",\n  \"managementZones\": [\n    \"commodo\"\n  ],\n  \"placeholders\": [\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_COUNT\",\n      \"kind\": \"REGEX_EXTRACTION\",\n      \"name\": \"fugiat dolor officia\",\n      \"delimiterOrRegex\": \"ex tempor U\",\n      \"endDelimiter\": \"ut Lorem sed do\",\n      \"requestAttribute\": \"velit do ipsum et sit\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": true,\n      \"aggregation\": \"COUNT\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"REQUEST_NAME\",\n      \"kind\": \"BETWEEN_DELIMITER\",\n      \"name\": \"dolore\",\n      \"delimiterOrRegex\": \"voluptate\",\n      \"endDelimiter\": \"incididunt esse in exercitation\",\n      \"requestAttribute\": \"irure reprehenderit sint est ex\",\n      \"normalization\": \"TO_UPPER_CASE\",\n      \"useFromChildCalls\": false,\n      \"aggregation\": \"LAST\",\n      \"source\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/requestNaming/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"requestNaming",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "resource Naming",
					"item": [
						{
							"name": "Lists the global service resource requests.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service/resourceNaming",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"resourceNaming"
									]
								},
								"description": "Lists all extensions which currently are renamed to e.g., `Image`"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/resourceNaming",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"resourceNaming"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"binary\": [\n    \"consectetur ut est ullamco proident\",\n    \"tempor in\"\n  ],\n  \"image\": [\n    \"non ma\",\n    \"deserunt consequat sed\"\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}"
								}
							]
						},
						{
							"name": "Updates the global service resource requests.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"binary\": [\n    \"tempor\",\n    \"mollit labore\"\n  ],\n  \"image\": [\n    \"reprehenderit\",\n    \"dolore ut in a\"\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service/resourceNaming",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"resourceNaming"
									]
								},
								"description": "Update all extensions which are renamed to `Image` or `Binary`"
							},
							"response": [
								{
									"name": "Success. The configuration is updated. Response does not have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"binary\": [\n    \"tempor\",\n    \"mollit labore\"\n  ],\n  \"image\": [\n    \"reprehenderit\",\n    \"dolore ut in a\"\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/resourceNaming",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"resourceNaming"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid. See the response body for details.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"binary\": [\n    \"tempor\",\n    \"mollit labore\"\n  ],\n  \"image\": [\n    \"reprehenderit\",\n    \"dolore ut in a\"\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/resourceNaming",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"resourceNaming"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates new resource requests settings for the `PUT /service/resourceRequest` request.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"binary\": [\n    \"tempor\",\n    \"mollit labore\"\n  ],\n  \"image\": [\n    \"reprehenderit\",\n    \"dolore ut in a\"\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service/resourceNaming/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										"resourceNaming",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response does not have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"binary\": [\n    \"tempor\",\n    \"mollit labore\"\n  ],\n  \"image\": [\n    \"reprehenderit\",\n    \"dolore ut in a\"\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/resourceNaming/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"resourceNaming",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid. See the response body for details.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"binary\": [\n    \"tempor\",\n    \"mollit labore\"\n  ],\n  \"image\": [\n    \"reprehenderit\",\n    \"dolore ut in a\"\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/resourceNaming/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"resourceNaming",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "detection Rules",
					"item": [
						{
							"name": "FULL WEB REQUEST",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Gets the properties of the specified service detection rule",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_REQUEST",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the required service detection rule."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The response contains properties of the specified rule.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the required service detection rule."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Failed. The rule with the specified ID doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the required service detection rule."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates an existing service detection rule",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_REQUEST",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the rule to be updated."
														}
													]
												},
												"description": "If a rule with the specified ID doesn't exist, a new rule is created and appended to the end of the rule list. \n\n The request keeps the existing order of rules, unless the **order** parameter is set."
											},
											"response": [
												{
													"name": "Success. The new service detection rule has been created. The response body contains the ID of the rule.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the rule to be updated."
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
												},
												{
													"name": "Success. The service detection rule has been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the rule to be updated."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the rule to be updated."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified service detection rule",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_REQUEST",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the service detection rule to be deleted."
														}
													]
												}
											},
											"response": [
												{
													"name": "Deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be deleted."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The rule with the specified ID doesn't exist.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be deleted."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Validates the payload for the `PUT /service/detectionRules/FULL_WEB_REQUEST/{id}` request",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_REQUEST",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the service detection rule to be validated."
														}
													]
												}
											},
											"response": [
												{
													"name": "Validated. The service detection rule is valid. Response doesn't have a body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_REQUEST",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be validated."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_REQUEST",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be validated."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists all full web request service detection rules",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"FULL_WEB_REQUEST"
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains the ordered list of rules.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_REQUEST"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Creates a new service detection rule",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST?position=APPEND",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"FULL_WEB_REQUEST"
											],
											"query": [
												{
													"key": "position",
													"value": "APPEND",
													"description": "The position of the new rule: \n\n * `APPEND`: at the bottom of the rule list. \n * `PREPEND`: at the top of the rule list. \n\n If not set, the `APPEND` is used."
												}
											]
										},
										"description": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server."
									},
									"response": [
										{
											"name": "Success. The new service detection rule has been created. The response body contains the ID of the rule.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST?position=APPEND",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_REQUEST"
													],
													"query": [
														{
															"key": "position",
															"value": "APPEND"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST?position=APPEND",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_REQUEST"
													],
													"query": [
														{
															"key": "position",
															"value": "APPEND"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Reorders the service detection rules of the specified type",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"FULL_WEB_REQUEST",
												"order"
											]
										},
										"description": "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request."
									},
									"response": [
										{
											"name": "Success. Service detection rules have been reordered. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/order",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_REQUEST",
														"order"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/order",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_REQUEST",
														"order"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /ruleBasedServiceDetection/FULL_WEB_REQUEST` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"FULL_WEB_REQUEST",
												"validator"
											]
										}
									},
									"response": [
										{
											"name": "Validated. The service detection rule is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_REQUEST",
														"validator"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"FULL_WEB_REQUEST\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_REQUEST/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_REQUEST",
														"validator"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "FULL WEB SERVICE",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Shows the properties of the specified service detection rule",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_SERVICE",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the required service detection rule."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The response contains properties of the specified rule.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the required service detection rule."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Failed. The rule with the specified ID doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the required service detection rule."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates an existing service detection rule",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_SERVICE",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the rule to be updated."
														}
													]
												},
												"description": "If the rule with the specified ID doesn't exist, a new rule will be created and appended to the end of the rule list. \n\n The request keeps an existing order of rules, unless the **order** parameter is set."
											},
											"response": [
												{
													"name": "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the rule to be updated."
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
												},
												{
													"name": "Success. The service detection rule has been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the rule to be updated."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the rule to be updated."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified service detection rule",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_SERVICE",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the service detection rule to be deleted."
														}
													]
												}
											},
											"response": [
												{
													"name": "Deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be deleted."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The rule with the specified ID doesn't exist.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be deleted."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Validate the payload for the `PUT /ruleBasedServiceDetection/FULL_WEB_SERVICE/{id}` request",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_SERVICE",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the service detection rule to be validated."
														}
													]
												}
											},
											"response": [
												{
													"name": "Validated. The service detection rule is valid. Response doesn't have a body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_SERVICE",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be validated."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"FULL_WEB_SERVICE",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be validated."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists all full web service detection rules",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"FULL_WEB_SERVICE"
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains the ordered list of rules.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_SERVICE"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Creates a new service detection rule",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE?position=APPEND",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"FULL_WEB_SERVICE"
											],
											"query": [
												{
													"key": "position",
													"value": "APPEND",
													"description": "The position of the new rule: \n\n * `APPEND`: at the end of the rule list. \n * `PREPEND`: on top of the rule list. \n\n"
												}
											]
										},
										"description": "The body must not provide an ID as it will be automatically assigned."
									},
									"response": [
										{
											"name": "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE?position=APPEND",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_SERVICE"
													],
													"query": [
														{
															"key": "position",
															"value": "APPEND"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE?position=APPEND",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_SERVICE"
													],
													"query": [
														{
															"key": "position",
															"value": "APPEND"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Reorders the service detection rules of the specified type",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"FULL_WEB_SERVICE",
												"order"
											]
										},
										"description": "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request."
									},
									"response": [
										{
											"name": "Success. Service detection rules have been reordered. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/order",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_SERVICE",
														"order"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/order",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_SERVICE",
														"order"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /ruleBasedServiceDetection/FULL_WEB_SERVICE` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"FULL_WEB_SERVICE",
												"validator"
											]
										}
									},
									"response": [
										{
											"name": "Validated. The service detection rule is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_SERVICE",
														"validator"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"FULL_WEB_SERVICE\",\n  \"name\": \"My sample rule\",\n  \"description\": \"REST API example\",\n  \"enabled\": true,\n  \"detectAsWebRequestService\": false,\n  \"managementZones\": [\n    \"zone 1\"\n  ],\n  \"conditions\": [\n    {\n      \"attributeType\": \"APPLICATION_ID\",\n      \"compareOperations\": [\n        {\n          \"type\": \"STRING_CONTAINS\",\n          \"invert\": \"false\",\n          \"ignoreCase\": \"false\",\n          \"values\": [\n            \"value1\",\n            \"value2\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"webServiceName\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"webServiceNameSpace\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"applicationId\": {\n    \"valueOverride\": \"abc\"\n  },\n  \"contextRoot\": {\n    \"segmentsToCopyFromUrlPath\": 2,\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"/\"\n      }\n    ]\n  },\n  \"serverName\": {\n    \"transformations\": [\n      {\n        \"type\": \"BEFORE\",\n        \"delimiter\": \"-\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/FULL_WEB_SERVICE/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"FULL_WEB_SERVICE",
														"validator"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "OPAQUE AND EXTERNAL WEB REQUEST",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Shows the properties of the specified service detection rule",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the required service detection rule."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The response contains properties of the specified rule.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the required service detection rule."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}"
												},
												{
													"name": "Failed. The rule with the specified ID doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the required service detection rule."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates an existing service detection rule",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the rule to be updated."
														}
													]
												},
												"description": "If the rule with the specified ID doesn't exist, a new rule will be created and appended to the end of the rule list. \n\n The request keeps an existing order of rules, unless the **order** parameter is set."
											},
											"response": [
												{
													"name": "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the rule to be updated."
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
												},
												{
													"name": "Success. The service detection rule has been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the rule to be updated."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the rule to be updated."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified service detection rule",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the service detection rule to be deleted."
														}
													]
												}
											},
											"response": [
												{
													"name": "Deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be deleted."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The rule with the specified ID doesn't exist.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be deleted."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Validate the payload for the `PUT /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_REQUEST/{id}` request",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the service detection rule to be validated."
														}
													]
												}
											},
											"response": [
												{
													"name": "Validated. The service detection rule is valid. Response doesn't have a body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be validated."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be validated."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists all opaque and external web request service detection rules",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"OPAQUE_AND_EXTERNAL_WEB_REQUEST"
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains the ordered list of rules.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_REQUEST"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Creates a new service detection rule",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST?position=APPEND",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"OPAQUE_AND_EXTERNAL_WEB_REQUEST"
											],
											"query": [
												{
													"key": "position",
													"value": "APPEND",
													"description": "The position of the new rule: \n\n * `APPEND`: at the end of the rule list. \n * `PREPEND`: on top of the rule list. \n\n"
												}
											]
										},
										"description": "The body must not provide an ID as it will be automatically assigned."
									},
									"response": [
										{
											"name": "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST?position=APPEND",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_REQUEST"
													],
													"query": [
														{
															"key": "position",
															"value": "APPEND"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST?position=APPEND",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_REQUEST"
													],
													"query": [
														{
															"key": "position",
															"value": "APPEND"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Reorders the service detection rules of the specified type",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
												"order"
											]
										},
										"description": "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request."
									},
									"response": [
										{
											"name": "Success. Service detection rules have been reordered. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/order",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
														"order"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/order",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
														"order"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_REQUEST` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
												"validator"
											]
										}
									},
									"response": [
										{
											"name": "Validated. The service detection rule is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
														"validator"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"name\": \"id\",\n  \"type\": \"exercitation minim velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"elit veniam\"\n  ],\n  \"id\": \"urn:uuid:f88a29a3-c3e2-c1b0-df7e-4e586e4a429d\",\n  \"order\": \"sit eu occaecat aute aliqua\",\n  \"description\": \"nulla eu nostrud commodo\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"TOP_LEVEL_DOMAIN\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_HOST_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"applicationId\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"consectetur eiusmod incididunt in Duis\"\n  },\n  \"contextRoot\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"segmentsToCopyFromUrlPath\": 10796117\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": true\n  },\n  \"publicDomainName\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"amet mollit id dolore\",\n    \"copyFromHostName\": true\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_REQUEST/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_REQUEST",
														"validator"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "OPAQUE AND EXTERNAL WEB SERVICE",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Shows the properties of the specified service detection rule",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the required service detection rule."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The response contains properties of the specified rule.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the required service detection rule."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}"
												},
												{
													"name": "Failed. The rule with the specified ID doesn't exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the required service detection rule."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Updates an existing service detection rule",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the rule to be updated."
														}
													]
												},
												"description": "If the rule with the specified ID doesn't exist, a new rule will be created and appended to the end of the rule list. \n\n The request keeps an existing order of rules, unless the **order** parameter is set."
											},
											"response": [
												{
													"name": "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the rule to be updated."
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
												},
												{
													"name": "Success. The service detection rule has been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the rule to be updated."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the rule to be updated."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified service detection rule",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the service detection rule to be deleted."
														}
													]
												}
											},
											"response": [
												{
													"name": "Deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be deleted."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The rule with the specified ID doesn't exist.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be deleted."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Validate the payload for the `PUT /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_SERVICE/{id}` request",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The ID of the service detection rule to be validated."
														}
													]
												}
											},
											"response": [
												{
													"name": "Validated. The service detection rule is valid. Response doesn't have a body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be validated."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/:id/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service",
																"detectionRules",
																"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
																":id",
																"validator"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The ID of the service detection rule to be validated."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists all opaque and external web service detection rules",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"OPAQUE_AND_EXTERNAL_WEB_SERVICE"
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains the ordered list of rules.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_SERVICE"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Creates a new service detection rule",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE?position=APPEND",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"OPAQUE_AND_EXTERNAL_WEB_SERVICE"
											],
											"query": [
												{
													"key": "position",
													"value": "APPEND",
													"description": "The position of the new rule: \n\n * `APPEND`: at the end of the rule list. \n * `PREPEND`: on top of the rule list. \n\n"
												}
											]
										},
										"description": "The body must not provide an ID as it will be automatically assigned."
									},
									"response": [
										{
											"name": "Success. The new service detection rule has been created. The response contains short representation of the rule, including the ID.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE?position=APPEND",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_SERVICE"
													],
													"query": [
														{
															"key": "position",
															"value": "APPEND"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE?position=APPEND",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_SERVICE"
													],
													"query": [
														{
															"key": "position",
															"value": "APPEND"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Reorders the service detection rules of the specified type",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
												"order"
											]
										},
										"description": "The request reorders the rules of the specified type according to the order of the IDs in the body of the request. \n\n Rules that are omitted in the body of the request will retain their relative order but will be placed *after* all those present in the request."
									},
									"response": [
										{
											"name": "Success. Service detection rules have been reordered. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/order",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
														"order"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [\n    {\n      \"id\": \"esse\"\n    },\n    {\n      \"id\": \"ad cillum\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/order",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
														"order"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /ruleBasedServiceDetection/OPAQUE_AND_EXTERNAL_WEB_SERVICE` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service",
												"detectionRules",
												"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
												"validator"
											]
										}
									},
									"response": [
										{
											"name": "Validated. The service detection rule is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
														"validator"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false,\n  \"name\": \"incididunt ex\",\n  \"type\": \"consectetur culpa\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"managementZones\": [\n    \"dolore veniam laboris\"\n  ],\n  \"id\": \"urn:uuid:d0e498fc-b799-95d3-acd6-c41da97b91f4\",\n  \"order\": \"in dolore anim\",\n  \"description\": \"culpa\",\n  \"conditions\": [\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"ENDPOINT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PATH\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"URL_PORT\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"PG_TAG\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"OPERATION_NAME\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"attributeType\": \"IP\",\n      \"compareOperations\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"detectAsWebRequestService\": true,\n  \"urlPath\": {\n    \"transformations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"valueOverride\": \"et id labore se\"\n  },\n  \"port\": {\n    \"doNotUseForServiceId\": false\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service/detectionRules/OPAQUE_AND_EXTERNAL_WEB_SERVICE/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service",
														"detectionRules",
														"OPAQUE_AND_EXTERNAL_WEB_SERVICE",
														"validator"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "dashboards",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "share Settings",
							"item": [
								{
									"name": "Gets the sharing configuration of the specified dashboard | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dashboards/:id/shareSettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dashboards",
												":id",
												"shareSettings"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required dashboard."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/dashboards/:id/shareSettings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"dashboards",
														":id",
														"shareSettings"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required dashboard."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"dolor fugiat ut eu\",\n  \"permissions\": [\n    {\n      \"permission\": \"VIEW\",\n      \"type\": \"USER\",\n      \"id\": \"ut commodo\"\n    },\n    {\n      \"permission\": \"VIEW\",\n      \"type\": \"USER\",\n      \"id\": \"adipisicing dolore deserunt\"\n    }\n  ],\n  \"publicAccess\": {\n    \"managementZoneIds\": [\n      \"ut Duis ipsum\",\n      \"commodo incididunt\"\n    ],\n    \"urls\": {\n      \"in_6\": \"cillum id veniam quis laborum\",\n      \"nulla8\": \"ad dolore\",\n      \"aliquipc\": \"aliqua culpa occaecat\"\n    }\n  },\n  \"preset\": true,\n  \"enabled\": false\n}"
										}
									]
								},
								{
									"name": "Updates the sharing configuration of the specified dashboard | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"non irure cillum\",\n  \"permissions\": [\n    {\n      \"permission\": \"EDIT\",\n      \"type\": \"USER\",\n      \"id\": \"Excepteur labore non\"\n    },\n    {\n      \"permission\": \"VIEW\",\n      \"type\": \"ALL\",\n      \"id\": \"in occaecat dolore ipsum\"\n    }\n  ],\n  \"publicAccess\": {\n    \"managementZoneIds\": [\n      \"est do culpa anim\",\n      \"in commodo\"\n    ]\n  },\n  \"preset\": true,\n  \"enabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/dashboards/:id/shareSettings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dashboards",
												":id",
												"shareSettings"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required dashboard."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The configuration has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"non irure cillum\",\n  \"permissions\": [\n    {\n      \"permission\": \"EDIT\",\n      \"type\": \"USER\",\n      \"id\": \"Excepteur labore non\"\n    },\n    {\n      \"permission\": \"VIEW\",\n      \"type\": \"ALL\",\n      \"id\": \"in occaecat dolore ipsum\"\n    }\n  ],\n  \"publicAccess\": {\n    \"managementZoneIds\": [\n      \"est do culpa anim\",\n      \"in commodo\"\n    ]\n  },\n  \"preset\": true,\n  \"enabled\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/dashboards/:id/shareSettings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"dashboards",
														":id",
														"shareSettings"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required dashboard."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"non irure cillum\",\n  \"permissions\": [\n    {\n      \"permission\": \"EDIT\",\n      \"type\": \"USER\",\n      \"id\": \"Excepteur labore non\"\n    },\n    {\n      \"permission\": \"VIEW\",\n      \"type\": \"ALL\",\n      \"id\": \"in occaecat dolore ipsum\"\n    }\n  ],\n  \"publicAccess\": {\n    \"managementZoneIds\": [\n      \"est do culpa anim\",\n      \"in commodo\"\n    ]\n  },\n  \"preset\": true,\n  \"enabled\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/dashboards/:id/shareSettings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"dashboards",
														":id",
														"shareSettings"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required dashboard."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the 'PUT /dashboards/{id}/shareSettings' request | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"non irure cillum\",\n  \"permissions\": [\n    {\n      \"permission\": \"EDIT\",\n      \"type\": \"USER\",\n      \"id\": \"Excepteur labore non\"\n    },\n    {\n      \"permission\": \"VIEW\",\n      \"type\": \"ALL\",\n      \"id\": \"in occaecat dolore ipsum\"\n    }\n  ],\n  \"publicAccess\": {\n    \"managementZoneIds\": [\n      \"est do culpa anim\",\n      \"in commodo\"\n    ]\n  },\n  \"preset\": true,\n  \"enabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/dashboards/:id/shareSettings/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dashboards",
												":id",
												"shareSettings",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the dashboard to be validated. \n\n The ID in the request body must match this ID."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted dashboard share setting is valid. Response doesn't have a body",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"non irure cillum\",\n  \"permissions\": [\n    {\n      \"permission\": \"EDIT\",\n      \"type\": \"USER\",\n      \"id\": \"Excepteur labore non\"\n    },\n    {\n      \"permission\": \"VIEW\",\n      \"type\": \"ALL\",\n      \"id\": \"in occaecat dolore ipsum\"\n    }\n  ],\n  \"publicAccess\": {\n    \"managementZoneIds\": [\n      \"est do culpa anim\",\n      \"in commodo\"\n    ]\n  },\n  \"preset\": true,\n  \"enabled\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/dashboards/:id/shareSettings/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"dashboards",
														":id",
														"shareSettings",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the dashboard to be validated. \n\n The ID in the request body must match this ID."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"non irure cillum\",\n  \"permissions\": [\n    {\n      \"permission\": \"EDIT\",\n      \"type\": \"USER\",\n      \"id\": \"Excepteur labore non\"\n    },\n    {\n      \"permission\": \"VIEW\",\n      \"type\": \"ALL\",\n      \"id\": \"in occaecat dolore ipsum\"\n    }\n  ],\n  \"publicAccess\": {\n    \"managementZoneIds\": [\n      \"est do culpa anim\",\n      \"in commodo\"\n    ]\n  },\n  \"preset\": true,\n  \"enabled\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/dashboards/:id/shareSettings/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"dashboards",
														":id",
														"shareSettings",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the dashboard to be validated. \n\n The ID in the request body must match this ID."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the properties of the specified dashboard",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dashboards/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dashboards",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the required dashboard."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The response body contains parameters of the dashboard.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dashboards/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dashboards",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required dashboard."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"dashboardMetadata\": {\n    \"name\": \"enim nulla labore commodo in\",\n    \"owner\": \"laborum labore ut\",\n    \"shared\": false,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"amet aute eu sunt mol\",\n      \"cillum\"\n    ],\n    \"preset\": true,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"magna sunt\",\n      \"tileType\": \"APPLICATION_METHOD\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"pro\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"aliquip aute\"\n}"
								}
							]
						},
						{
							"name": "Updates the specified dashboard",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboardMetadata\": {\n    \"name\": \"enim nulla labore commodo in\",\n    \"owner\": \"laborum labore ut\",\n    \"shared\": false,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"amet aute eu sunt mol\",\n      \"cillum\"\n    ],\n    \"preset\": true,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"magna sunt\",\n      \"tileType\": \"APPLICATION_METHOD\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"pro\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"aliquip aute\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dashboards/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dashboards",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the dashboard to be updated. \n\n The ID in the request body must match this ID."
										}
									]
								},
								"description": "If the dashboard with the specified ID doesn't exist, a new dashboard is created"
							},
							"response": [
								{
									"name": "Success. The new dashboard has been created. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dashboardMetadata\": {\n    \"name\": \"enim nulla labore commodo in\",\n    \"owner\": \"laborum labore ut\",\n    \"shared\": false,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"amet aute eu sunt mol\",\n      \"cillum\"\n    ],\n    \"preset\": true,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"magna sunt\",\n      \"tileType\": \"APPLICATION_METHOD\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"pro\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"aliquip aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/dashboards/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dashboards",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the dashboard to be updated. \n\n The ID in the request body must match this ID."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Success. The dashboard has been updated. Response doesn't have a body",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dashboardMetadata\": {\n    \"name\": \"enim nulla labore commodo in\",\n    \"owner\": \"laborum labore ut\",\n    \"shared\": false,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"amet aute eu sunt mol\",\n      \"cillum\"\n    ],\n    \"preset\": true,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"magna sunt\",\n      \"tileType\": \"APPLICATION_METHOD\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"pro\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"aliquip aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/dashboards/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dashboards",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the dashboard to be updated. \n\n The ID in the request body must match this ID."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dashboardMetadata\": {\n    \"name\": \"enim nulla labore commodo in\",\n    \"owner\": \"laborum labore ut\",\n    \"shared\": false,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"amet aute eu sunt mol\",\n      \"cillum\"\n    ],\n    \"preset\": true,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"magna sunt\",\n      \"tileType\": \"APPLICATION_METHOD\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"pro\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"aliquip aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/dashboards/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dashboards",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the dashboard to be updated. \n\n The ID in the request body must match this ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified dashboard",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dashboards/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dashboards",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the dashboard to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The dashboard has been deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dashboards/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dashboards",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the dashboard to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validates the payload for the 'PUT /dashboards/{id}' request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboardMetadata\": {\n    \"name\": \"enim nulla labore commodo in\",\n    \"owner\": \"laborum labore ut\",\n    \"shared\": false,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"amet aute eu sunt mol\",\n      \"cillum\"\n    ],\n    \"preset\": true,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"magna sunt\",\n      \"tileType\": \"APPLICATION_METHOD\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"pro\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"aliquip aute\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dashboards/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dashboards",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the dashboard to be validated. \n\n The ID in the request body must match this ID."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted dashboard is valid. Response doesn't have a body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dashboardMetadata\": {\n    \"name\": \"enim nulla labore commodo in\",\n    \"owner\": \"laborum labore ut\",\n    \"shared\": false,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"amet aute eu sunt mol\",\n      \"cillum\"\n    ],\n    \"preset\": true,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"magna sunt\",\n      \"tileType\": \"APPLICATION_METHOD\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"pro\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"aliquip aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/dashboards/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dashboards",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the dashboard to be validated. \n\n The ID in the request body must match this ID."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dashboardMetadata\": {\n    \"name\": \"enim nulla labore commodo in\",\n    \"owner\": \"laborum labore ut\",\n    \"shared\": false,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"amet aute eu sunt mol\",\n      \"cillum\"\n    ],\n    \"preset\": true,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"magna sunt\",\n      \"tileType\": \"APPLICATION_METHOD\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"pro\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"aliquip aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/dashboards/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dashboards",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the dashboard to be validated. \n\n The ID in the request body must match this ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all dashboards of the environment",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dashboards?owner=aliqua&tags=consectetur eu cillum dolore&tags=ea eu",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dashboards"
							],
							"query": [
								{
									"key": "owner",
									"value": "aliqua",
									"description": "The owner of the dashboard."
								},
								{
									"key": "tags",
									"value": "consectetur eu cillum dolore",
									"description": "A list of tags applied to the dashboard. \n\n The dashboard must match **all** the specified tags."
								},
								{
									"key": "tags",
									"value": "ea eu",
									"description": "A list of tags applied to the dashboard. \n\n The dashboard must match **all** the specified tags."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dashboards?owner=aliqua&tags=culpa ea&tags=Ut veniam quis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dashboards"
									],
									"query": [
										{
											"key": "owner",
											"value": "aliqua"
										},
										{
											"key": "tags",
											"value": "culpa ea"
										},
										{
											"key": "tags",
											"value": "Ut veniam quis"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"dashboards\": [\n    {\n      \"id\": \"labo\",\n      \"name\": \"fugiat aute\",\n      \"owner\": \"officia eu Ut velit\"\n    },\n    {\n      \"id\": \"et enim\",\n      \"name\": \"ex esse non\",\n      \"owner\": \"pariatur ut et\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a dashboard",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dashboardMetadata\": {\n    \"name\": \"ut sit in cupidatat\",\n    \"owner\": \"Ut\",\n    \"shared\": true,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"tempor dolore esse\",\n      \"proident dolor exercitation ad do\"\n    ],\n    \"preset\": false,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"Lor\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"ex in aliqua officia qui\",\n      \"tileType\": \"OPENSTACK_PROJECT\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"irure dolor Ut eu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dashboards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dashboards"
							]
						},
						"description": "The body must not provide an ID. An ID is assigned automatically by Dynatrace."
					},
					"response": [
						{
							"name": "Success. The new dashboard has been created. The response body contains the generated ID.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboardMetadata\": {\n    \"name\": \"enim nulla labore commodo in\",\n    \"owner\": \"laborum labore ut\",\n    \"shared\": false,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"amet aute eu sunt mol\",\n      \"cillum\"\n    ],\n    \"preset\": true,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"magna sunt\",\n      \"tileType\": \"APPLICATION_METHOD\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"pro\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"aliquip aute\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dashboards"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
						},
						{
							"name": "Failed. The input is invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboardMetadata\": {\n    \"name\": \"enim nulla labore commodo in\",\n    \"owner\": \"laborum labore ut\",\n    \"shared\": false,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"amet aute eu sunt mol\",\n      \"cillum\"\n    ],\n    \"preset\": true,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"magna sunt\",\n      \"tileType\": \"APPLICATION_METHOD\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"pro\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"aliquip aute\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dashboards"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the 'POST /dashboards' request",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dashboardMetadata\": {\n    \"name\": \"enim nulla labore commodo in\",\n    \"owner\": \"laborum labore ut\",\n    \"shared\": false,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"amet aute eu sunt mol\",\n      \"cillum\"\n    ],\n    \"preset\": true,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"magna sunt\",\n      \"tileType\": \"APPLICATION_METHOD\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"pro\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"aliquip aute\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dashboards/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dashboards",
								"validator"
							]
						},
						"description": "The body must not provide an ID."
					},
					"response": [
						{
							"name": "Validated. The submitted dashboard is valid. The response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboardMetadata\": {\n    \"name\": \"enim nulla labore commodo in\",\n    \"owner\": \"laborum labore ut\",\n    \"shared\": false,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"amet aute eu sunt mol\",\n      \"cillum\"\n    ],\n    \"preset\": true,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"magna sunt\",\n      \"tileType\": \"APPLICATION_METHOD\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"pro\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"aliquip aute\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dashboards/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dashboards",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboardMetadata\": {\n    \"name\": \"enim nulla labore commodo in\",\n    \"owner\": \"laborum labore ut\",\n    \"shared\": false,\n    \"dashboardFilter\": {\n      \"timeframe\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementZone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"tags\": [\n      \"amet aute eu sunt mol\",\n      \"cillum\"\n    ],\n    \"preset\": true,\n    \"dynamicFilters\": {\n      \"filters\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tagSuggestionTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tiles\": [\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"magna sunt\",\n      \"tileType\": \"APPLICATION_METHOD\",\n      \"configured\": false,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"bounds\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"pro\",\n      \"tileType\": \"NETWORK_MEDIUM\",\n      \"configured\": true,\n      \"tileFilter\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"aliquip aute\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dashboards/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dashboards",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "data Privacy",
			"item": [
				{
					"name": "Lists the global data privacy and security settings",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dataPrivacy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataPrivacy"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dataPrivacy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataPrivacy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"maskIpAddressesAndGpsCoordinates\": false,\n  \"maskPersonalDataInUris\": true,\n  \"maskUserActionNames\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"logAuditEvents\": false\n}"
						}
					]
				},
				{
					"name": "Updates the global data privacy and security settings",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"maskIpAddressesAndGpsCoordinates\": false,\n  \"maskPersonalDataInUris\": true,\n  \"maskUserActionNames\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"logAuditEvents\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dataPrivacy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataPrivacy"
							]
						},
						"description": "This request updates global settings, affecting all your applications. \n\n To update application-specific data privacy settings, use the [**PUT data privacy of a web application**](https://dt-url.net/q403sv9) request."
					},
					"response": [
						{
							"name": "Success. The configuration has been updated. Response doesn't have a body.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"maskIpAddressesAndGpsCoordinates\": false,\n  \"maskPersonalDataInUris\": true,\n  \"maskUserActionNames\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"logAuditEvents\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dataPrivacy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataPrivacy"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"maskIpAddressesAndGpsCoordinates\": false,\n  \"maskPersonalDataInUris\": true,\n  \"maskUserActionNames\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"logAuditEvents\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dataPrivacy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataPrivacy"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the `PUT /dataPrivacy` request",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"maskIpAddressesAndGpsCoordinates\": false,\n  \"maskPersonalDataInUris\": true,\n  \"maskUserActionNames\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"logAuditEvents\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dataPrivacy/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataPrivacy",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"maskIpAddressesAndGpsCoordinates\": false,\n  \"maskPersonalDataInUris\": true,\n  \"maskUserActionNames\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"logAuditEvents\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dataPrivacy/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataPrivacy",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"maskIpAddressesAndGpsCoordinates\": false,\n  \"maskPersonalDataInUris\": true,\n  \"maskUserActionNames\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"logAuditEvents\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dataPrivacy/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataPrivacy",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "extensions",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "instances",
							"item": [
								{
									"name": "{configuration Id}",
									"item": [
										{
											"name": "Returns instance of local configuration for given extension | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:id/instances/:configurationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":id",
														"instances",
														":configurationId"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the extension."
														},
														{
															"key": "configurationId",
															"value": "aliqua",
															"description": "(Required) The ID of the configuration."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:id/instances/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":id",
																"instances",
																":configurationId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the extension."
																},
																{
																	"key": "configurationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the configuration."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": false,\n  \"useGlobal\": true,\n  \"extensionId\": \"voluptate dolor\",\n  \"properties\": {\n    \"cupidatat_70\": \"dolore ad\"\n  },\n  \"hostId\": \"pariatur velit\",\n  \"activeGate\": {\n    \"id\": \"irure commodo quis ali\",\n    \"name\": \"dolore anim\",\n    \"description\": \"ea sit\"\n  },\n  \"endpointId\": \"est cillum aliqua consequat\",\n  \"endpointName\": \"culpa deserunt in\"\n}"
												}
											]
										},
										{
											"name": "Updates instance of local configuration for given extension | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"useGlobal\": false,\n  \"extensionId\": \"aliquip\",\n  \"properties\": {\n    \"laboris460\": \"officia nulla ad\",\n    \"Lorem__\": \"voluptate sint\"\n  },\n  \"hostId\": \"proident\",\n  \"activeGate\": {\n    \"id\": \"sit fugiat\"\n  },\n  \"endpointId\": \"aute culpa dolore eu\",\n  \"endpointName\": \"mollit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:id/instances/:configurationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":id",
														"instances",
														":configurationId"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the extension where you want to update the configuration. \n\nIf you set the extension ID in the body as well, it must match this ID."
														},
														{
															"key": "configurationId",
															"value": "aliqua",
															"description": "(Required) The ID of the configuration to be updated."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The configuration has been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true,\n  \"useGlobal\": false,\n  \"extensionId\": \"aliquip\",\n  \"properties\": {\n    \"laboris460\": \"officia nulla ad\",\n    \"Lorem__\": \"voluptate sint\"\n  },\n  \"hostId\": \"proident\",\n  \"activeGate\": {\n    \"id\": \"sit fugiat\"\n  },\n  \"endpointId\": \"aute culpa dolore eu\",\n  \"endpointName\": \"mollit\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/extensions/:id/instances/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":id",
																"instances",
																":configurationId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the extension where you want to update the configuration. \n\nIf you set the extension ID in the body as well, it must match this ID."
																},
																{
																	"key": "configurationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the configuration to be updated."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": true,\n  \"useGlobal\": false,\n  \"extensionId\": \"aliquip\",\n  \"properties\": {\n    \"laboris460\": \"officia nulla ad\",\n    \"Lorem__\": \"voluptate sint\"\n  },\n  \"hostId\": \"proident\",\n  \"activeGate\": {\n    \"id\": \"sit fugiat\"\n  },\n  \"endpointId\": \"aute culpa dolore eu\",\n  \"endpointName\": \"mollit\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/extensions/:id/instances/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":id",
																"instances",
																":configurationId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the extension where you want to update the configuration. \n\nIf you set the extension ID in the body as well, it must match this ID."
																},
																{
																	"key": "configurationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the configuration to be updated."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Deletes an existing configuration of the extension | maturity=EARLY_ADOPTER",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/extensions/:id/instances/:configurationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":id",
														"instances",
														":configurationId"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the extension where you want to delete the configuration."
														},
														{
															"key": "configurationId",
															"value": "aliqua",
															"description": "(Required) The ID of the configuration to be deleted."
														}
													]
												}
											},
											"response": [
												{
													"name": "Deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/extensions/:id/instances/:configurationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"extensions",
																":id",
																"instances",
																":configurationId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the extension where you want to delete the configuration."
																},
																{
																	"key": "configurationId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the configuration to be deleted."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Returns list of all local configuration instances for given extension | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:id/instances?pageSize=200&nextPageKey=aliqua",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":id",
												"instances"
											],
											"query": [
												{
													"key": "pageSize",
													"value": "200",
													"description": "The number of results per result page. Must be between 1 and 500"
												},
												{
													"key": "nextPageKey",
													"value": "aliqua",
													"description": "The cursor for the next page of results."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required extension."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:id/instances?pageSize=200&nextPageKey=aliqua",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":id",
														"instances"
													],
													"query": [
														{
															"key": "pageSize",
															"value": "200"
														},
														{
															"key": "nextPageKey",
															"value": "aliqua"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required extension."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"configurationsList\": [\n    {\n      \"id\": \"exercitation nisi do\",\n      \"name\": \"consequat dolor magna\",\n      \"description\": \"voluptate id eu\"\n    },\n    {\n      \"id\": \"sint eiusmod est\",\n      \"name\": \"adipisicing tempor sint consectetur\",\n      \"description\": \"sit Excepteur\"\n    }\n  ],\n  \"totalResults\": -55751417,\n  \"nextPageKey\": \"dolore cupidatat magna occaecat ad\"\n}"
										}
									]
								},
								{
									"name": "Creates instance of local configuration for given extension | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"useGlobal\": false,\n  \"extensionId\": \"aliquip\",\n  \"properties\": {\n    \"laboris460\": \"officia nulla ad\",\n    \"Lorem__\": \"voluptate sint\"\n  },\n  \"hostId\": \"proident\",\n  \"activeGate\": {\n    \"id\": \"sit fugiat\"\n  },\n  \"endpointId\": \"aute culpa dolore eu\",\n  \"endpointName\": \"mollit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:id/instances",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":id",
												"instances"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the extension"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The extension configuration has been created. Response contains the ID of the new configuration.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"useGlobal\": false,\n  \"extensionId\": \"aliquip\",\n  \"properties\": {\n    \"laboris460\": \"officia nulla ad\",\n    \"Lorem__\": \"voluptate sint\"\n  },\n  \"hostId\": \"proident\",\n  \"activeGate\": {\n    \"id\": \"sit fugiat\"\n  },\n  \"endpointId\": \"aute culpa dolore eu\",\n  \"endpointName\": \"mollit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:id/instances",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":id",
														"instances"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the extension"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"useGlobal\": false,\n  \"extensionId\": \"aliquip\",\n  \"properties\": {\n    \"laboris460\": \"officia nulla ad\",\n    \"Lorem__\": \"voluptate sint\"\n  },\n  \"hostId\": \"proident\",\n  \"activeGate\": {\n    \"id\": \"sit fugiat\"\n  },\n  \"endpointId\": \"aute culpa dolore eu\",\n  \"endpointName\": \"mollit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:id/instances",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":id",
														"instances"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the extension"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /extensions/{id}/instances` request | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"useGlobal\": false,\n  \"extensionId\": \"aliquip\",\n  \"properties\": {\n    \"laboris460\": \"officia nulla ad\",\n    \"Lorem__\": \"voluptate sint\"\n  },\n  \"hostId\": \"proident\",\n  \"activeGate\": {\n    \"id\": \"sit fugiat\"\n  },\n  \"endpointId\": \"aute culpa dolore eu\",\n  \"endpointName\": \"mollit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:id/instances/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":id",
												"instances",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the extension."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"useGlobal\": false,\n  \"extensionId\": \"aliquip\",\n  \"properties\": {\n    \"laboris460\": \"officia nulla ad\",\n    \"Lorem__\": \"voluptate sint\"\n  },\n  \"hostId\": \"proident\",\n  \"activeGate\": {\n    \"id\": \"sit fugiat\"\n  },\n  \"endpointId\": \"aute culpa dolore eu\",\n  \"endpointName\": \"mollit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:id/instances/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":id",
														"instances",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the extension."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"useGlobal\": false,\n  \"extensionId\": \"aliquip\",\n  \"properties\": {\n    \"laboris460\": \"officia nulla ad\",\n    \"Lorem__\": \"voluptate sint\"\n  },\n  \"hostId\": \"proident\",\n  \"activeGate\": {\n    \"id\": \"sit fugiat\"\n  },\n  \"endpointId\": \"aute culpa dolore eu\",\n  \"endpointName\": \"mollit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:id/instances/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":id",
														"instances",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the extension."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "global",
							"item": [
								{
									"name": "Get the global configuration of the specified OneAgent or JMX extension | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:id/global",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":id",
												"global"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the extension to be updated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Global configuration of given extension.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/extensions/:id/global",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":id",
														"global"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the extension to be updated."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"enabled\": true,\n  \"extensionId\": \"sed\",\n  \"infraOnlyEnabled\": true,\n  \"properties\": {\n    \"qui_a\": \"eiusmod enim nostrud\",\n    \"consequatec2\": \"aute\"\n  }\n}"
										}
									]
								},
								{
									"name": "Updates the configuration of the specified OneAgent or JMX extension | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"extensionId\": \"sed\",\n  \"infraOnlyEnabled\": true,\n  \"properties\": {\n    \"qui_a\": \"eiusmod enim nostrud\",\n    \"consequatec2\": \"aute\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/extensions/:id/global",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":id",
												"global"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the extension to be updated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Extension configuration has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"extensionId\": \"sed\",\n  \"infraOnlyEnabled\": true,\n  \"properties\": {\n    \"qui_a\": \"eiusmod enim nostrud\",\n    \"consequatec2\": \"aute\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:id/global",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":id",
														"global"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the extension to be updated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"extensionId\": \"sed\",\n  \"infraOnlyEnabled\": true,\n  \"properties\": {\n    \"qui_a\": \"eiusmod enim nostrud\",\n    \"consequatec2\": \"aute\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/extensions/:id/global",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"extensions",
														":id",
														"global"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the extension to be updated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists the properties of the specified extension | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the required extension."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required extension."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"officia quis amet\",\n  \"name\": \"consectetur anim exe\",\n  \"version\": \"labore sint veniam do nostrud\",\n  \"type\": \"CODEMODULE\",\n  \"metricGroup\": \"minim sed\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"properties\": [\n    {\n      \"key\": \"aliquip do\",\n      \"type\": \"ullamco in\",\n      \"defaultValue\": \"aute quis dolore voluptate offi\",\n      \"dropdownValues\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"key\": \"dolor elit\",\n      \"type\": \"tempor officia minim\",\n      \"defaultValue\": \"nostrud Ut \",\n      \"dropdownValues\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Deletes the ZIP file of the specified extension | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/extensions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the extension to be deleted."
										}
									]
								},
								"description": "Deletion of the extension file uninstalls the extension, making it unavailable for use."
							},
							"response": [
								{
									"name": "Deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the extension to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Downloads the ZIP file of the specified extension | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/extensions/:id/binary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										":id",
										"binary"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the extension you want to download."
										}
									]
								}
							},
							"response": [
								{
									"name": "ZIP file of the extension",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:id/binary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":id",
												"binary"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the extension you want to download."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Lists the states of the specified extension | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/:id/states?pageSize=200&nextPageKey=aliqua&state=ERROR_AUTH",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										":id",
										"states"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "200",
											"description": "The number of results per result page. Must be between 1 and 500"
										},
										{
											"key": "nextPageKey",
											"value": "aliqua",
											"description": "The cursor for the next page of results."
										},
										{
											"key": "state",
											"value": "ERROR_AUTH",
											"description": "Extension state to filter."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the required extension."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/extensions/:id/states?pageSize=200&nextPageKey=aliqua&state=ERROR_AUTH",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"extensions",
												":id",
												"states"
											],
											"query": [
												{
													"key": "pageSize",
													"value": "200"
												},
												{
													"key": "nextPageKey",
													"value": "aliqua"
												},
												{
													"key": "state",
													"value": "ERROR_AUTH"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required extension."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"states\": [\n    {\n      \"extensionId\": \"custom.python.connectionpool\",\n      \"version\": \"1.82\",\n      \"endpointId\": \"null\",\n      \"state\": \"OK\",\n      \"stateDescription\": \"\",\n      \"timestamp\": 1578578108213,\n      \"hostId\": \"HOST-01A7DEFA5340A86D\",\n      \"processId\": \"PROCESS_GROUP_INSTANCE-2182DF2E20E3E067\"\n    }\n  ],\n  \"totalResults\": 9,\n  \"nextPageToken\": \"LlUdYmu5S2MfX/ppfCInR9M=\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all uploaded extensions | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/extensions?pageSize=200&nextPageKey=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "200",
									"description": "The number of results per result page. Must be between 1 and 500"
								},
								{
									"key": "nextPageKey",
									"value": "aliqua",
									"description": "The cursor for the next page of results."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions?pageSize=200&nextPageKey=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "200"
										},
										{
											"key": "nextPageKey",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"extensions\": [\n    {\n      \"name\": \"Connection Pool\",\n      \"type\": \"ONEAGENT\"\n    }\n  ],\n  \"totalResults\": 9,\n  \"nextPageToken\": \"LlUdYmu5S2MfX/ppfCInR9M=\"\n}"
						}
					]
				},
				{
					"name": "Uploads a ZIP extension file | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) Extension ZIP file to be uploaded. \n\n File name must match the **name** field in the `plugin.json` file. \n\nFor example, for the extension whose **name** is `custom.remote.python.demo`, the name of the extension file must be `custom.remote.python.demo.zip`.",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/extensions?overrideAlerts=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions"
							],
							"query": [
								{
									"key": "overrideAlerts",
									"value": "false",
									"description": "Use extension-defined thresholds for alerts (`true`) or user-defined thresholds (`false`). \n\n Extension-defined thresholds are stored in the `plugin.json` file. \n\nIf not set, user-defined thresholds are used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success. Extension has been uploaded. Response contains the ID of the extension.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) Extension ZIP file to be uploaded. \n\n File name must match the **name** field in the `plugin.json` file. \n\nFor example, for the extension whose **name** is `custom.remote.python.demo`, the name of the extension file must be `custom.remote.python.demo.zip`.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?overrideAlerts=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "overrideAlerts",
											"value": "false"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
						},
						{
							"name": "Failed. The input is invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) Extension ZIP file to be uploaded. \n\n File name must match the **name** field in the `plugin.json` file. \n\nFor example, for the extension whose **name** is `custom.remote.python.demo`, the name of the extension file must be `custom.remote.python.demo.zip`.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions?overrideAlerts=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions"
									],
									"query": [
										{
											"key": "overrideAlerts",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Lists all available hosts that have specified technology running | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/extensions/:technology/availableHosts?tag=veniam officia Ut sit&tag=Lorem voluptate&managementZone=38040604&hostGroupId=aliqua&hostGroupName=aliqua&pageSize=200&nextPageKey=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions",
								":technology",
								"availableHosts"
							],
							"query": [
								{
									"key": "tag",
									"value": "veniam officia Ut sit",
									"description": "Filters the resulting set of hosts by the specified tag. \n\n You can specify several tags in the following format: `tag=tag1&tag=tag2`. The host has to match **all** the specified tags."
								},
								{
									"key": "tag",
									"value": "Lorem voluptate",
									"description": "Filters the resulting set of hosts by the specified tag. \n\n You can specify several tags in the following format: `tag=tag1&tag=tag2`. The host has to match **all** the specified tags."
								},
								{
									"key": "managementZone",
									"value": "38040604",
									"description": "Only return hosts that are part of the specified management zone."
								},
								{
									"key": "hostGroupId",
									"value": "aliqua",
									"description": "Filters the resulting set of hosts by the specified host group. \n\n Specify the Dynatrace IDs of the host group you're interested in."
								},
								{
									"key": "hostGroupName",
									"value": "aliqua",
									"description": "Filters the resulting set of hosts by the specified host group. \n\n Specify the name of the host group you're interested in."
								},
								{
									"key": "pageSize",
									"value": "200",
									"description": "The number of results per result page. Must be between 1 and 500"
								},
								{
									"key": "nextPageKey",
									"value": "aliqua",
									"description": "The cursor for the next page of results."
								}
							],
							"variable": [
								{
									"key": "technology",
									"value": "SPARK",
									"description": "(Required) Name of requested technology"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/:technology/availableHosts?tag=mollit irure est labore&tag=ex officia sed irure ani&managementZone=38040604&hostGroupId=aliqua&hostGroupName=aliqua&pageSize=200&nextPageKey=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										":technology",
										"availableHosts"
									],
									"query": [
										{
											"key": "tag",
											"value": "mollit irure est labore"
										},
										{
											"key": "tag",
											"value": "ex officia sed irure ani"
										},
										{
											"key": "managementZone",
											"value": "38040604"
										},
										{
											"key": "hostGroupId",
											"value": "aliqua"
										},
										{
											"key": "hostGroupName",
											"value": "aliqua"
										},
										{
											"key": "pageSize",
											"value": "200"
										},
										{
											"key": "nextPageKey",
											"value": "aliqua"
										}
									],
									"variable": [
										{
											"key": "technology",
											"value": "SPARK",
											"description": "(Required) Name of requested technology"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalResults\": 70419494,\n  \"hosts\": [\n    {\n      \"name\": \"example host\",\n      \"hostGroup\": {\n        \"meId\": \"HOST_GROUP-CF1DA380B3A53F17\",\n        \"name\": \"example host group\"\n      },\n      \"tags\": [\n        \"tagA\",\n        \"tagB\"\n      ],\n      \"managementZones\": [\n        {\n          \"name\": \"example zone\"\n        }\n      ]\n    },\n    {\n      \"name\": \"example host\",\n      \"hostGroup\": {\n        \"meId\": \"HOST_GROUP-CF1DA380B3A53F17\",\n        \"name\": \"example host group\"\n      },\n      \"tags\": [\n        \"tagA\",\n        \"tagB\"\n      ],\n      \"managementZones\": [\n        {\n          \"name\": \"example zone\"\n        }\n      ]\n    }\n  ],\n  \"nextPageKey\": \"nulla Excepteur sed sit\"\n}"
						}
					]
				},
				{
					"name": "List available ActiveGate extension modules | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/extensions/activeGateExtensionModules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions",
								"activeGateExtensionModules"
							]
						}
					},
					"response": [
						{
							"name": "Success. The response contains IDs of ActiveGate extension modules. Use them to configure ActiveGate extension endpoints.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/extensions/activeGateExtensionModules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"activeGateExtensionModules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Validates a ZIP extension file for `POST/extensions` request | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) The ZIP extension file to be uploaded. \n\n The file name must match the ID of the extension. Example: `custom.remote.python.demo.zip`",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/extensions/validator?jsonOnly=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"extensions",
								"validator"
							],
							"query": [
								{
									"key": "jsonOnly",
									"value": "false",
									"description": "Validate only the `plugin.json` file (`true`) or the entire extension structure (`false`). \n\n If not set, the entire extension is validated. "
								}
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted extension is valid. Response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) The ZIP extension file to be uploaded. \n\n The file name must match the ID of the extension. Example: `custom.remote.python.demo.zip`",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions/validator?jsonOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"validator"
									],
									"query": [
										{
											"key": "jsonOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) The ZIP extension file to be uploaded. \n\n The file name must match the ID of the extension. Example: `custom.remote.python.demo.zip`",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/extensions/validator?jsonOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"extensions",
										"validator"
									],
									"query": [
										{
											"key": "jsonOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "frequent Issue Detection",
			"item": [
				{
					"name": "Gets the configuration of frequent issue detection",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/frequentIssueDetection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"frequentIssueDetection"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/frequentIssueDetection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"frequentIssueDetection"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"frequentIssueDetectionApplicationEnabled\": true,\n  \"frequentIssueDetectionServiceEnabled\": true,\n  \"frequentIssueDetectionInfrastructureEnabled\": true\n}"
						}
					]
				},
				{
					"name": "Updates the configuration of frequent issue detection",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"frequentIssueDetectionApplicationEnabled\": true,\n  \"frequentIssueDetectionServiceEnabled\": true,\n  \"frequentIssueDetectionInfrastructureEnabled\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/frequentIssueDetection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"frequentIssueDetection"
							]
						}
					},
					"response": [
						{
							"name": "Success. Configuration has been updated. Response doesn't have a body",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"frequentIssueDetectionApplicationEnabled\": true,\n  \"frequentIssueDetectionServiceEnabled\": true,\n  \"frequentIssueDetectionInfrastructureEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/frequentIssueDetection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"frequentIssueDetection"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"frequentIssueDetectionApplicationEnabled\": true,\n  \"frequentIssueDetectionServiceEnabled\": true,\n  \"frequentIssueDetectionInfrastructureEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/frequentIssueDetection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"frequentIssueDetection"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the `PUT /frequentIssueDetection` request",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"frequentIssueDetectionApplicationEnabled\": true,\n  \"frequentIssueDetectionServiceEnabled\": true,\n  \"frequentIssueDetectionInfrastructureEnabled\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/frequentIssueDetection/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"frequentIssueDetection",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"frequentIssueDetectionApplicationEnabled\": true,\n  \"frequentIssueDetectionServiceEnabled\": true,\n  \"frequentIssueDetectionInfrastructureEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/frequentIssueDetection/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"frequentIssueDetection",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"frequentIssueDetectionApplicationEnabled\": true,\n  \"frequentIssueDetectionServiceEnabled\": true,\n  \"frequentIssueDetectionInfrastructureEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/frequentIssueDetection/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"frequentIssueDetection",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "geographic Regions",
			"item": [
				{
					"name": "ip Address Mappings",
					"item": [
						{
							"name": "Gets the configuration of mapping between IP address and geographic regions",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/geographicRegions/ipAddressMappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"geographicRegions",
										"ipAddressMappings"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/geographicRegions/ipAddressMappings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"geographicRegions",
												"ipAddressMappings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"ipAddressMappingRules\": [\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Updates the configuration of mapping between IP address and geographic regions",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddressMappingRules\": [\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/geographicRegions/ipAddressMappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"geographicRegions",
										"ipAddressMappings"
									]
								},
								"description": "The request overwrites the existing configuration. Any rules not presented in the payload will be lost."
							},
							"response": [
								{
									"name": "Success. The configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ipAddressMappingRules\": [\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/geographicRegions/ipAddressMappings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"geographicRegions",
												"ipAddressMappings"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ipAddressMappingRules\": [\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/geographicRegions/ipAddressMappings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"geographicRegions",
												"ipAddressMappings"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /geographicRegions/ipAddressMappings` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipAddressMappingRules\": [\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/geographicRegions/ipAddressMappings/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"geographicRegions",
										"ipAddressMappings",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ipAddressMappingRules\": [\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/geographicRegions/ipAddressMappings/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"geographicRegions",
												"ipAddressMappings",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ipAddressMappingRules\": [\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"ipAddressMappingLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ipAddressRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/geographicRegions/ipAddressMappings/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"geographicRegions",
												"ipAddressMappings",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "ip Detection Headers",
					"item": [
						{
							"name": "Gets the configuration of custom client IP headers",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/geographicRegions/ipDetectionHeaders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"geographicRegions",
										"ipDetectionHeaders"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/geographicRegions/ipDetectionHeaders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"geographicRegions",
												"ipDetectionHeaders"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"ipDetectionHeaders\": [\n    \"nostrud quis\",\n    \"dolore esse\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Updates the configuration of custom client IP headers",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipDetectionHeaders\": [\n    \"qui ve\",\n    \"deserunt velit mollit consectetur et\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/geographicRegions/ipDetectionHeaders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"geographicRegions",
										"ipDetectionHeaders"
									]
								},
								"description": "The request overwrites the existing configuration. Any headers not presented in the payload will be lost."
							},
							"response": [
								{
									"name": "Success. The configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ipDetectionHeaders\": [\n    \"qui ve\",\n    \"deserunt velit mollit consectetur et\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/geographicRegions/ipDetectionHeaders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"geographicRegions",
												"ipDetectionHeaders"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ipDetectionHeaders\": [\n    \"qui ve\",\n    \"deserunt velit mollit consectetur et\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/geographicRegions/ipDetectionHeaders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"geographicRegions",
												"ipDetectionHeaders"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /geographicRegions/ipDetectionHeaders` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ipDetectionHeaders\": [\n    \"qui ve\",\n    \"deserunt velit mollit consectetur et\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/geographicRegions/ipDetectionHeaders/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"geographicRegions",
										"ipDetectionHeaders",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ipDetectionHeaders\": [\n    \"qui ve\",\n    \"deserunt velit mollit consectetur et\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/geographicRegions/ipDetectionHeaders/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"geographicRegions",
												"ipDetectionHeaders",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ipDetectionHeaders\": [\n    \"qui ve\",\n    \"deserunt velit mollit consectetur et\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/geographicRegions/ipDetectionHeaders/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"geographicRegions",
												"ipDetectionHeaders",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "hostgroups/{id}",
			"item": [
				{
					"name": "autoupdate",
					"item": [
						{
							"name": "Gets the configuration of OneAgent auto-update in the specified host group",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hostgroups/:id/autoupdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hostgroups",
										":id",
										"autoupdate"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The Dynatrace entity ID of the required host group."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/hostgroups/:id/autoupdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hostgroups",
												":id",
												"autoupdate"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required host group."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"HOST_GROUP-0123456789ABCDE\",\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"effectiveSetting\": \"DISABLED\",\n  \"effectiveVersion\": \"1.181.0\"\n}"
								}
							]
						},
						{
							"name": "Updates the configuration of OneAgent auto-update in the specified host group",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/hostgroups/:id/autoupdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hostgroups",
										":id",
										"autoupdate"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The Dynatrace entity ID of the required host group."
										}
									]
								},
								"description": "OneAgents are updated several minutes after the change of configuration. \n\nThe process can take more time depending on number of OneAgents in the update queue."
							},
							"response": [
								{
									"name": "Success. The configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hostgroups/:id/autoupdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hostgroups",
												":id",
												"autoupdate"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required host group."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hostgroups/:id/autoupdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hostgroups",
												":id",
												"autoupdate"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required host group."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /hostgroups/{id}/autoupdate` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/hostgroups/:id/autoupdate/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hostgroups",
										":id",
										"autoupdate",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The Dynatrace entity ID of the required host group."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hostgroups/:id/autoupdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hostgroups",
												":id",
												"autoupdate",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required host group."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"DISABLED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"version\": \"1.181.0\",\n  \"updateWindows\": {\n    \"windows\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/hostgroups/:id/autoupdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"hostgroups",
												":id",
												"autoupdate",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The Dynatrace entity ID of the required host group."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Gets the OneAgent configuration in the specified host group",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/hostgroups/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hostgroups",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "aliqua",
									"description": "(Required) The Dynatrace entity ID of the required host group."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hostgroups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hostgroups",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The Dynatrace entity ID of the required host group."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"HOST_GROUP-0123456789ABCDE\",\n  \"autoUpdateConfig\": {\n    \"setting\": \"DISABLED\",\n    \"metadata\": {\n      \"configurationVersions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentConfigurationVersions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"clusterVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"id\": \"HOST_GROUP-0123456789ABCDE\",\n    \"version\": \"1.181.0\",\n    \"updateWindows\": {\n      \"windows\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"effectiveSetting\": \"DISABLED\",\n    \"effectiveVersion\": \"1.181.0\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "management Zones",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Lists the parameters of the specified management zone",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/managementZones/:id?includeProcessGroupReferences=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managementZones",
										":id"
									],
									"query": [
										{
											"key": "includeProcessGroupReferences",
											"value": "false",
											"description": "Flag to include process group references to the response. \n\n Process group references aren't compatible across environments. When this flag is set to false, conditions with process group references will be removed. If that leads to a rule having no conditions, the entire rule will be removed."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the required management zone."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managementZones/:id?includeProcessGroupReferences=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managementZones",
												":id"
											],
											"query": [
												{
													"key": "includeProcessGroupReferences",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required management zone."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"laborum in esse Excepteur mollit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"non\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_NETWORK_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AZURE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION_NAMESPACE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"KUBERNETES_CLUSTER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"laborum minim enim aliquip\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"inci\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"deserunt anim enim\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et ut in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"magna incididunt aliquip proident\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum tempor nisi qui\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nisi aliqua dolor\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"sit consectetur\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"incididunt laborum\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"eiusmod elit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliquip eu dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aute dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"Ut ipsum sed\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"velit ex non\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"ad laboris pariatur\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"do dolor aute pariatur laborum\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"deserun\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"fug\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"tempor veniam et dolor laboris\",\n      \"enabled\": false\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Updates the specified management zone",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laborum in esse Excepteur mollit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"non\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_NETWORK_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AZURE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION_NAMESPACE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"KUBERNETES_CLUSTER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"laborum minim enim aliquip\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"inci\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"deserunt anim enim\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et ut in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"magna incididunt aliquip proident\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum tempor nisi qui\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nisi aliqua dolor\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"sit consectetur\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"incididunt laborum\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"eiusmod elit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliquip eu dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aute dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"Ut ipsum sed\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"velit ex non\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"ad laboris pariatur\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"do dolor aute pariatur laborum\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"deserun\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"fug\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"tempor veniam et dolor laboris\",\n      \"enabled\": false\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/managementZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managementZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the management zone to be updated.\n\n If you set the ID in the body as well, it must match this ID."
										}
									]
								},
								"description": "If a management zone with the specified ID doesn't exist, a new one is created."
							},
							"response": [
								{
									"name": "Success. The management zone has been created. The response contains the ID of the new zone.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"laborum in esse Excepteur mollit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"non\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_NETWORK_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AZURE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION_NAMESPACE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"KUBERNETES_CLUSTER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"laborum minim enim aliquip\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"inci\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"deserunt anim enim\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et ut in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"magna incididunt aliquip proident\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum tempor nisi qui\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nisi aliqua dolor\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"sit consectetur\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"incididunt laborum\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"eiusmod elit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliquip eu dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aute dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"Ut ipsum sed\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"velit ex non\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"ad laboris pariatur\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"do dolor aute pariatur laborum\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"deserun\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"fug\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"tempor veniam et dolor laboris\",\n      \"enabled\": false\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/managementZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managementZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the management zone to be updated.\n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Success. The management zone has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"laborum in esse Excepteur mollit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"non\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_NETWORK_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AZURE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION_NAMESPACE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"KUBERNETES_CLUSTER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"laborum minim enim aliquip\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"inci\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"deserunt anim enim\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et ut in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"magna incididunt aliquip proident\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum tempor nisi qui\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nisi aliqua dolor\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"sit consectetur\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"incididunt laborum\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"eiusmod elit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliquip eu dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aute dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"Ut ipsum sed\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"velit ex non\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"ad laboris pariatur\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"do dolor aute pariatur laborum\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"deserun\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"fug\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"tempor veniam et dolor laboris\",\n      \"enabled\": false\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/managementZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managementZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the management zone to be updated.\n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"laborum in esse Excepteur mollit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"non\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_NETWORK_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AZURE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION_NAMESPACE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"KUBERNETES_CLUSTER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"laborum minim enim aliquip\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"inci\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"deserunt anim enim\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et ut in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"magna incididunt aliquip proident\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum tempor nisi qui\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nisi aliqua dolor\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"sit consectetur\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"incididunt laborum\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"eiusmod elit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliquip eu dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aute dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"Ut ipsum sed\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"velit ex non\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"ad laboris pariatur\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"do dolor aute pariatur laborum\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"deserun\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"fug\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"tempor veniam et dolor laboris\",\n      \"enabled\": false\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/managementZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managementZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the management zone to be updated.\n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified management zone",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/managementZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managementZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the management zone to delete."
										}
									]
								}
							},
							"response": [
								{
									"name": "Deleted. Response does not have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/managementZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managementZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the management zone to delete."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validate updates of existing management zone for the `PUT /managementZones/{id}` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laborum in esse Excepteur mollit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"non\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_NETWORK_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AZURE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION_NAMESPACE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"KUBERNETES_CLUSTER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"laborum minim enim aliquip\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"inci\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"deserunt anim enim\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et ut in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"magna incididunt aliquip proident\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum tempor nisi qui\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nisi aliqua dolor\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"sit consectetur\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"incididunt laborum\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"eiusmod elit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliquip eu dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aute dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"Ut ipsum sed\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"velit ex non\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"ad laboris pariatur\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"do dolor aute pariatur laborum\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"deserun\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"fug\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"tempor veniam et dolor laboris\",\n      \"enabled\": false\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/managementZones/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managementZones",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the management zone to validate."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response does not have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"laborum in esse Excepteur mollit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"non\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_NETWORK_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AZURE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION_NAMESPACE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"KUBERNETES_CLUSTER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"laborum minim enim aliquip\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"inci\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"deserunt anim enim\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et ut in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"magna incididunt aliquip proident\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum tempor nisi qui\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nisi aliqua dolor\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"sit consectetur\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"incididunt laborum\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"eiusmod elit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliquip eu dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aute dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"Ut ipsum sed\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"velit ex non\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"ad laboris pariatur\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"do dolor aute pariatur laborum\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"deserun\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"fug\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"tempor veniam et dolor laboris\",\n      \"enabled\": false\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/managementZones/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managementZones",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the management zone to validate."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"laborum in esse Excepteur mollit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"non\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_NETWORK_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AZURE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION_NAMESPACE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"KUBERNETES_CLUSTER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"laborum minim enim aliquip\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"inci\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"deserunt anim enim\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et ut in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"magna incididunt aliquip proident\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum tempor nisi qui\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nisi aliqua dolor\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"sit consectetur\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"incididunt laborum\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"eiusmod elit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliquip eu dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aute dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"Ut ipsum sed\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"velit ex non\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"ad laboris pariatur\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"do dolor aute pariatur laborum\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"deserun\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"fug\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"tempor veniam et dolor laboris\",\n      \"enabled\": false\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/managementZones/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"managementZones",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the management zone to validate."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all configured management zones",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/managementZones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"managementZones"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/managementZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managementZones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new management zone",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"esse quis sed velit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"aliquip cupidatat minim\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CLOUD_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CLOUD_FOUNDRY_FOUNDATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_APPLICATION_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"APPMON_SYSTEM_PROFILE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"APPMON_SERVER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_CLASSIC_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"MOBILE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_CLASSIC_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"EXTERNAL_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"dolor voluptate\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"ad nostrud aute\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"au\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"dolore enim reprehenderit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"non mollit sit\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"adipisicing voluptate dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"qui anim sunt\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"non culpa amet officia irure\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod veniam aute velit Ut\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nulla culpa officia tempor\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum id in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliqua sed velit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"labore ad nulla aliqua sit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"nisi commodo Ut cillum aliqua\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"enim labore ut\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"Duis adipisicing mollit\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"in adipisicing\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et aliqua\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"exercitatio\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"culpa do\",\n      \"enabled\": false\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/managementZones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"managementZones"
							]
						},
						"description": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server."
					},
					"response": [
						{
							"name": "Success. The management zone has been created. The response contains the ID of the new zone.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laborum in esse Excepteur mollit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"non\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_NETWORK_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AZURE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION_NAMESPACE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"KUBERNETES_CLUSTER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"laborum minim enim aliquip\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"inci\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"deserunt anim enim\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et ut in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"magna incididunt aliquip proident\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum tempor nisi qui\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nisi aliqua dolor\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"sit consectetur\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"incididunt laborum\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"eiusmod elit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliquip eu dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aute dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"Ut ipsum sed\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"velit ex non\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"ad laboris pariatur\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"do dolor aute pariatur laborum\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"deserun\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"fug\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"tempor veniam et dolor laboris\",\n      \"enabled\": false\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/managementZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managementZones"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
						},
						{
							"name": "Failed. The input is invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laborum in esse Excepteur mollit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"non\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_NETWORK_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AZURE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION_NAMESPACE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"KUBERNETES_CLUSTER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"laborum minim enim aliquip\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"inci\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"deserunt anim enim\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et ut in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"magna incididunt aliquip proident\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum tempor nisi qui\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nisi aliqua dolor\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"sit consectetur\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"incididunt laborum\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"eiusmod elit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliquip eu dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aute dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"Ut ipsum sed\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"velit ex non\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"ad laboris pariatur\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"do dolor aute pariatur laborum\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"deserun\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"fug\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"tempor veniam et dolor laboris\",\n      \"enabled\": false\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/managementZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managementZones"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates a new management zone for the `POST /managementZones` request",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"laborum in esse Excepteur mollit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"non\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_NETWORK_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AZURE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION_NAMESPACE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"KUBERNETES_CLUSTER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"laborum minim enim aliquip\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"inci\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"deserunt anim enim\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et ut in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"magna incididunt aliquip proident\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum tempor nisi qui\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nisi aliqua dolor\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"sit consectetur\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"incididunt laborum\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"eiusmod elit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliquip eu dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aute dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"Ut ipsum sed\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"velit ex non\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"ad laboris pariatur\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"do dolor aute pariatur laborum\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"deserun\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"fug\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"tempor veniam et dolor laboris\",\n      \"enabled\": false\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/managementZones/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"managementZones",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted configuration is valid. Response does not have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laborum in esse Excepteur mollit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"non\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_NETWORK_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AZURE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION_NAMESPACE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"KUBERNETES_CLUSTER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"laborum minim enim aliquip\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"inci\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"deserunt anim enim\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et ut in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"magna incididunt aliquip proident\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum tempor nisi qui\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nisi aliqua dolor\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"sit consectetur\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"incididunt laborum\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"eiusmod elit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliquip eu dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aute dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"Ut ipsum sed\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"velit ex non\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"ad laboris pariatur\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"do dolor aute pariatur laborum\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"deserun\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"fug\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"tempor veniam et dolor laboris\",\n      \"enabled\": false\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/managementZones/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managementZones",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"laborum in esse Excepteur mollit\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"123456\",\n  \"description\": \"non\",\n  \"rules\": [\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_NETWORK_LOAD_BALANCER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AZURE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_RELATIONAL_DATABASE_SERVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CLOUD_APPLICATION_NAMESPACE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"HOST_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"KUBERNETES_CLUSTER\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"ENTERPRISE_APPLICATION\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"CUSTOM_DEVICE\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HTTP_MONITOR\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"HOST\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true,\n      \"type\": \"AWS_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"AWS_AUTO_SCALING_GROUP\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false,\n      \"type\": \"OPENSTACK_ACCOUNT\",\n      \"propagationTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"dimensionalRules\": [\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"ANY\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": true\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"LOG\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    },\n    {\n      \"appliesTo\": \"METRIC\",\n      \"conditions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"enabled\": false\n    }\n  ],\n  \"entitySelectorBasedRules\": [\n    {\n      \"entitySelector\": \"laborum minim enim aliquip\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"inci\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"deserunt anim enim\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"et ut in\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"magna incididunt aliquip proident\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"cillum tempor nisi qui\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"nisi aliqua dolor\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"sit consectetur\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"incididunt laborum\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"eiusmod elit\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aliquip eu dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"aute dolore\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"Ut ipsum sed\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"eiusmod\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"velit ex non\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"ad laboris pariatur\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"do dolor aute pariatur laborum\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"deserun\",\n      \"enabled\": true\n    },\n    {\n      \"entitySelector\": \"fug\",\n      \"enabled\": false\n    },\n    {\n      \"entitySelector\": \"tempor veniam et dolor laboris\",\n      \"enabled\": false\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/managementZones/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"managementZones",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "calculated Metrics",
			"item": [
				{
					"name": "log",
					"item": [
						{
							"name": "{metric Key}",
							"item": [
								{
									"name": "Gets the definition of the specified custom log metric | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/log/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"log",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "id elit",
													"description": "(Required) The key of the required custom log metric."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/log/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"log",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "id elit",
															"description": "(Required) The key of the required custom log metric."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"metricKey\": \"calc:log.metric\",\n  \"active\": true,\n  \"displayName\": \"Sample metric\",\n  \"unit\": \"HOUR\",\n  \"unitDisplayName\": \"\",\n  \"searchString\": \"\\\"memory fault\\\"\",\n  \"metricValueType\": \"OCCURRENCES\",\n  \"logSourceFilters\": [\n    {\n      \"pathDefinitions\": [\n        {\n          \"definition\": \"/var/log/sample.log\",\n          \"type\": \"FIXED\"\n        }\n      ],\n      \"sourceEntities\": [\n        \"PROCESS_GROUP_INSTANCE-63FC6E7C73DC893F\"\n      ],\n      \"hostFilters\": [\n        \"HOST-066703AD79C38DB5\"\n      ],\n      \"osTypes\": []\n    }\n  ]\n}"
										},
										{
											"name": "Failed. See the response body for details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/log/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"log",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "id elit",
															"description": "(Required) The key of the required custom log metric."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Creates a new custom log metric | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"nisi est aute\",\n  \"logSourceFilters\": [\n    {\n      \"pathDefinitions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"hostFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"osTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"metricKey\": \"calc:log.metric\",\n  \"metricValueType\": \"OCCURRENCES\",\n  \"searchString\": \"prefix1* OR prefix2*\",\n  \"unit\": \"KILO_BYTE_PER_MINUTE\",\n  \"active\": false,\n  \"unitDisplayName\": \"dolor ipsu\",\n  \"columnDefiningValue\": {\n    \"name\": \"id dolor\",\n    \"type\": \"CUSTOM\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/log/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"log",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "id elit",
													"description": "(Required) The required key of the custom log metric. The key must have the `calc:log.` prefix. \n\n The key in the body of the request must match this key."
												}
											]
										},
										"description": "If the metric definition with the specified key already exists, it is updated."
									},
									"response": [
										{
											"name": "Success. The new metric definition has been created. The response body contains the key and the name of the new metric.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"nisi est aute\",\n  \"logSourceFilters\": [\n    {\n      \"pathDefinitions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"hostFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"osTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"metricKey\": \"calc:log.metric\",\n  \"metricValueType\": \"OCCURRENCES\",\n  \"searchString\": \"prefix1* OR prefix2*\",\n  \"unit\": \"KILO_BYTE_PER_MINUTE\",\n  \"active\": false,\n  \"unitDisplayName\": \"dolor ipsu\",\n  \"columnDefiningValue\": {\n    \"name\": \"id dolor\",\n    \"type\": \"CUSTOM\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/log/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"log",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "id elit",
															"description": "(Required) The required key of the custom log metric. The key must have the `calc:log.` prefix. \n\n The key in the body of the request must match this key."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Success. The metric definition has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"nisi est aute\",\n  \"logSourceFilters\": [\n    {\n      \"pathDefinitions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"hostFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"osTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"metricKey\": \"calc:log.metric\",\n  \"metricValueType\": \"OCCURRENCES\",\n  \"searchString\": \"prefix1* OR prefix2*\",\n  \"unit\": \"KILO_BYTE_PER_MINUTE\",\n  \"active\": false,\n  \"unitDisplayName\": \"dolor ipsu\",\n  \"columnDefiningValue\": {\n    \"name\": \"id dolor\",\n    \"type\": \"CUSTOM\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/log/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"log",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "id elit",
															"description": "(Required) The required key of the custom log metric. The key must have the `calc:log.` prefix. \n\n The key in the body of the request must match this key."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"nisi est aute\",\n  \"logSourceFilters\": [\n    {\n      \"pathDefinitions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"hostFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"osTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"metricKey\": \"calc:log.metric\",\n  \"metricValueType\": \"OCCURRENCES\",\n  \"searchString\": \"prefix1* OR prefix2*\",\n  \"unit\": \"KILO_BYTE_PER_MINUTE\",\n  \"active\": false,\n  \"unitDisplayName\": \"dolor ipsu\",\n  \"columnDefiningValue\": {\n    \"name\": \"id dolor\",\n    \"type\": \"CUSTOM\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/log/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"log",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "id elit",
															"description": "(Required) The required key of the custom log metric. The key must have the `calc:log.` prefix. \n\n The key in the body of the request must match this key."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified custom log metric definition | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/log/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"log",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "id elit",
													"description": "(Required) The key of the custom log metric to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/log/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"log",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "id elit",
															"description": "(Required) The key of the custom log metric to be deleted."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. See the response body for details",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/log/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"log",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "id elit",
															"description": "(Required) The key of the custom log metric to be deleted."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Validates the payload for the `PUT /calculatedMetrics/log/{metricKey}` request. | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"nisi est aute\",\n  \"logSourceFilters\": [\n    {\n      \"pathDefinitions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"hostFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"osTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"metricKey\": \"calc:log.metric\",\n  \"metricValueType\": \"OCCURRENCES\",\n  \"searchString\": \"prefix1* OR prefix2*\",\n  \"unit\": \"KILO_BYTE_PER_MINUTE\",\n  \"active\": false,\n  \"unitDisplayName\": \"dolor ipsu\",\n  \"columnDefiningValue\": {\n    \"name\": \"id dolor\",\n    \"type\": \"CUSTOM\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/log/:metricKey/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"log",
												":metricKey",
												"validator"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "id elit",
													"description": "(Required) The key of the custom log metric to be validated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"nisi est aute\",\n  \"logSourceFilters\": [\n    {\n      \"pathDefinitions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"hostFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"osTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"metricKey\": \"calc:log.metric\",\n  \"metricValueType\": \"OCCURRENCES\",\n  \"searchString\": \"prefix1* OR prefix2*\",\n  \"unit\": \"KILO_BYTE_PER_MINUTE\",\n  \"active\": false,\n  \"unitDisplayName\": \"dolor ipsu\",\n  \"columnDefiningValue\": {\n    \"name\": \"id dolor\",\n    \"type\": \"CUSTOM\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/log/:metricKey/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"log",
														":metricKey",
														"validator"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "id elit",
															"description": "(Required) The key of the custom log metric to be validated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. See the response body for details",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"nisi est aute\",\n  \"logSourceFilters\": [\n    {\n      \"pathDefinitions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"sourceEntities\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"hostFilters\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"osTypes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"metricKey\": \"calc:log.metric\",\n  \"metricValueType\": \"OCCURRENCES\",\n  \"searchString\": \"prefix1* OR prefix2*\",\n  \"unit\": \"KILO_BYTE_PER_MINUTE\",\n  \"active\": false,\n  \"unitDisplayName\": \"dolor ipsu\",\n  \"columnDefiningValue\": {\n    \"name\": \"id dolor\",\n    \"type\": \"CUSTOM\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/log/:metricKey/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"log",
														":metricKey",
														"validator"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "id elit",
															"description": "(Required) The key of the custom log metric to be validated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all custom log metrics configured in your environment | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedMetrics/log",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedMetrics",
										"log"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/log",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"log"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
								},
								{
									"name": "Failed. See the response body for details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/log",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"log"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "mobile",
					"item": [
						{
							"name": "{metric Key}",
							"item": [
								{
									"name": "Gets the descriptor of the specified calculated metric for mobile or custom app",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/mobile/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"mobile",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the required metric."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/mobile/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"mobile",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the required metric."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.mobile.mymetric\",\n  \"applicationIdentifier\": \"MOBILE_APPLICATION-1234\",\n  \"metricType\": \"USER_ACTION_DURATION\",\n  \"userActionFilter\": {\n    \"hasHttpError\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"osVersion\": \"OS-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GEOLOCATION\",\n      \"topX\": 20\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Updates the specified calculated metric for a mobile or custom app",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/mobile/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"mobile",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the metric to be updated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The metric has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/mobile/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"mobile",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the metric to be updated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/mobile/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"mobile",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the metric to be updated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified calculated metric for mobile or custom app",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/mobile/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"mobile",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the metric to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/mobile/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"mobile",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the metric to be deleted."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Validates the payload for the `PUT /calculatedMetrics/mobile/{metricKey}` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/mobile/:metricKey/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"mobile",
												":metricKey",
												"validator"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the metric to be validated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted metric is valid. The response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/mobile/:metricKey/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"mobile",
														":metricKey",
														"validator"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the metric to be validated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/mobile/:metricKey/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"mobile",
														":metricKey",
														"validator"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the metric to be validated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all calculated metrics for mobile and custom apps configured in your environment",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedMetrics/mobile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedMetrics",
										"mobile"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/mobile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"mobile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Creates a new calculated metric for a mobile or custom app",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.mobile.mymetric\",\n  \"applicationIdentifier\": \"MOBILE_APPLICATION-1234\",\n  \"metricType\": \"USER_ACTION_DURATION\",\n  \"userActionFilter\": {\n    \"hasHttpError\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"osVersion\": \"OS-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GEOLOCATION\",\n      \"topX\": 20\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedMetrics/mobile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedMetrics",
										"mobile"
									]
								}
							},
							"response": [
								{
									"name": "Success. The calculated mobile metric has been created. Response contains its key and name.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.mobile.mymetric\",\n  \"applicationIdentifier\": \"MOBILE_APPLICATION-1234\",\n  \"metricType\": \"USER_ACTION_DURATION\",\n  \"userActionFilter\": {\n    \"hasHttpError\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"osVersion\": \"OS-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GEOLOCATION\",\n      \"topX\": 20\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/mobile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"mobile"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.mobile.mymetric\",\n  \"applicationIdentifier\": \"MOBILE_APPLICATION-1234\",\n  \"metricType\": \"USER_ACTION_DURATION\",\n  \"userActionFilter\": {\n    \"hasHttpError\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"osVersion\": \"OS-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GEOLOCATION\",\n      \"topX\": 20\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/mobile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"mobile"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /calculatedMetrics/mobile` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.mobile.mymetric\",\n  \"applicationIdentifier\": \"MOBILE_APPLICATION-1234\",\n  \"metricType\": \"USER_ACTION_DURATION\",\n  \"userActionFilter\": {\n    \"hasHttpError\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"osVersion\": \"OS-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GEOLOCATION\",\n      \"topX\": 20\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedMetrics/mobile/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedMetrics",
										"mobile",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted metric is valid. The response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.mobile.mymetric\",\n  \"applicationIdentifier\": \"MOBILE_APPLICATION-1234\",\n  \"metricType\": \"USER_ACTION_DURATION\",\n  \"userActionFilter\": {\n    \"hasHttpError\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"osVersion\": \"OS-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GEOLOCATION\",\n      \"topX\": 20\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/mobile/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"mobile",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.mobile.mymetric\",\n  \"applicationIdentifier\": \"MOBILE_APPLICATION-1234\",\n  \"metricType\": \"USER_ACTION_DURATION\",\n  \"userActionFilter\": {\n    \"hasHttpError\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"osVersion\": \"OS-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GEOLOCATION\",\n      \"topX\": 20\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/mobile/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"mobile",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "rum",
					"item": [
						{
							"name": "{metric Key}",
							"item": [
								{
									"name": "Gets the descriptor of the specified calculated web application metric",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/rum/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"rum",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the required metric."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/rum/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"rum",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the required metric."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.web.mymetric\",\n  \"metricDefinition\": {\n    \"metric\": \"UserActionDuration\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-1234\",\n  \"userActionFilter\": {\n    \"loadAction\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"browserType\": \"BROWSER-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GeoLocation\",\n      \"topX\": 20\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Updates the specified calculated web application metric",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/rum/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"rum",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the calculated web application metric to be updated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The metric has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/rum/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"rum",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the calculated web application metric to be updated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/rum/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"rum",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the calculated web application metric to be updated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified calculated web application metric",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/rum/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"rum",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the metric to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/rum/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"rum",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the metric to be deleted."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Validates the payload for the `PUT /calculatedMetrics/rum/{metricKey}` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/rum/:metricKey/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"rum",
												":metricKey",
												"validator"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the calculated web application metric to be validated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted metric is valid. The response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/rum/:metricKey/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"rum",
														":metricKey",
														"validator"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the calculated web application metric to be validated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/rum/:metricKey/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"rum",
														":metricKey",
														"validator"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the calculated web application metric to be validated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all calculated web application metrics",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedMetrics/rum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedMetrics",
										"rum"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/rum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"rum"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Creates a new calculated web application metric",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.web.mymetric\",\n  \"metricDefinition\": {\n    \"metric\": \"UserActionDuration\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-1234\",\n  \"userActionFilter\": {\n    \"loadAction\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"browserType\": \"BROWSER-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GeoLocation\",\n      \"topX\": 20\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedMetrics/rum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedMetrics",
										"rum"
									]
								}
							},
							"response": [
								{
									"name": "Success. The metric has been created. Response contains its key and name.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.web.mymetric\",\n  \"metricDefinition\": {\n    \"metric\": \"UserActionDuration\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-1234\",\n  \"userActionFilter\": {\n    \"loadAction\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"browserType\": \"BROWSER-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GeoLocation\",\n      \"topX\": 20\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/rum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"rum"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.web.mymetric\",\n  \"metricDefinition\": {\n    \"metric\": \"UserActionDuration\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-1234\",\n  \"userActionFilter\": {\n    \"loadAction\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"browserType\": \"BROWSER-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GeoLocation\",\n      \"topX\": 20\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/rum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"rum"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /calculatedMetrics/rum` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.web.mymetric\",\n  \"metricDefinition\": {\n    \"metric\": \"UserActionDuration\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-1234\",\n  \"userActionFilter\": {\n    \"loadAction\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"browserType\": \"BROWSER-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GeoLocation\",\n      \"topX\": 20\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedMetrics/rum/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedMetrics",
										"rum",
										"validator"
									]
								},
								"description": "The body must not provide an ID."
							},
							"response": [
								{
									"name": "Validated. The submitted metric is valid. The response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.web.mymetric\",\n  \"metricDefinition\": {\n    \"metric\": \"UserActionDuration\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-1234\",\n  \"userActionFilter\": {\n    \"loadAction\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"browserType\": \"BROWSER-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GeoLocation\",\n      \"topX\": 20\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/rum/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"rum",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:apps.web.mymetric\",\n  \"metricDefinition\": {\n    \"metric\": \"UserActionDuration\"\n  },\n  \"applicationIdentifier\": \"APPLICATION-1234\",\n  \"userActionFilter\": {\n    \"loadAction\": true,\n    \"country\": \"GEOLOCATION-1234\",\n    \"browserType\": \"BROWSER-1234\"\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"GeoLocation\",\n      \"topX\": 20\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/rum/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"rum",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "service",
					"item": [
						{
							"name": "{metric Key}",
							"item": [
								{
									"name": "Gets the descriptor of the specified calculated service metric",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/service/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"service",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the required calculated service metric."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/service/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"service",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the required calculated service metric."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"LOCK_TIME\",\n    \"requestAttribute\": \"consecte\"\n  },\n  \"name\": \"consequat proident fugiat\",\n  \"tsmMetricKey\": \"ipsum ad dolore\",\n  \"unit\": \"GIBI_BYTE\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"unitDisplayName\": \"deserunt est tempor occaecat\",\n  \"entityId\": \"culpa commodo\",\n  \"managementZones\": [\n    \"officia reprehenderit deserunt\"\n  ],\n  \"conditions\": [\n    {\n      \"attribute\": \"CTG_GATEWAY_URL\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_TIME\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"dimension\": \"anim Ut\",\n    \"name\": \"ut Ut\",\n    \"topX\": 1,\n    \"topXAggregation\": \"MAX\",\n    \"topXDirection\": \"ASCENDING\",\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}"
										}
									]
								},
								{
									"name": "Updates the specified calculated service metric",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"LOCK_TIME\",\n    \"requestAttribute\": \"consecte\"\n  },\n  \"name\": \"consequat proident fugiat\",\n  \"tsmMetricKey\": \"ipsum ad dolore\",\n  \"unit\": \"GIBI_BYTE\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"unitDisplayName\": \"deserunt est tempor occaecat\",\n  \"entityId\": \"culpa commodo\",\n  \"managementZones\": [\n    \"officia reprehenderit deserunt\"\n  ],\n  \"conditions\": [\n    {\n      \"attribute\": \"CTG_GATEWAY_URL\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_TIME\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"dimension\": \"anim Ut\",\n    \"name\": \"ut Ut\",\n    \"topX\": 1,\n    \"topXAggregation\": \"MAX\",\n    \"topXDirection\": \"ASCENDING\",\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/service/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"service",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the calculated service metric to be updated. \n\n The key of the calculated service metric in the body of the request must match this key."
												}
											]
										},
										"description": "If the calculated service metric with the specified key doesn't exist, a new metric is created."
									},
									"response": [
										{
											"name": "Success. The new calculated service metric has been created. Response contains the key of the new metric.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"LOCK_TIME\",\n    \"requestAttribute\": \"consecte\"\n  },\n  \"name\": \"consequat proident fugiat\",\n  \"tsmMetricKey\": \"ipsum ad dolore\",\n  \"unit\": \"GIBI_BYTE\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"unitDisplayName\": \"deserunt est tempor occaecat\",\n  \"entityId\": \"culpa commodo\",\n  \"managementZones\": [\n    \"officia reprehenderit deserunt\"\n  ],\n  \"conditions\": [\n    {\n      \"attribute\": \"CTG_GATEWAY_URL\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_TIME\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"dimension\": \"anim Ut\",\n    \"name\": \"ut Ut\",\n    \"topX\": 1,\n    \"topXAggregation\": \"MAX\",\n    \"topXDirection\": \"ASCENDING\",\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/service/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"service",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the calculated service metric to be updated. \n\n The key of the calculated service metric in the body of the request must match this key."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Success. The calculated service metric has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"LOCK_TIME\",\n    \"requestAttribute\": \"consecte\"\n  },\n  \"name\": \"consequat proident fugiat\",\n  \"tsmMetricKey\": \"ipsum ad dolore\",\n  \"unit\": \"GIBI_BYTE\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"unitDisplayName\": \"deserunt est tempor occaecat\",\n  \"entityId\": \"culpa commodo\",\n  \"managementZones\": [\n    \"officia reprehenderit deserunt\"\n  ],\n  \"conditions\": [\n    {\n      \"attribute\": \"CTG_GATEWAY_URL\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_TIME\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"dimension\": \"anim Ut\",\n    \"name\": \"ut Ut\",\n    \"topX\": 1,\n    \"topXAggregation\": \"MAX\",\n    \"topXDirection\": \"ASCENDING\",\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/service/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"service",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the calculated service metric to be updated. \n\n The key of the calculated service metric in the body of the request must match this key."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"LOCK_TIME\",\n    \"requestAttribute\": \"consecte\"\n  },\n  \"name\": \"consequat proident fugiat\",\n  \"tsmMetricKey\": \"ipsum ad dolore\",\n  \"unit\": \"GIBI_BYTE\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"unitDisplayName\": \"deserunt est tempor occaecat\",\n  \"entityId\": \"culpa commodo\",\n  \"managementZones\": [\n    \"officia reprehenderit deserunt\"\n  ],\n  \"conditions\": [\n    {\n      \"attribute\": \"CTG_GATEWAY_URL\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_TIME\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"dimension\": \"anim Ut\",\n    \"name\": \"ut Ut\",\n    \"topX\": 1,\n    \"topXAggregation\": \"MAX\",\n    \"topXDirection\": \"ASCENDING\",\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/service/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"service",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the calculated service metric to be updated. \n\n The key of the calculated service metric in the body of the request must match this key."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified calculated service metric",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/service/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"service",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the calculated service metric to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The calculated service metric has been deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/service/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"service",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the calculated service metric to be deleted."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Validates the payload for the `PUT /calculatedMetric/service/{id}` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"LOCK_TIME\",\n    \"requestAttribute\": \"consecte\"\n  },\n  \"name\": \"consequat proident fugiat\",\n  \"tsmMetricKey\": \"ipsum ad dolore\",\n  \"unit\": \"GIBI_BYTE\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"unitDisplayName\": \"deserunt est tempor occaecat\",\n  \"entityId\": \"culpa commodo\",\n  \"managementZones\": [\n    \"officia reprehenderit deserunt\"\n  ],\n  \"conditions\": [\n    {\n      \"attribute\": \"CTG_GATEWAY_URL\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_TIME\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"dimension\": \"anim Ut\",\n    \"name\": \"ut Ut\",\n    \"topX\": 1,\n    \"topXAggregation\": \"MAX\",\n    \"topXDirection\": \"ASCENDING\",\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/service/:metricKey/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"service",
												":metricKey",
												"validator"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the calculated service metric to be validated .\n\n The key of the metric in the body of the request must match this key."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"LOCK_TIME\",\n    \"requestAttribute\": \"consecte\"\n  },\n  \"name\": \"consequat proident fugiat\",\n  \"tsmMetricKey\": \"ipsum ad dolore\",\n  \"unit\": \"GIBI_BYTE\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"unitDisplayName\": \"deserunt est tempor occaecat\",\n  \"entityId\": \"culpa commodo\",\n  \"managementZones\": [\n    \"officia reprehenderit deserunt\"\n  ],\n  \"conditions\": [\n    {\n      \"attribute\": \"CTG_GATEWAY_URL\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_TIME\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"dimension\": \"anim Ut\",\n    \"name\": \"ut Ut\",\n    \"topX\": 1,\n    \"topXAggregation\": \"MAX\",\n    \"topXDirection\": \"ASCENDING\",\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/service/:metricKey/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"service",
														":metricKey",
														"validator"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the calculated service metric to be validated .\n\n The key of the metric in the body of the request must match this key."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"LOCK_TIME\",\n    \"requestAttribute\": \"consecte\"\n  },\n  \"name\": \"consequat proident fugiat\",\n  \"tsmMetricKey\": \"ipsum ad dolore\",\n  \"unit\": \"GIBI_BYTE\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"unitDisplayName\": \"deserunt est tempor occaecat\",\n  \"entityId\": \"culpa commodo\",\n  \"managementZones\": [\n    \"officia reprehenderit deserunt\"\n  ],\n  \"conditions\": [\n    {\n      \"attribute\": \"CTG_GATEWAY_URL\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_TIME\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"dimension\": \"anim Ut\",\n    \"name\": \"ut Ut\",\n    \"topX\": 1,\n    \"topXAggregation\": \"MAX\",\n    \"topXDirection\": \"ASCENDING\",\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/service/:metricKey/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"service",
														":metricKey",
														"validator"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the calculated service metric to be validated .\n\n The key of the metric in the body of the request must match this key."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all calculated service metrics configured in your environment",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedMetrics/service",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedMetrics",
										"service"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/service",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"service"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Creates a new calculated service metric",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tsmMetricKey\": \"calc:service.mymetric\",\n  \"name\": \"My Metric\",\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"CPU_TIME\"\n  },\n  \"managementZones\": [\n    \"zone1\"\n  ],\n  \"unit\": \"MICRO_SECOND\",\n  \"conditions\": [\n    {\n      \"attribute\": \"WEBREQUEST_URL_PATH\",\n      \"comparisonInfo\": {\n        \"type\": \"STRING\",\n        \"comparison\": \"BEGINS_WITH\",\n        \"value\": \"/url_path\",\n        \"negate\": false,\n        \"caseSensitive\": false\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"name\": \"my dimension\",\n    \"dimension\": \"{myPlaceholder}\",\n    \"placeholders\": [\n      {\n        \"name\": \"myPlaceholder\",\n        \"attribute\": \"WEBREQUEST_URL_PATH\",\n        \"kind\": \"BEFORE_DELIMITER\",\n        \"delimiterOrRegex\": \"/booking\",\n        \"normalization\": \"ORIGINAL\",\n        \"useFromChildCalls\": \"false\"\n      }\n    ],\n    \"topX\": 10,\n    \"topXDirection\": \"DESCENDING\",\n    \"topXAggregation\": \"AVERAGE\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedMetrics/service",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedMetrics",
										"service"
									]
								}
							},
							"response": [
								{
									"name": "Success. The calculated service metric has been created. Response contains the key of the new metric.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"LOCK_TIME\",\n    \"requestAttribute\": \"consecte\"\n  },\n  \"name\": \"consequat proident fugiat\",\n  \"tsmMetricKey\": \"ipsum ad dolore\",\n  \"unit\": \"GIBI_BYTE\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"unitDisplayName\": \"deserunt est tempor occaecat\",\n  \"entityId\": \"culpa commodo\",\n  \"managementZones\": [\n    \"officia reprehenderit deserunt\"\n  ],\n  \"conditions\": [\n    {\n      \"attribute\": \"CTG_GATEWAY_URL\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_TIME\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"dimension\": \"anim Ut\",\n    \"name\": \"ut Ut\",\n    \"topX\": 1,\n    \"topXAggregation\": \"MAX\",\n    \"topXDirection\": \"ASCENDING\",\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/service",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"service"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"LOCK_TIME\",\n    \"requestAttribute\": \"consecte\"\n  },\n  \"name\": \"consequat proident fugiat\",\n  \"tsmMetricKey\": \"ipsum ad dolore\",\n  \"unit\": \"GIBI_BYTE\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"unitDisplayName\": \"deserunt est tempor occaecat\",\n  \"entityId\": \"culpa commodo\",\n  \"managementZones\": [\n    \"officia reprehenderit deserunt\"\n  ],\n  \"conditions\": [\n    {\n      \"attribute\": \"CTG_GATEWAY_URL\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_TIME\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"dimension\": \"anim Ut\",\n    \"name\": \"ut Ut\",\n    \"topX\": 1,\n    \"topXAggregation\": \"MAX\",\n    \"topXDirection\": \"ASCENDING\",\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/service",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"service"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /calculatedMetric/service` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"LOCK_TIME\",\n    \"requestAttribute\": \"consecte\"\n  },\n  \"name\": \"consequat proident fugiat\",\n  \"tsmMetricKey\": \"ipsum ad dolore\",\n  \"unit\": \"GIBI_BYTE\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"unitDisplayName\": \"deserunt est tempor occaecat\",\n  \"entityId\": \"culpa commodo\",\n  \"managementZones\": [\n    \"officia reprehenderit deserunt\"\n  ],\n  \"conditions\": [\n    {\n      \"attribute\": \"CTG_GATEWAY_URL\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_TIME\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"dimension\": \"anim Ut\",\n    \"name\": \"ut Ut\",\n    \"topX\": 1,\n    \"topXAggregation\": \"MAX\",\n    \"topXDirection\": \"ASCENDING\",\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedMetrics/service/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedMetrics",
										"service",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"LOCK_TIME\",\n    \"requestAttribute\": \"consecte\"\n  },\n  \"name\": \"consequat proident fugiat\",\n  \"tsmMetricKey\": \"ipsum ad dolore\",\n  \"unit\": \"GIBI_BYTE\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"unitDisplayName\": \"deserunt est tempor occaecat\",\n  \"entityId\": \"culpa commodo\",\n  \"managementZones\": [\n    \"officia reprehenderit deserunt\"\n  ],\n  \"conditions\": [\n    {\n      \"attribute\": \"CTG_GATEWAY_URL\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_TIME\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"dimension\": \"anim Ut\",\n    \"name\": \"ut Ut\",\n    \"topX\": 1,\n    \"topXAggregation\": \"MAX\",\n    \"topXDirection\": \"ASCENDING\",\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/service/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"service",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"metricDefinition\": {\n    \"metric\": \"LOCK_TIME\",\n    \"requestAttribute\": \"consecte\"\n  },\n  \"name\": \"consequat proident fugiat\",\n  \"tsmMetricKey\": \"ipsum ad dolore\",\n  \"unit\": \"GIBI_BYTE\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"unitDisplayName\": \"deserunt est tempor occaecat\",\n  \"entityId\": \"culpa commodo\",\n  \"managementZones\": [\n    \"officia reprehenderit deserunt\"\n  ],\n  \"conditions\": [\n    {\n      \"attribute\": \"CTG_GATEWAY_URL\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"attribute\": \"NON_DATABASE_CHILD_CALL_TIME\",\n      \"comparisonInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensionDefinition\": {\n    \"dimension\": \"anim Ut\",\n    \"name\": \"ut Ut\",\n    \"topX\": 1,\n    \"topXAggregation\": \"MAX\",\n    \"topXDirection\": \"ASCENDING\",\n    \"placeholders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/service/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"service",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "synthetic",
					"item": [
						{
							"name": "{metric Key}",
							"item": [
								{
									"name": "Gets the descriptor of the specified calculated synthetic metric | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/synthetic/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"synthetic",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the required calculated synthetic metric."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/synthetic/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"synthetic",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the required calculated synthetic metric."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:synthetic.browser.mymetric\",\n  \"metric\": \"UserActionDuration\",\n  \"monitorIdentifier\": \"SYNTHETIC_TEST-1234\",\n  \"filter\": {\n    \"event\": \"SYNTHETIC_TEST_STEP-1234\",\n    \"hasError\": true\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"Location\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Updates the specified calculated synthetic metric | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/synthetic/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"synthetic",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the calculated synthetic metric to be updated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The calculated synthetic metric has been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/synthetic/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"synthetic",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the calculated synthetic metric to be updated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/synthetic/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"synthetic",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the calculated synthetic metric to be updated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified calculated synthetic metric | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/synthetic/:metricKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"synthetic",
												":metricKey"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the calculated synthetic metric to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/synthetic/:metricKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"synthetic",
														":metricKey"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the calculated synthetic metric to be deleted."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Validates the payload for the `PUT /calculatedMetrics/synthetic/{metricKey}` request | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/synthetic/:metricKey/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"synthetic",
												":metricKey",
												"validator"
											],
											"variable": [
												{
													"key": "metricKey",
													"value": "aliqua",
													"description": "(Required) The key of the metric to be validated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted calculated synthetic metric is valid. The response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/synthetic/:metricKey/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"synthetic",
														":metricKey",
														"validator"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the metric to be validated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/calculatedMetrics/synthetic/:metricKey/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"calculatedMetrics",
														"synthetic",
														":metricKey",
														"validator"
													],
													"variable": [
														{
															"key": "metricKey",
															"value": "aliqua",
															"description": "(Required) The key of the metric to be validated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all calculated synthetic metrics available in your environment | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/calculatedMetrics/synthetic",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedMetrics",
										"synthetic"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/synthetic",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"synthetic"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Creates a new calculated synthetic metric | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:synthetic.browser.mymetric\",\n  \"metric\": \"UserActionDuration\",\n  \"monitorIdentifier\": \"SYNTHETIC_TEST-1234\",\n  \"filter\": {\n    \"event\": \"SYNTHETIC_TEST_STEP-1234\",\n    \"hasError\": true\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"Location\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedMetrics/synthetic",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedMetrics",
										"synthetic"
									]
								}
							},
							"response": [
								{
									"name": "Success. The calculated synthetic metric has been created. Response contains its key and name.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:synthetic.browser.mymetric\",\n  \"metric\": \"UserActionDuration\",\n  \"monitorIdentifier\": \"SYNTHETIC_TEST-1234\",\n  \"filter\": {\n    \"event\": \"SYNTHETIC_TEST_STEP-1234\",\n    \"hasError\": true\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"Location\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/synthetic",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"synthetic"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:synthetic.browser.mymetric\",\n  \"metric\": \"UserActionDuration\",\n  \"monitorIdentifier\": \"SYNTHETIC_TEST-1234\",\n  \"filter\": {\n    \"event\": \"SYNTHETIC_TEST_STEP-1234\",\n    \"hasError\": true\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"Location\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/synthetic",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"synthetic"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /calculatedMetrics/synthetic` request | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:synthetic.browser.mymetric\",\n  \"metric\": \"UserActionDuration\",\n  \"monitorIdentifier\": \"SYNTHETIC_TEST-1234\",\n  \"filter\": {\n    \"event\": \"SYNTHETIC_TEST_STEP-1234\",\n    \"hasError\": true\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"Location\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/calculatedMetrics/synthetic/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"calculatedMetrics",
										"synthetic",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted calculated synthetic metric is valid. The response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:synthetic.browser.mymetric\",\n  \"metric\": \"UserActionDuration\",\n  \"monitorIdentifier\": \"SYNTHETIC_TEST-1234\",\n  \"filter\": {\n    \"event\": \"SYNTHETIC_TEST_STEP-1234\",\n    \"hasError\": true\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"Location\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/synthetic/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"synthetic",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"name\": \"MyMetric\",\n  \"metricKey\": \"calc:synthetic.browser.mymetric\",\n  \"metric\": \"UserActionDuration\",\n  \"monitorIdentifier\": \"SYNTHETIC_TEST-1234\",\n  \"filter\": {\n    \"event\": \"SYNTHETIC_TEST_STEP-1234\",\n    \"hasError\": true\n  },\n  \"dimensions\": [\n    {\n      \"dimension\": \"Location\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/calculatedMetrics/synthetic/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"calculatedMetrics",
												"synthetic",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "notifications",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the properties of the specified notification configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the required notification configuration."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the required notification configuration."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}"
								}
							]
						},
						{
							"name": "Updates an existing notification configuration or creates a new one",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the notification configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID."
										}
									]
								},
								"description": "If a notification configuration with the specified ID doesn't exist, a new configuration is created."
							},
							"response": [
								{
									"name": "Success. The new notification configuration has been created. The response contains the ID of the new notification configuration.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the notification configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"est ut deserunt quis ut\",\n  \"name\": \"culpa\",\n  \"description\": \"exercitation ut dolor officia\",\n  \"type\": \"PAGER_DUTY\"\n}"
								},
								{
									"name": "Success. The notification configuration has been updated. The response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the notification configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the notification configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified notification configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the notification configuration to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The notification configuration has been deleted. The response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the notification configuration to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validates the payload the `PUT /notifications/{id}` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the notification configuration to be validated."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. The response doesn't have a body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/notifications/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the notification configuration to be validated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/notifications/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the notification configuration to be validated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all notification configurations available in your environment",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"sed quis Duis non\",\n      \"name\": \"aute in deserunt\",\n      \"description\": \"ea\",\n      \"type\": \"JIRA\"\n    },\n    {\n      \"id\": \"occaecat laboris reprehenderit veniam\",\n      \"name\": \"nostrud Lorem\",\n      \"description\": \"laborum nulla sint elit\",\n      \"type\": \"WEBHOOK\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new notification configuration",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"response": [
						{
							"name": "Success. The new notification configuration has been created. The response contains the ID of the new notification configuration.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the `POST /notifications` request",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted configuration is valid. The response doesn't have a body",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"JIRA\",\n  \"name\": \"REST example\",\n  \"alertingProfile\": \"4f5e00f4-39b3-455a-820b-3514843615f3\",\n  \"active\": true,\n  \"username\": \"john.smith\",\n  \"password\": \"\",\n  \"url\": \"https://my-jira.atlassian.net/rest/api/2/\",\n  \"projectKey\": \"DEV\",\n  \"issueType\": \"Task\",\n  \"summary\": \"Problem {ProblemID}: {ProblemTitle}\",\n  \"description\": \"{ProblemDetailsText}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "plugins",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "endpoints",
							"item": [
								{
									"name": "{endpoint Id}",
									"item": [
										{
											"name": "Gets parameters of the specified endpoint of the ActiveGate plugin",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/plugins/:id/endpoints/:endpointId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"plugins",
														":id",
														"endpoints",
														":endpointId"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required plugin."
														},
														{
															"key": "endpointId",
															"value": "aliqua",
															"description": "(Required) The ID of the required endpoint."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/plugins/:id/endpoints/:endpointId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"plugins",
																":id",
																"endpoints",
																":endpointId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required plugin."
																},
																{
																	"key": "endpointId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the required endpoint."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"activeGatePluginModule\": {\n    \"id\": \"incididunt officia Excepteur commodo\",\n    \"name\": \"in dolor sed velit aliquip\",\n    \"description\": \"laboris incididunt sunt Lorem do\"\n  },\n  \"id\": \"commodo dolor\",\n  \"pluginId\": \"veniam do culpa ex\",\n  \"name\": \"sunt in\",\n  \"enabled\": true,\n  \"properties\": {\n    \"esse_9d\": \"eiusmod voluptate minim\"\n  }\n}"
												}
											]
										},
										{
											"name": "Updates an existing endpoint of the ActiveGate plugin",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"activeGatePluginModule\": {\n    \"id\": \"incididunt mollit consequat amet\"\n  },\n  \"id\": \"tempor\",\n  \"pluginId\": \"occaecat ad quis\",\n  \"name\": \"Lorem mollit\",\n  \"enabled\": false,\n  \"properties\": {\n    \"dolor__\": \"aute ut Ut\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/plugins/:id/endpoints/:endpointId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"plugins",
														":id",
														"endpoints",
														":endpointId"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the plugin where you want to update an endpoint. \n\nIf you set the plugin ID in the body as well, it must match this ID."
														},
														{
															"key": "endpointId",
															"value": "aliqua",
															"description": "(Required) The ID of the endpoint to be updated. \n\nIf you set the endpoint ID in the body as well, it must match this ID."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The endpoint has been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"activeGatePluginModule\": {\n    \"id\": \"incididunt mollit consequat amet\"\n  },\n  \"id\": \"tempor\",\n  \"pluginId\": \"occaecat ad quis\",\n  \"name\": \"Lorem mollit\",\n  \"enabled\": false,\n  \"properties\": {\n    \"dolor__\": \"aute ut Ut\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/plugins/:id/endpoints/:endpointId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"plugins",
																":id",
																"endpoints",
																":endpointId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the plugin where you want to update an endpoint. \n\nIf you set the plugin ID in the body as well, it must match this ID."
																},
																{
																	"key": "endpointId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the endpoint to be updated. \n\nIf you set the endpoint ID in the body as well, it must match this ID."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"activeGatePluginModule\": {\n    \"id\": \"incididunt mollit consequat amet\"\n  },\n  \"id\": \"tempor\",\n  \"pluginId\": \"occaecat ad quis\",\n  \"name\": \"Lorem mollit\",\n  \"enabled\": false,\n  \"properties\": {\n    \"dolor__\": \"aute ut Ut\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/plugins/:id/endpoints/:endpointId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"plugins",
																":id",
																"endpoints",
																":endpointId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the plugin where you want to update an endpoint. \n\nIf you set the plugin ID in the body as well, it must match this ID."
																},
																{
																	"key": "endpointId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the endpoint to be updated. \n\nIf you set the endpoint ID in the body as well, it must match this ID."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Deletes an existing endpoint of the ActiveGate plugin",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/plugins/:id/endpoints/:endpointId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"plugins",
														":id",
														"endpoints",
														":endpointId"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the plugin where you want to delete an endpoint."
														},
														{
															"key": "endpointId",
															"value": "aliqua",
															"description": "(Required) The ID of the endpoint to be deleted."
														}
													]
												}
											},
											"response": [
												{
													"name": "Deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/plugins/:id/endpoints/:endpointId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"plugins",
																":id",
																"endpoints",
																":endpointId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The ID of the plugin where you want to delete an endpoint."
																},
																{
																	"key": "endpointId",
																	"value": "aliqua",
																	"description": "(Required) The ID of the endpoint to be deleted."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists endpoints of the specified ActiveGate plugin",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/plugins/:id/endpoints",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plugins",
												":id",
												"endpoints"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required plugin."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/plugins/:id/endpoints",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"plugins",
														":id",
														"endpoints"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required plugin."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Creates a new endpoint for the specified ActiveGate plugin",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activeGatePluginModule\": {\n    \"id\": \"incididunt mollit consequat amet\"\n  },\n  \"id\": \"tempor\",\n  \"pluginId\": \"occaecat ad quis\",\n  \"name\": \"Lorem mollit\",\n  \"enabled\": false,\n  \"properties\": {\n    \"dolor__\": \"aute ut Ut\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/plugins/:id/endpoints",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plugins",
												":id",
												"endpoints"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the plugin where you want to create an endpoint."
												}
											]
										},
										"description": "The body must not provide an ID of the endpoint, as IDs are automatically assigned."
									},
									"response": [
										{
											"name": "Success. The plugin endpoint has been created. Response contains the ID of the new endpoint.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"activeGatePluginModule\": {\n    \"id\": \"incididunt mollit consequat amet\"\n  },\n  \"id\": \"tempor\",\n  \"pluginId\": \"occaecat ad quis\",\n  \"name\": \"Lorem mollit\",\n  \"enabled\": false,\n  \"properties\": {\n    \"dolor__\": \"aute ut Ut\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/plugins/:id/endpoints",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"plugins",
														":id",
														"endpoints"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the plugin where you want to create an endpoint."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"activeGatePluginModule\": {\n    \"id\": \"incididunt mollit consequat amet\"\n  },\n  \"id\": \"tempor\",\n  \"pluginId\": \"occaecat ad quis\",\n  \"name\": \"Lorem mollit\",\n  \"enabled\": false,\n  \"properties\": {\n    \"dolor__\": \"aute ut Ut\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/plugins/:id/endpoints",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"plugins",
														":id",
														"endpoints"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the plugin where you want to create an endpoint."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /plugins/{id}/endpoints` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activeGatePluginModule\": {\n    \"id\": \"incididunt mollit consequat amet\"\n  },\n  \"id\": \"tempor\",\n  \"pluginId\": \"occaecat ad quis\",\n  \"name\": \"Lorem mollit\",\n  \"enabled\": false,\n  \"properties\": {\n    \"dolor__\": \"aute ut Ut\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/plugins/:id/endpoints/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plugins",
												":id",
												"endpoints",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required plugin."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"activeGatePluginModule\": {\n    \"id\": \"incididunt mollit consequat amet\"\n  },\n  \"id\": \"tempor\",\n  \"pluginId\": \"occaecat ad quis\",\n  \"name\": \"Lorem mollit\",\n  \"enabled\": false,\n  \"properties\": {\n    \"dolor__\": \"aute ut Ut\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/plugins/:id/endpoints/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"plugins",
														":id",
														"endpoints",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required plugin."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"activeGatePluginModule\": {\n    \"id\": \"incididunt mollit consequat amet\"\n  },\n  \"id\": \"tempor\",\n  \"pluginId\": \"occaecat ad quis\",\n  \"name\": \"Lorem mollit\",\n  \"enabled\": false,\n  \"properties\": {\n    \"dolor__\": \"aute ut Ut\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/plugins/:id/endpoints/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"plugins",
														":id",
														"endpoints",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the required plugin."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "binary",
							"item": [
								{
									"name": "Downloads the ZIP file of the specified plugin",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/octet-stream"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/plugins/:id/binary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plugins",
												":id",
												"binary"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the plugin you want to download."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/plugins/:id/binary",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"plugins",
														":id",
														"binary"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the plugin you want to download."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/octet-stream"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes the ZIP file of the specified plugin",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/plugins/:id/binary",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plugins",
												":id",
												"binary"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the plugin to be deleted."
												}
											]
										},
										"description": "Deletion of the plugin file uninstalls the plugin, making it unavailable for use."
									},
									"response": [
										{
											"name": "Deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/plugins/:id/binary",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"plugins",
														":id",
														"binary"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the plugin to be deleted."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Lists the properties of the specified plugin",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/plugins/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plugins",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the required plugin."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/plugins/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plugins",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required plugin."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"ut id dolore sunt quis\",\n  \"name\": \"in id in non\",\n  \"version\": \"in deserunt et\",\n  \"type\": \"PMI\",\n  \"metricGroup\": \"mollit do sed et\",\n  \"properties\": [\n    {\n      \"key\": \"et in\",\n      \"type\": \"commodo\",\n      \"defaultValue\": \"proident\",\n      \"dropdownValues\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"key\": \"pariatur labore irure cupidatat\",\n      \"type\": \"sit exercitation ut\",\n      \"defaultValue\": \"id irure consequat\",\n      \"dropdownValues\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Lists the states of the specified plugin",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/plugins/:id/states",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plugins",
										":id",
										"states"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the required plugin."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/plugins/:id/states",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plugins",
												":id",
												"states"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required plugin."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"pluginId\": \"custom.remote.python.demo\",\n  \"version\": \"1.0.0\",\n  \"endpointId\": \"-8213819843595439277\",\n  \"state\": \"ERROR_AUTH\",\n  \"stateDescription\": \"Could not authorize\",\n  \"timestamp\": 1556199097994\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all uploaded plugins",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/plugins",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"plugins"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/plugins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plugins"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Uploads a ZIP plugin file",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) Plugin ZIP file to be uploaded. \n\n File name must match the **name** field in the `plugin.json` file. \n\nFor example, for the plugin whose **name** is `custom.remote.python.demo`, the name of the plugin file must be `custom.remote.python.demo.zip`.",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/plugins?overrideAlerts=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"plugins"
							],
							"query": [
								{
									"key": "overrideAlerts",
									"value": "false",
									"description": "Use plugin-defined thresholds for alerts (`true`) or user-defined thresholds (`false`). \n\n Plugin-defined thresholds are stored in the `plugin.json` file. \n\nIf not set, user-defined thresholds are used."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success. Plugin has been uploaded. Response contains the ID of the plugin.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) Plugin ZIP file to be uploaded. \n\n File name must match the **name** field in the `plugin.json` file. \n\nFor example, for the plugin whose **name** is `custom.remote.python.demo`, the name of the plugin file must be `custom.remote.python.demo.zip`.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/plugins?overrideAlerts=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plugins"
									],
									"query": [
										{
											"key": "overrideAlerts",
											"value": "false"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) Plugin ZIP file to be uploaded. \n\n File name must match the **name** field in the `plugin.json` file. \n\nFor example, for the plugin whose **name** is `custom.remote.python.demo`, the name of the plugin file must be `custom.remote.python.demo.zip`.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/plugins?overrideAlerts=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plugins"
									],
									"query": [
										{
											"key": "overrideAlerts",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "List available ActiveGate plugin modules",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/plugins/activeGatePluginModules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"plugins",
								"activeGatePluginModules"
							]
						}
					},
					"response": [
						{
							"name": "Success. The response contains IDs of ActiveGate plugin modules. Use them to configure plugin endpoints.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/plugins/activeGatePluginModules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plugins",
										"activeGatePluginModules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Validates a ZIP plugin file for `POST/plugins` request",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) The ZIP plugin file to be uploaded. \n\n The file name must match the ID of the plugin. Example: `custom.remote.python.demo.zip`",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/plugins/validator?jsonOnly=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"plugins",
								"validator"
							],
							"query": [
								{
									"key": "jsonOnly",
									"value": "false",
									"description": "Validate only the `plugin.json` file (`true`) or the entire plugin structure (`false`). \n\n If not set, the entire plugin is validated. "
								}
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted plugin is valid. Response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) The ZIP plugin file to be uploaded. \n\n The file name must match the ID of the plugin. Example: `custom.remote.python.demo.zip`",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/plugins/validator?jsonOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plugins",
										"validator"
									],
									"query": [
										{
											"key": "jsonOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) The ZIP plugin file to be uploaded. \n\n The file name must match the ID of the plugin. Example: `custom.remote.python.demo.zip`",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/plugins/validator?jsonOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plugins",
										"validator"
									],
									"query": [
										{
											"key": "jsonOnly",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "remote Environments",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the properties of the specified remote environment configuration | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/remoteEnvironments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteEnvironments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the required configuration."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteEnvironments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteEnvironments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required configuration."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}"
								}
							]
						},
						{
							"name": "Updates an existing remote environment configuration or creates a new one | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remoteEnvironments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteEnvironments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID."
										}
									]
								},
								"description": "If a remote environment configuration with the specified ID doesn't exist, a new configuration is created."
							},
							"response": [
								{
									"name": "Success. A new remote environment configuration has been created. The response contains the ID of the new configuration.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/remoteEnvironments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteEnvironments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"cillu\",\n  \"networkScope\": \"CLUSTER\",\n  \"name\": \"ipsum ea nulla consectetur\",\n  \"uri\": \"sed dolore consequat do\"\n}"
								},
								{
									"name": "Success. The configuration has been updated. The response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/remoteEnvironments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteEnvironments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/remoteEnvironments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteEnvironments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the configuration to be updated. \n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified remote environment configuration | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remoteEnvironments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteEnvironments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the configuration to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The configuration has been deleted. The response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteEnvironments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteEnvironments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the configuration to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /remoteEnvironments/{id}` request | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remoteEnvironments/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteEnvironments",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the remote environment configuration to be validated."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/remoteEnvironments/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteEnvironments",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the remote environment configuration to be validated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/remoteEnvironments/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteEnvironments",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the remote environment configuration to be validated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all remote environment configurations | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/remoteEnvironments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remoteEnvironments"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/remoteEnvironments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteEnvironments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"dolore velit\",\n      \"networkScope\": \"CLUSTER\",\n      \"name\": \"ad laborum irure reprehenderit\",\n      \"uri\": \"consectetur Ut laborum ipsum\"\n    },\n    {\n      \"id\": \"ea incididunt ipsum quis do\",\n      \"networkScope\": \"EXTERNAL\",\n      \"name\": \"sunt non Lorem\",\n      \"uri\": \"officia laborum mollit\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new remote environment configuration | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/remoteEnvironments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remoteEnvironments"
							]
						},
						"description": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server. \n\nBe sure to prepare a token with the **Fetch data from a remote environment** (`RestRequestForwarding`) scope. You can create such a token via [Tokens API](https://dt-url.net/ff23kmx)."
					},
					"response": [
						{
							"name": "Success. A new remote environment configuration has been created. The response contains the ID of the new configuration.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remoteEnvironments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteEnvironments"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"cillu\",\n  \"networkScope\": \"CLUSTER\",\n  \"name\": \"ipsum ea nulla consectetur\",\n  \"uri\": \"sed dolore consequat do\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remoteEnvironments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteEnvironments"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the `POST /remoteEnvironments` request | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/remoteEnvironments/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remoteEnvironments",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted configuration is valid. Response doesn't have a body",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remoteEnvironments/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteEnvironments",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"in in cillum\",\n  \"uri\": \"laborum cupidatat\",\n  \"networkScope\": \"EXTERNAL\",\n  \"id\": \"laborum non id\",\n  \"token\": \"quis veniam dolore\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/remoteEnvironments/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteEnvironments",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "reports",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the properties of the specified report | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the required report."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The response body contains parameters of the report.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reports/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reports",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required report."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"dashboardId\": \"amet Duis occaecat ul\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"sed esse ex nostrud\",\n      \"irure\"\n    ],\n    \"MONTH\": [\n      \"sit ea\",\n      \"velit culpa\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"aute qui laborum\",\n  \"enabled\": false\n}"
								}
							]
						},
						{
							"name": "Updates an existing report | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboardId\": \"amet Duis occaecat ul\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"sed esse ex nostrud\",\n      \"irure\"\n    ],\n    \"MONTH\": [\n      \"sit ea\",\n      \"velit culpa\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"aute qui laborum\",\n  \"enabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the report to be updated. \n\n The ID in the request body must match this ID."
										}
									]
								},
								"description": "If a report with the specified ID doesn't exist, a new report is created."
							},
							"response": [
								{
									"name": "Success. The new report has been created. The response contains the ID of the new report.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dashboardId\": \"amet Duis occaecat ul\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"sed esse ex nostrud\",\n      \"irure\"\n    ],\n    \"MONTH\": [\n      \"sit ea\",\n      \"velit culpa\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"aute qui laborum\",\n  \"enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reports/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reports",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the report to be updated. \n\n The ID in the request body must match this ID."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Success. The report has been updated. Response doesn't have a body",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dashboardId\": \"amet Duis occaecat ul\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"sed esse ex nostrud\",\n      \"irure\"\n    ],\n    \"MONTH\": [\n      \"sit ea\",\n      \"velit culpa\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"aute qui laborum\",\n  \"enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reports/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reports",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the report to be updated. \n\n The ID in the request body must match this ID."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dashboardId\": \"amet Duis occaecat ul\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"sed esse ex nostrud\",\n      \"irure\"\n    ],\n    \"MONTH\": [\n      \"sit ea\",\n      \"velit culpa\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"aute qui laborum\",\n  \"enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reports/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reports",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the report to be updated. \n\n The ID in the request body must match this ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified report | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the report to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The report has been deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reports/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reports",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the report to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Subscribes to the specified report | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"schedule\": \"WEEK\",\n  \"recipients\": [\n    \"demo@email.com\",\n    \"demo2@email.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reports/:id/subscribe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id",
										"subscribe"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the report to subscribe to."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The new subscriptions have been created. The response body contains the report ID.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"schedule\": \"WEEK\",\n  \"recipients\": [\n    \"demo@email.com\",\n    \"demo2@email.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reports/:id/subscribe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reports",
												":id",
												"subscribe"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the report to subscribe to."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"schedule\": \"WEEK\",\n  \"recipients\": [\n    \"demo@email.com\",\n    \"demo2@email.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reports/:id/subscribe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reports",
												":id",
												"subscribe"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the report to subscribe to."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Unsubscribes from the specified report | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"schedule\": \"WEEK\",\n  \"recipients\": [\n    \"demo@email.com\",\n    \"demo2@email.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reports/:id/unsubscribe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id",
										"unsubscribe"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the report to unsubscribe from."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The subscriptions have been revoked. The response body contains the report ID.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"schedule\": \"WEEK\",\n  \"recipients\": [\n    \"demo@email.com\",\n    \"demo2@email.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reports/:id/unsubscribe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reports",
												":id",
												"unsubscribe"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the report to unsubscribe from."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"schedule\": \"WEEK\",\n  \"recipients\": [\n    \"demo@email.com\",\n    \"demo2@email.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reports/:id/unsubscribe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reports",
												":id",
												"unsubscribe"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the report to unsubscribe from."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /reports/{id}` request | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboardId\": \"amet Duis occaecat ul\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"sed esse ex nostrud\",\n      \"irure\"\n    ],\n    \"MONTH\": [\n      \"sit ea\",\n      \"velit culpa\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"aute qui laborum\",\n  \"enabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reports/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the report to be validated. \n\n The ID in the request body must match this ID."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted report is valid. Response doesn't have a body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dashboardId\": \"amet Duis occaecat ul\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"sed esse ex nostrud\",\n      \"irure\"\n    ],\n    \"MONTH\": [\n      \"sit ea\",\n      \"velit culpa\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"aute qui laborum\",\n  \"enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reports/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reports",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the report to be validated. \n\n The ID in the request body must match this ID."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dashboardId\": \"amet Duis occaecat ul\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"sed esse ex nostrud\",\n      \"irure\"\n    ],\n    \"MONTH\": [\n      \"sit ea\",\n      \"velit culpa\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"aute qui laborum\",\n  \"enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reports/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reports",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the report to be validated. \n\n The ID in the request body must match this ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all reports available in your environment | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reports?type=DASHBOARD&sourceId=aliqua",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports"
							],
							"query": [
								{
									"key": "type",
									"value": "DASHBOARD",
									"description": "Type of a report."
								},
								{
									"key": "sourceId",
									"value": "aliqua",
									"description": "Referencing source entity of a report (e.g. dashboard)."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/reports?type=DASHBOARD&sourceId=aliqua",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports"
									],
									"query": [
										{
											"key": "type",
											"value": "DASHBOARD"
										},
										{
											"key": "sourceId",
											"value": "aliqua"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"dashboardId\": \"ali\",\n      \"id\": \"proident ad es\",\n      \"type\": \"DASHBOARD\"\n    },\n    {\n      \"dashboardId\": \"sed et\",\n      \"id\": \"laboris ex proident\",\n      \"type\": \"DASHBOARD\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a report | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dashboardId\": \"labore aliqua\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"consectetur labore\",\n      \"mollit adipisicing ex reprehend\"\n    ],\n    \"MONTH\": [\n      \"eiusmod nisi sed officia\",\n      \"es\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"est velit nisi\",\n  \"enabled\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports"
							]
						},
						"description": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server."
					},
					"response": [
						{
							"name": "Success. The new report has been created. The response contains the ID of the new report.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboardId\": \"amet Duis occaecat ul\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"sed esse ex nostrud\",\n      \"irure\"\n    ],\n    \"MONTH\": [\n      \"sit ea\",\n      \"velit culpa\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"aute qui laborum\",\n  \"enabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboardId\": \"amet Duis occaecat ul\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"sed esse ex nostrud\",\n      \"irure\"\n    ],\n    \"MONTH\": [\n      \"sit ea\",\n      \"velit culpa\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"aute qui laborum\",\n  \"enabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the `POST /reports` request | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dashboardId\": \"amet Duis occaecat ul\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"sed esse ex nostrud\",\n      \"irure\"\n    ],\n    \"MONTH\": [\n      \"sit ea\",\n      \"velit culpa\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"aute qui laborum\",\n  \"enabled\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reports/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reports",
								"validator"
							]
						},
						"description": "The body must not provide an ID."
					},
					"response": [
						{
							"name": "Validated. The submitted report is valid. The response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboardId\": \"amet Duis occaecat ul\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"sed esse ex nostrud\",\n      \"irure\"\n    ],\n    \"MONTH\": [\n      \"sit ea\",\n      \"velit culpa\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"aute qui laborum\",\n  \"enabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reports/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dashboardId\": \"amet Duis occaecat ul\",\n  \"subscriptions\": {\n    \"WEEK\": [\n      \"sed esse ex nostrud\",\n      \"irure\"\n    ],\n    \"MONTH\": [\n      \"sit ea\",\n      \"velit culpa\"\n    ]\n  },\n  \"type\": \"DASHBOARD\",\n  \"id\": \"aute qui laborum\",\n  \"enabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reports/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reports",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "symfiles",
			"item": [
				{
					"name": "{application Id}",
					"item": [
						{
							"name": "{package Name}/{os}/{version Code}/{version Name}",
							"item": [
								{
									"name": "pinning",
									"item": [
										{
											"name": "Pin or unpin all symbolication files of a app version. A pinned file will not be deleted automtically, when running out of space.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"pinned\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName/pinning",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"symfiles",
														":applicationId",
														":packageName",
														":os",
														":versionCode",
														":versionName",
														"pinning"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The application id used in Dynatrace of the app which should be (un)pinned"
														},
														{
															"key": "packageName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the files to be (un)pinned"
														},
														{
															"key": "os",
															"value": "IOS",
															"description": "(Required) The operating system for which the files will be (un)pinned"
														},
														{
															"key": "versionCode",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version code (Android) / CFBundleVersion (iOS) the file belongs to"
														},
														{
															"key": "versionName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to"
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The pinning status of the filed has been updated. Response doesn't have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"pinned\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName/pinning",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"symfiles",
																":applicationId",
																":packageName",
																":os",
																":versionCode",
																":versionName",
																"pinning"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The application id used in Dynatrace of the app which should be (un)pinned"
																},
																{
																	"key": "packageName",
																	"value": "exercitation sed aliqua dolore ipsum",
																	"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the files to be (un)pinned"
																},
																{
																	"key": "os",
																	"value": "IOS",
																	"description": "(Required) The operating system for which the files will be (un)pinned"
																},
																{
																	"key": "versionCode",
																	"value": "exercitation sed aliqua dolore ipsum",
																	"description": "(Required) The version code (Android) / CFBundleVersion (iOS) the file belongs to"
																},
																{
																	"key": "versionName",
																	"value": "exercitation sed aliqua dolore ipsum",
																	"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"pinned\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName/pinning",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"symfiles",
																":applicationId",
																":packageName",
																":os",
																":versionCode",
																":versionName",
																"pinning"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The application id used in Dynatrace of the app which should be (un)pinned"
																},
																{
																	"key": "packageName",
																	"value": "exercitation sed aliqua dolore ipsum",
																	"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the files to be (un)pinned"
																},
																{
																	"key": "os",
																	"value": "IOS",
																	"description": "(Required) The operating system for which the files will be (un)pinned"
																},
																{
																	"key": "versionCode",
																	"value": "exercitation sed aliqua dolore ipsum",
																	"description": "(Required) The version code (Android) / CFBundleVersion (iOS) the file belongs to"
																},
																{
																	"key": "versionName",
																	"value": "exercitation sed aliqua dolore ipsum",
																	"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Validate updates of existing request attribute for the `PUT /{applicationId}/{packageName}/{os}/{versionName}/pinning` request.",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"pinned\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName/pinning/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"symfiles",
														":applicationId",
														":packageName",
														":os",
														":versionCode",
														":versionName",
														"pinning",
														"validator"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The application id used in Dynatrace of the app which should be (un)pinned"
														},
														{
															"key": "packageName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the files to be (un)pinned"
														},
														{
															"key": "os",
															"value": "IOS",
															"description": "(Required) The operating system for which the files will be (un)pinned"
														},
														{
															"key": "versionCode",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version code (Android) / CFBundleVersion (iOS) the file belongs to"
														},
														{
															"key": "versionName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to"
														}
													]
												}
											},
											"response": [
												{
													"name": "Validated. The submitted body is valid. Response does not have a body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"pinned\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName/pinning/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"symfiles",
																":applicationId",
																":packageName",
																":os",
																":versionCode",
																":versionName",
																"pinning",
																"validator"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The application id used in Dynatrace of the app which should be (un)pinned"
																},
																{
																	"key": "packageName",
																	"value": "exercitation sed aliqua dolore ipsum",
																	"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the files to be (un)pinned"
																},
																{
																	"key": "os",
																	"value": "IOS",
																	"description": "(Required) The operating system for which the files will be (un)pinned"
																},
																{
																	"key": "versionCode",
																	"value": "exercitation sed aliqua dolore ipsum",
																	"description": "(Required) The version code (Android) / CFBundleVersion (iOS) the file belongs to"
																},
																{
																	"key": "versionName",
																	"value": "exercitation sed aliqua dolore ipsum",
																	"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"pinned\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName/pinning/validator",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"symfiles",
																":applicationId",
																":packageName",
																":os",
																":versionCode",
																":versionName",
																"pinning",
																"validator"
															],
															"variable": [
																{
																	"key": "applicationId",
																	"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
																	"description": "(Required) The application id used in Dynatrace of the app which should be (un)pinned"
																},
																{
																	"key": "packageName",
																	"value": "exercitation sed aliqua dolore ipsum",
																	"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the files to be (un)pinned"
																},
																{
																	"key": "os",
																	"value": "IOS",
																	"description": "(Required) The operating system for which the files will be (un)pinned"
																},
																{
																	"key": "versionCode",
																	"value": "exercitation sed aliqua dolore ipsum",
																	"description": "(Required) The version code (Android) / CFBundleVersion (iOS) the file belongs to"
																},
																{
																	"key": "versionName",
																	"value": "exercitation sed aliqua dolore ipsum",
																	"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Gets the metadata of the symbolication file belonging to the specified app version. There always can exist only one file per os and version",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"symfiles",
												":applicationId",
												":packageName",
												":os",
												":versionCode",
												":versionName"
											],
											"variable": [
												{
													"key": "applicationId",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The application id used in Dynatrace for the mobile application to be queried"
												},
												{
													"key": "packageName",
													"value": "exercitation sed aliqua dolore ipsum",
													"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app to be queried"
												},
												{
													"key": "os",
													"value": "IOS",
													"description": "(Required) The operating system for which the file should be displayed."
												},
												{
													"key": "versionCode",
													"value": "exercitation sed aliqua dolore ipsum",
													"description": "(Required) The version code (Android) / CFBundleVersion (iOS) of the file to be retrieved"
												},
												{
													"key": "versionName",
													"value": "exercitation sed aliqua dolore ipsum",
													"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) of the file to be retrieved"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"symfiles",
														":applicationId",
														":packageName",
														":os",
														":versionCode",
														":versionName"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The application id used in Dynatrace for the mobile application to be queried"
														},
														{
															"key": "packageName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app to be queried"
														},
														{
															"key": "os",
															"value": "IOS",
															"description": "(Required) The operating system for which the file should be displayed."
														},
														{
															"key": "versionCode",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version code (Android) / CFBundleVersion (iOS) of the file to be retrieved"
														},
														{
															"key": "versionName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) of the file to be retrieved"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"applicationName\": \"nulla est aliquip laboris consecte\",\n  \"size\": -93553703,\n  \"appId\": {\n    \"versionCode\": \"in sit velit\",\n    \"versionName\": \"anim deserunt do\",\n    \"id\": \"sed Ut\",\n    \"packageName\": \"officia ad esse\",\n    \"os\": \"IOS\"\n  },\n  \"uploadTimestamp\": 65195835,\n  \"pinned\": true\n}"
										}
									]
								},
								{
									"name": "Upload a symbolication file. Either a ProGuard file for Android or a zip file containing all the iOS dSYM files. ",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/plain"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"symfiles",
												":applicationId",
												":packageName",
												":os",
												":versionCode",
												":versionName"
											],
											"variable": [
												{
													"key": "applicationId",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The application id used in Dynatrace of the app this file belongs to"
												},
												{
													"key": "packageName",
													"value": "exercitation sed aliqua dolore ipsum",
													"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the uploaded file"
												},
												{
													"key": "os",
													"value": "IOS",
													"description": "(Required) The operating system the file belongs to"
												},
												{
													"key": "versionCode",
													"value": "exercitation sed aliqua dolore ipsum",
													"description": "(Required) The version code (Android) / CFBundleVersion (iOS) the file belongs to"
												},
												{
													"key": "versionName",
													"value": "exercitation sed aliqua dolore ipsum",
													"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The file has been uploaded and stored. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													},
													{
														"key": "content-type",
														"value": "aliqua"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"symfiles",
														":applicationId",
														":packageName",
														":os",
														":versionCode",
														":versionName"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The application id used in Dynatrace of the app this file belongs to"
														},
														{
															"key": "packageName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the uploaded file"
														},
														{
															"key": "os",
															"value": "IOS",
															"description": "(Required) The operating system the file belongs to"
														},
														{
															"key": "versionCode",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version code (Android) / CFBundleVersion (iOS) the file belongs to"
														},
														{
															"key": "versionName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													},
													{
														"key": "content-type",
														"value": "aliqua"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"symfiles",
														":applicationId",
														":packageName",
														":os",
														":versionCode",
														":versionName"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The application id used in Dynatrace of the app this file belongs to"
														},
														{
															"key": "packageName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the uploaded file"
														},
														{
															"key": "os",
															"value": "IOS",
															"description": "(Required) The operating system the file belongs to"
														},
														{
															"key": "versionCode",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version code (Android) / CFBundleVersion (iOS) the file belongs to"
														},
														{
															"key": "versionName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The symbol file storage quota is exhausted.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													},
													{
														"key": "content-type",
														"value": "aliqua"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"symfiles",
														":applicationId",
														":packageName",
														":os",
														":versionCode",
														":versionName"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The application id used in Dynatrace of the app this file belongs to"
														},
														{
															"key": "packageName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the uploaded file"
														},
														{
															"key": "os",
															"value": "IOS",
															"description": "(Required) The operating system the file belongs to"
														},
														{
															"key": "versionCode",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version code (Android) / CFBundleVersion (iOS) the file belongs to"
														},
														{
															"key": "versionName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) the file belongs to"
														}
													]
												}
											},
											"status": "Request Entity Too Large",
											"code": 413,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete the symbolication file belonging to the given application, os and version",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"symfiles",
												":applicationId",
												":packageName",
												":os",
												":versionCode",
												":versionName"
											],
											"variable": [
												{
													"key": "applicationId",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The application id used in Dynatrace of the mobile application where a file should be deleted"
												},
												{
													"key": "packageName",
													"value": "exercitation sed aliqua dolore ipsum",
													"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the file to be deleted"
												},
												{
													"key": "os",
													"value": "IOS",
													"description": "(Required) The operating system the file belongs to"
												},
												{
													"key": "versionCode",
													"value": "exercitation sed aliqua dolore ipsum",
													"description": "(Required) The version code (Android) / CFBundleVersion (iOS) of the file to be deleted"
												},
												{
													"key": "versionName",
													"value": "exercitation sed aliqua dolore ipsum",
													"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) of the file to be deleted"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The file has been deleted successfully. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"symfiles",
														":applicationId",
														":packageName",
														":os",
														":versionCode",
														":versionName"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The application id used in Dynatrace of the mobile application where a file should be deleted"
														},
														{
															"key": "packageName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the file to be deleted"
														},
														{
															"key": "os",
															"value": "IOS",
															"description": "(Required) The operating system the file belongs to"
														},
														{
															"key": "versionCode",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version code (Android) / CFBundleVersion (iOS) of the file to be deleted"
														},
														{
															"key": "versionName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) of the file to be deleted"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/symfiles/:applicationId/:packageName/:os/:versionCode/:versionName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"symfiles",
														":applicationId",
														":packageName",
														":os",
														":versionCode",
														":versionName"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
															"description": "(Required) The application id used in Dynatrace of the mobile application where a file should be deleted"
														},
														{
															"key": "packageName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The CFBundleIdentifier (iOS) or the package name (Android) which identifies the app associated with the file to be deleted"
														},
														{
															"key": "os",
															"value": "IOS",
															"description": "(Required) The operating system the file belongs to"
														},
														{
															"key": "versionCode",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version code (Android) / CFBundleVersion (iOS) of the file to be deleted"
														},
														{
															"key": "versionName",
															"value": "exercitation sed aliqua dolore ipsum",
															"description": "(Required) The version name (Android) / CFBundleShortVersionString (iOS) of the file to be deleted"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Lists the metadata of all symbolication files (ProGuard files for Android or dSYM files for iOS Apps) for one single mobile application from the Symbol File Store of this tenant.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/symfiles/:applicationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"symfiles",
										":applicationId"
									],
									"variable": [
										{
											"key": "applicationId",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The application id used in Dynatrace for the mobile application to be queried"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/symfiles/:applicationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"symfiles",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The application id used in Dynatrace for the mobile application to be queried"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"symbolFiles\": [\n    {\n      \"applicationName\": \"ullamco sed id\",\n      \"size\": -44354050,\n      \"appId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uploadTimestamp\": -67134052,\n      \"pinned\": false\n    },\n    {\n      \"applicationName\": \"id qui\",\n      \"size\": 74206841,\n      \"appId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uploadTimestamp\": 73464332,\n      \"pinned\": false\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Deletes all symbolication file belonging to the Dynatrace App specified",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/symfiles/:applicationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"symfiles",
										":applicationId"
									],
									"variable": [
										{
											"key": "applicationId",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The application id used in Dynatrace of the mobile application the files will be deleted"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. All files belonging to the given Dynatrace mobile application have been deleted successfully. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/symfiles/:applicationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"symfiles",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The application id used in Dynatrace of the mobile application the files will be deleted"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/symfiles/:applicationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"symfiles",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The application id used in Dynatrace of the mobile application the files will be deleted"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists the metadata of all symbolication files (ProGuard files for Android or dSYM files for iOS Apps) from the Symbol File Store.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/symfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"symfiles"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/symfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"symfiles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"symbolFiles\": [\n    {\n      \"applicationName\": \"dolore Lorem\",\n      \"size\": 47166778,\n      \"appId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uploadTimestamp\": -84035982,\n      \"pinned\": true\n    },\n    {\n      \"applicationName\": \"qui laborum culpa ex\",\n      \"size\": 51045287,\n      \"appId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uploadTimestamp\": 14423339,\n      \"pinned\": false\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Gets a download link for the latest version of the DTXDssClient.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/symfiles/dtxdss-download",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"symfiles",
								"dtxdss-download"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/symfiles/dtxdss-download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"symfiles",
										"dtxdss-download"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"dssClientUrl\": \"deserunt et aliquip mollit\"\n}"
						}
					]
				},
				{
					"name": "Retrieves information about used/empty diskspace, number of stored files,....",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/symfiles/info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"symfiles",
								"info"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/symfiles/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"symfiles",
										"info"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"usedStorage\": -43260335,\n  \"availableStorage\": -78308702,\n  \"storageQuota\": -29746396,\n  \"fileCount\": -15376083\n}"
						}
					]
				},
				{
					"name": "Returns the supported file format version for iOS symbol files.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/symfiles/ios/supportedversion",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"symfiles",
								"ios",
								"supportedversion"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/symfiles/ios/supportedversion",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"symfiles",
										"ios",
										"supportedversion"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"version\": \"adipisicing tempor deserunt nulla amet\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "aws",
			"item": [
				{
					"name": "credentials",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Gets the configuration of the specified AWS credentials",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/aws/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the specified AWS credentials configuration."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/aws/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the specified AWS credentials configuration."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"authenticationData\": {\n    \"type\": \"ROLE\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"externalId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"laboris est\",\n  \"partitionType\": \"AWS_CN\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"veniam quis ipsum aute\",\n      \"value\": \"in\"\n    },\n    {\n      \"name\": \"non dolor\",\n      \"value\": \"in irure minim sit\"\n    },\n    {\n      \"name\": \"laborum et\",\n      \"value\": \"do qu\"\n    },\n    {\n      \"name\": \"ex tempor ut exercitation\",\n      \"value\": \"aliqua est\"\n    },\n    {\n      \"name\": \"magna eni\",\n      \"value\": \"magna nisi adipisicing incididunt\"\n    },\n    {\n      \"name\": \"exercitation consequat\",\n      \"value\": \"id do in nisi\"\n    },\n    {\n      \"name\": \"labore reprehenderit fugiat adipisicing\",\n      \"value\": \"exercitation aliqua magna est\"\n    },\n    {\n      \"name\": \"fugiat ut Duis\",\n      \"value\": \"anim exercitation aute veniam fugiat\"\n    },\n    {\n      \"name\": \"cupidatat labore veniam\",\n      \"value\": \"ex ut \"\n    },\n    {\n      \"name\": \"ullamco velit ut sunt\",\n      \"value\": \"con\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"ex nisi\",\n  \"connectionStatus\": \"CONNECTED\",\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"eiusmod pariatur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"eli\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Updates an existing AWS credentials configuration",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationData\": {\n    \"type\": \"KEYS\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"adipisicing in\",\n  \"partitionType\": \"AWS_US_GOV\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"irure qui cupidatat in\",\n      \"value\": \"culpa Lorem\"\n    },\n    {\n      \"name\": \"eu exercitation laborum Duis minim\",\n      \"value\": \"quis qui cupidatat\"\n    },\n    {\n      \"name\": \"ea\",\n      \"value\": \"anim enim nulla pariatur\"\n    },\n    {\n      \"name\": \"do ex\",\n      \"value\": \"elit ad\"\n    },\n    {\n      \"name\": \"dolore ut anim aute\",\n      \"value\": \"cupidatat ad consectetur\"\n    },\n    {\n      \"name\": \"officia id adipisicing \",\n      \"value\": \"et id culpa nulla do\"\n    },\n    {\n      \"name\": \"officia in elit ea cupidatat\",\n      \"value\": \"quis pariatur\"\n    },\n    {\n      \"name\": \"in sit Ut ea\",\n      \"value\": \"est in aute exercitation quis\"\n    },\n    {\n      \"name\": \"deserunt reprehenderit\",\n      \"value\": \"ullamco\"\n    },\n    {\n      \"name\": \"voluptate mollit enim sit cupidata\",\n      \"value\": \"deserunt est ea eiusmod nostrud\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"sint Excepteur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"magna ut amet sunt\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/aws/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the AWS credentials configuration to be updated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The new AWS credentials configuration has been created. The response body contains the ID of the configuration. \n\n Check the connection status for these credentials after 10 minutes with the `GET /aws/credentials/{id}` request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationData\": {\n    \"type\": \"KEYS\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"adipisicing in\",\n  \"partitionType\": \"AWS_US_GOV\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"irure qui cupidatat in\",\n      \"value\": \"culpa Lorem\"\n    },\n    {\n      \"name\": \"eu exercitation laborum Duis minim\",\n      \"value\": \"quis qui cupidatat\"\n    },\n    {\n      \"name\": \"ea\",\n      \"value\": \"anim enim nulla pariatur\"\n    },\n    {\n      \"name\": \"do ex\",\n      \"value\": \"elit ad\"\n    },\n    {\n      \"name\": \"dolore ut anim aute\",\n      \"value\": \"cupidatat ad consectetur\"\n    },\n    {\n      \"name\": \"officia id adipisicing \",\n      \"value\": \"et id culpa nulla do\"\n    },\n    {\n      \"name\": \"officia in elit ea cupidatat\",\n      \"value\": \"quis pariatur\"\n    },\n    {\n      \"name\": \"in sit Ut ea\",\n      \"value\": \"est in aute exercitation quis\"\n    },\n    {\n      \"name\": \"deserunt reprehenderit\",\n      \"value\": \"ullamco\"\n    },\n    {\n      \"name\": \"voluptate mollit enim sit cupidata\",\n      \"value\": \"deserunt est ea eiusmod nostrud\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"sint Excepteur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"magna ut amet sunt\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/aws/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the AWS credentials configuration to be updated."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
										},
										{
											"name": "Success. The AWS credentials configuration has been updated. Response doesn't have a body. \n\n Check the connection status for these credentials after 10 minutes with the `GET /aws/credentials/{id}` request.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationData\": {\n    \"type\": \"KEYS\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"adipisicing in\",\n  \"partitionType\": \"AWS_US_GOV\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"irure qui cupidatat in\",\n      \"value\": \"culpa Lorem\"\n    },\n    {\n      \"name\": \"eu exercitation laborum Duis minim\",\n      \"value\": \"quis qui cupidatat\"\n    },\n    {\n      \"name\": \"ea\",\n      \"value\": \"anim enim nulla pariatur\"\n    },\n    {\n      \"name\": \"do ex\",\n      \"value\": \"elit ad\"\n    },\n    {\n      \"name\": \"dolore ut anim aute\",\n      \"value\": \"cupidatat ad consectetur\"\n    },\n    {\n      \"name\": \"officia id adipisicing \",\n      \"value\": \"et id culpa nulla do\"\n    },\n    {\n      \"name\": \"officia in elit ea cupidatat\",\n      \"value\": \"quis pariatur\"\n    },\n    {\n      \"name\": \"in sit Ut ea\",\n      \"value\": \"est in aute exercitation quis\"\n    },\n    {\n      \"name\": \"deserunt reprehenderit\",\n      \"value\": \"ullamco\"\n    },\n    {\n      \"name\": \"voluptate mollit enim sit cupidata\",\n      \"value\": \"deserunt est ea eiusmod nostrud\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"sint Excepteur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"magna ut amet sunt\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/aws/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the AWS credentials configuration to be updated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationData\": {\n    \"type\": \"KEYS\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"adipisicing in\",\n  \"partitionType\": \"AWS_US_GOV\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"irure qui cupidatat in\",\n      \"value\": \"culpa Lorem\"\n    },\n    {\n      \"name\": \"eu exercitation laborum Duis minim\",\n      \"value\": \"quis qui cupidatat\"\n    },\n    {\n      \"name\": \"ea\",\n      \"value\": \"anim enim nulla pariatur\"\n    },\n    {\n      \"name\": \"do ex\",\n      \"value\": \"elit ad\"\n    },\n    {\n      \"name\": \"dolore ut anim aute\",\n      \"value\": \"cupidatat ad consectetur\"\n    },\n    {\n      \"name\": \"officia id adipisicing \",\n      \"value\": \"et id culpa nulla do\"\n    },\n    {\n      \"name\": \"officia in elit ea cupidatat\",\n      \"value\": \"quis pariatur\"\n    },\n    {\n      \"name\": \"in sit Ut ea\",\n      \"value\": \"est in aute exercitation quis\"\n    },\n    {\n      \"name\": \"deserunt reprehenderit\",\n      \"value\": \"ullamco\"\n    },\n    {\n      \"name\": \"voluptate mollit enim sit cupidata\",\n      \"value\": \"deserunt est ea eiusmod nostrud\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"sint Excepteur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"magna ut amet sunt\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/aws/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the AWS credentials configuration to be updated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified AWS credentials configuration",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/aws/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of AWS credentials configuration to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The AWS credentials configuration has been deleted. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/aws/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of AWS credentials configuration to be deleted."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/aws/credentials/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"credentials",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of AWS credentials configuration to be deleted."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `PUT /aws/credentials/{id}` request",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationData\": {\n    \"type\": \"KEYS\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"adipisicing in\",\n  \"partitionType\": \"AWS_US_GOV\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"irure qui cupidatat in\",\n      \"value\": \"culpa Lorem\"\n    },\n    {\n      \"name\": \"eu exercitation laborum Duis minim\",\n      \"value\": \"quis qui cupidatat\"\n    },\n    {\n      \"name\": \"ea\",\n      \"value\": \"anim enim nulla pariatur\"\n    },\n    {\n      \"name\": \"do ex\",\n      \"value\": \"elit ad\"\n    },\n    {\n      \"name\": \"dolore ut anim aute\",\n      \"value\": \"cupidatat ad consectetur\"\n    },\n    {\n      \"name\": \"officia id adipisicing \",\n      \"value\": \"et id culpa nulla do\"\n    },\n    {\n      \"name\": \"officia in elit ea cupidatat\",\n      \"value\": \"quis pariatur\"\n    },\n    {\n      \"name\": \"in sit Ut ea\",\n      \"value\": \"est in aute exercitation quis\"\n    },\n    {\n      \"name\": \"deserunt reprehenderit\",\n      \"value\": \"ullamco\"\n    },\n    {\n      \"name\": \"voluptate mollit enim sit cupidata\",\n      \"value\": \"deserunt est ea eiusmod nostrud\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"sint Excepteur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"magna ut amet sunt\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/aws/credentials/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"credentials",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the AWS credentials configuration to be validated."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationData\": {\n    \"type\": \"KEYS\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"adipisicing in\",\n  \"partitionType\": \"AWS_US_GOV\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"irure qui cupidatat in\",\n      \"value\": \"culpa Lorem\"\n    },\n    {\n      \"name\": \"eu exercitation laborum Duis minim\",\n      \"value\": \"quis qui cupidatat\"\n    },\n    {\n      \"name\": \"ea\",\n      \"value\": \"anim enim nulla pariatur\"\n    },\n    {\n      \"name\": \"do ex\",\n      \"value\": \"elit ad\"\n    },\n    {\n      \"name\": \"dolore ut anim aute\",\n      \"value\": \"cupidatat ad consectetur\"\n    },\n    {\n      \"name\": \"officia id adipisicing \",\n      \"value\": \"et id culpa nulla do\"\n    },\n    {\n      \"name\": \"officia in elit ea cupidatat\",\n      \"value\": \"quis pariatur\"\n    },\n    {\n      \"name\": \"in sit Ut ea\",\n      \"value\": \"est in aute exercitation quis\"\n    },\n    {\n      \"name\": \"deserunt reprehenderit\",\n      \"value\": \"ullamco\"\n    },\n    {\n      \"name\": \"voluptate mollit enim sit cupidata\",\n      \"value\": \"deserunt est ea eiusmod nostrud\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"sint Excepteur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"magna ut amet sunt\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/aws/credentials/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"credentials",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the AWS credentials configuration to be validated."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationData\": {\n    \"type\": \"KEYS\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"adipisicing in\",\n  \"partitionType\": \"AWS_US_GOV\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"irure qui cupidatat in\",\n      \"value\": \"culpa Lorem\"\n    },\n    {\n      \"name\": \"eu exercitation laborum Duis minim\",\n      \"value\": \"quis qui cupidatat\"\n    },\n    {\n      \"name\": \"ea\",\n      \"value\": \"anim enim nulla pariatur\"\n    },\n    {\n      \"name\": \"do ex\",\n      \"value\": \"elit ad\"\n    },\n    {\n      \"name\": \"dolore ut anim aute\",\n      \"value\": \"cupidatat ad consectetur\"\n    },\n    {\n      \"name\": \"officia id adipisicing \",\n      \"value\": \"et id culpa nulla do\"\n    },\n    {\n      \"name\": \"officia in elit ea cupidatat\",\n      \"value\": \"quis pariatur\"\n    },\n    {\n      \"name\": \"in sit Ut ea\",\n      \"value\": \"est in aute exercitation quis\"\n    },\n    {\n      \"name\": \"deserunt reprehenderit\",\n      \"value\": \"ullamco\"\n    },\n    {\n      \"name\": \"voluptate mollit enim sit cupidata\",\n      \"value\": \"deserunt est ea eiusmod nostrud\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"sint Excepteur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"magna ut amet sunt\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/aws/credentials/:id/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"credentials",
														":id",
														"validator"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The ID of the AWS credentials configuration to be validated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists all available AWS credentials configurations",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aws/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"credentials"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/aws/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"credentials"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"pariatur mollit\",\n    \"name\": \"exercitation\",\n    \"description\": \"labore fugiat nostrud minim\"\n  },\n  {\n    \"id\": \"occaecat fugiat\",\n    \"name\": \"dolore tempor sed amet\",\n    \"description\": \"ut Duis\"\n  }\n]"
								}
							]
						},
						{
							"name": "Creates a new AWS credentials configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authenticationData\": {\n    \"type\": \"ROLE\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"non dolore ex\",\n  \"partitionType\": \"AWS_DEFAULT\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"consectetur in aliqua qui\",\n      \"value\": \"ipsum ad aliquip\"\n    },\n    {\n      \"name\": \"sit officia anim L\",\n      \"value\": \"veniam ullamco\"\n    },\n    {\n      \"name\": \"quis cupidatat et ex tempor\",\n      \"value\": \"ut\"\n    },\n    {\n      \"name\": \"id ut exercitation\",\n      \"value\": \"culpa labore sunt nulla\"\n    },\n    {\n      \"name\": \"velit ad culpa eu\",\n      \"value\": \"et enim adipisicing eu\"\n    },\n    {\n      \"name\": \"et elit\",\n      \"value\": \"nisi cillum culpa\"\n    },\n    {\n      \"name\": \"fugiat cillum in anim ipsum\",\n      \"value\": \"ut dolore in voluptate\"\n    },\n    {\n      \"name\": \"minim veniam amet laboris\",\n      \"value\": \"id qui Duis\"\n    },\n    {\n      \"name\": \"magna ea nostrud velit\",\n      \"value\": \"dolore sit amet\"\n    },\n    {\n      \"name\": \"sint Lorem\",\n      \"value\": \"ut quis\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"labore proident sed in\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"dolore proident mollit laborum\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aws/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"credentials"
									]
								},
								"description": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server."
							},
							"response": [
								{
									"name": "Success. The new AWS credentials configuration has been created. The response body contains the ID of the configuration. \n\n Check the connection status for these credentials after 10 minutes with the `GET /aws/credentials/{id}` request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationData\": {\n    \"type\": \"KEYS\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"adipisicing in\",\n  \"partitionType\": \"AWS_US_GOV\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"irure qui cupidatat in\",\n      \"value\": \"culpa Lorem\"\n    },\n    {\n      \"name\": \"eu exercitation laborum Duis minim\",\n      \"value\": \"quis qui cupidatat\"\n    },\n    {\n      \"name\": \"ea\",\n      \"value\": \"anim enim nulla pariatur\"\n    },\n    {\n      \"name\": \"do ex\",\n      \"value\": \"elit ad\"\n    },\n    {\n      \"name\": \"dolore ut anim aute\",\n      \"value\": \"cupidatat ad consectetur\"\n    },\n    {\n      \"name\": \"officia id adipisicing \",\n      \"value\": \"et id culpa nulla do\"\n    },\n    {\n      \"name\": \"officia in elit ea cupidatat\",\n      \"value\": \"quis pariatur\"\n    },\n    {\n      \"name\": \"in sit Ut ea\",\n      \"value\": \"est in aute exercitation quis\"\n    },\n    {\n      \"name\": \"deserunt reprehenderit\",\n      \"value\": \"ullamco\"\n    },\n    {\n      \"name\": \"voluptate mollit enim sit cupidata\",\n      \"value\": \"deserunt est ea eiusmod nostrud\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"sint Excepteur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"magna ut amet sunt\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/aws/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"credentials"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationData\": {\n    \"type\": \"KEYS\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"adipisicing in\",\n  \"partitionType\": \"AWS_US_GOV\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"irure qui cupidatat in\",\n      \"value\": \"culpa Lorem\"\n    },\n    {\n      \"name\": \"eu exercitation laborum Duis minim\",\n      \"value\": \"quis qui cupidatat\"\n    },\n    {\n      \"name\": \"ea\",\n      \"value\": \"anim enim nulla pariatur\"\n    },\n    {\n      \"name\": \"do ex\",\n      \"value\": \"elit ad\"\n    },\n    {\n      \"name\": \"dolore ut anim aute\",\n      \"value\": \"cupidatat ad consectetur\"\n    },\n    {\n      \"name\": \"officia id adipisicing \",\n      \"value\": \"et id culpa nulla do\"\n    },\n    {\n      \"name\": \"officia in elit ea cupidatat\",\n      \"value\": \"quis pariatur\"\n    },\n    {\n      \"name\": \"in sit Ut ea\",\n      \"value\": \"est in aute exercitation quis\"\n    },\n    {\n      \"name\": \"deserunt reprehenderit\",\n      \"value\": \"ullamco\"\n    },\n    {\n      \"name\": \"voluptate mollit enim sit cupidata\",\n      \"value\": \"deserunt est ea eiusmod nostrud\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"sint Excepteur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"magna ut amet sunt\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/aws/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"credentials"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /aws/credentials` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authenticationData\": {\n    \"type\": \"KEYS\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"adipisicing in\",\n  \"partitionType\": \"AWS_US_GOV\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"irure qui cupidatat in\",\n      \"value\": \"culpa Lorem\"\n    },\n    {\n      \"name\": \"eu exercitation laborum Duis minim\",\n      \"value\": \"quis qui cupidatat\"\n    },\n    {\n      \"name\": \"ea\",\n      \"value\": \"anim enim nulla pariatur\"\n    },\n    {\n      \"name\": \"do ex\",\n      \"value\": \"elit ad\"\n    },\n    {\n      \"name\": \"dolore ut anim aute\",\n      \"value\": \"cupidatat ad consectetur\"\n    },\n    {\n      \"name\": \"officia id adipisicing \",\n      \"value\": \"et id culpa nulla do\"\n    },\n    {\n      \"name\": \"officia in elit ea cupidatat\",\n      \"value\": \"quis pariatur\"\n    },\n    {\n      \"name\": \"in sit Ut ea\",\n      \"value\": \"est in aute exercitation quis\"\n    },\n    {\n      \"name\": \"deserunt reprehenderit\",\n      \"value\": \"ullamco\"\n    },\n    {\n      \"name\": \"voluptate mollit enim sit cupidata\",\n      \"value\": \"deserunt est ea eiusmod nostrud\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"sint Excepteur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"magna ut amet sunt\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aws/credentials/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"credentials",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationData\": {\n    \"type\": \"KEYS\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"adipisicing in\",\n  \"partitionType\": \"AWS_US_GOV\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"irure qui cupidatat in\",\n      \"value\": \"culpa Lorem\"\n    },\n    {\n      \"name\": \"eu exercitation laborum Duis minim\",\n      \"value\": \"quis qui cupidatat\"\n    },\n    {\n      \"name\": \"ea\",\n      \"value\": \"anim enim nulla pariatur\"\n    },\n    {\n      \"name\": \"do ex\",\n      \"value\": \"elit ad\"\n    },\n    {\n      \"name\": \"dolore ut anim aute\",\n      \"value\": \"cupidatat ad consectetur\"\n    },\n    {\n      \"name\": \"officia id adipisicing \",\n      \"value\": \"et id culpa nulla do\"\n    },\n    {\n      \"name\": \"officia in elit ea cupidatat\",\n      \"value\": \"quis pariatur\"\n    },\n    {\n      \"name\": \"in sit Ut ea\",\n      \"value\": \"est in aute exercitation quis\"\n    },\n    {\n      \"name\": \"deserunt reprehenderit\",\n      \"value\": \"ullamco\"\n    },\n    {\n      \"name\": \"voluptate mollit enim sit cupidata\",\n      \"value\": \"deserunt est ea eiusmod nostrud\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"sint Excepteur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"magna ut amet sunt\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/aws/credentials/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"credentials",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationData\": {\n    \"type\": \"KEYS\",\n    \"keyBasedAuthentication\": {\n      \"accessKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"secretKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"roleBasedAuthentication\": {\n      \"accountId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iamRole\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"label\": \"adipisicing in\",\n  \"partitionType\": \"AWS_US_GOV\",\n  \"taggedOnly\": true,\n  \"tagsToMonitor\": [\n    {\n      \"name\": \"irure qui cupidatat in\",\n      \"value\": \"culpa Lorem\"\n    },\n    {\n      \"name\": \"eu exercitation laborum Duis minim\",\n      \"value\": \"quis qui cupidatat\"\n    },\n    {\n      \"name\": \"ea\",\n      \"value\": \"anim enim nulla pariatur\"\n    },\n    {\n      \"name\": \"do ex\",\n      \"value\": \"elit ad\"\n    },\n    {\n      \"name\": \"dolore ut anim aute\",\n      \"value\": \"cupidatat ad consectetur\"\n    },\n    {\n      \"name\": \"officia id adipisicing \",\n      \"value\": \"et id culpa nulla do\"\n    },\n    {\n      \"name\": \"officia in elit ea cupidatat\",\n      \"value\": \"quis pariatur\"\n    },\n    {\n      \"name\": \"in sit Ut ea\",\n      \"value\": \"est in aute exercitation quis\"\n    },\n    {\n      \"name\": \"deserunt reprehenderit\",\n      \"value\": \"ullamco\"\n    },\n    {\n      \"name\": \"voluptate mollit enim sit cupidata\",\n      \"value\": \"deserunt est ea eiusmod nostrud\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"supportingServicesToMonitor\": [\n    {\n      \"name\": \"sint Excepteur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"magna ut amet sunt\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/aws/credentials/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"credentials",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "private Link",
					"item": [
						{
							"name": "allowlisted Accounts",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Updates the given AWS account id in the allowlist in AWS PrivateLink",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json; charset=utf-8"
													},
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"4256320395 4\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/aws/privateLink/allowlistedAccounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"privateLink",
														"allowlistedAccounts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The AWS account id to be updated in the AWS PrivateLink allowlist, has to match the id in the provided payload."
														}
													]
												},
												"description": "Updates the given AWS account id in the allowlisted accounts in AWS PrivateLink for this tenant"
											},
											"response": [
												{
													"name": "Success. The account id has been added to the PrivateLink allowlist.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"4256320395 4\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/aws/privateLink/allowlistedAccounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"aws",
																"privateLink",
																"allowlistedAccounts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The AWS account id to be updated in the AWS PrivateLink allowlist, has to match the id in the provided payload."
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"4256320395 4\"\n}"
												},
												{
													"name": "Success. The account id already exists in the PrivateLink allowlist.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"4256320395 4\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/aws/privateLink/allowlistedAccounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"aws",
																"privateLink",
																"allowlistedAccounts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The AWS account id to be updated in the AWS PrivateLink allowlist, has to match the id in the provided payload."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Error. Wrong format of the provided AWS account id (length = 12 characters, only digits).",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"4256320395 4\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/aws/privateLink/allowlistedAccounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"aws",
																"privateLink",
																"allowlistedAccounts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The AWS account id to be updated in the AWS PrivateLink allowlist, has to match the id in the provided payload."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										},
										{
											"name": "Removes one AWS account from the allowlist in AWS PrivateLink",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/aws/privateLink/allowlistedAccounts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"privateLink",
														"allowlistedAccounts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "aliqua",
															"description": "(Required) The AWS account id to be deleted from the AWS PrivateLink allowlist"
														}
													]
												},
												"description": "Removes the given AWS account id from the allowlisted accounts in AWS PrivateLink for this tenant"
											},
											"response": [
												{
													"name": "Success. The account id has been removed from the PrivateLink allowlist.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/aws/privateLink/allowlistedAccounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"aws",
																"privateLink",
																"allowlistedAccounts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The AWS account id to be deleted from the AWS PrivateLink allowlist"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Error. Wrong format of the provided AWS account id (length = 12 characters, only digits).",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/aws/privateLink/allowlistedAccounts/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"aws",
																"privateLink",
																"allowlistedAccounts",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "aliqua",
																	"description": "(Required) The AWS account id to be deleted from the AWS PrivateLink allowlist"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Gets the information about all allowlisted accounts in AWS PrivateLink",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/aws/privateLink/allowlistedAccounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"privateLink",
												"allowlistedAccounts"
											]
										},
										"description": "Lists the account ids of all allowlisted accounts in AWS PrivateLink for this tenant"
									},
									"response": [
										{
											"name": "Success. The list is provided in the response body.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/aws/privateLink/allowlistedAccounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"aws",
														"privateLink",
														"allowlistedAccounts"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"values\": [\n    {\n      \"id\": \"3206 3206 32\"\n    },\n    {\n      \"id\": \"80 80 80 80 \"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the configuration information about AWS PrivateLink",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aws/privateLink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"privateLink"
									]
								},
								"description": "Gets all configuration settings for AWS PrivateLink for this tenant"
							},
							"response": [
								{
									"name": "Success. The result is provided in the response body.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/aws/privateLink",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"privateLink"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"enabled\": false,\n  \"vpcEndpointServiceName\": \"irure adipisicing eiusmod\"\n}"
								}
							]
						},
						{
							"name": "Updates the configuration information about AWS PrivateLink",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/aws/privateLink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"privateLink"
									]
								},
								"description": "Updates the configuration settings for AWS PrivateLink for this tenant"
							},
							"response": [
								{
									"name": "Success. The configuration settings have been updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/aws/privateLink",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"aws",
												"privateLink"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"enabled\": false,\n  \"vpcEndpointServiceName\": \"irure adipisicing eiusmod\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Gets the external ID token for setting an IAM role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aws/iamExternalId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aws",
								"iamExternalId"
							]
						},
						"description": "You'll need it for the role-based AWS authentication."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aws/iamExternalId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aws",
										"iamExternalId"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"ad deserunt\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "azure/credentials",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the configuration of the specified Azure credentials",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/azure/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"azure",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the required Azure credentials configuration."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/azure/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"azure",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required Azure credentials configuration."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"autoTagging\": true,\n  \"label\": \".TZt\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"ea tempor\",\n      \"value\": \"nostrud \"\n    },\n    {\n      \"name\": \"do fugiat cup\",\n      \"value\": \"eu laboris magna\"\n    },\n    {\n      \"name\": \"aliqua Duis\",\n      \"value\": \"aliquip fugiat pariatur id\"\n    },\n    {\n      \"name\": \"laborum dolore consectetur\",\n      \"value\": \"sint\"\n    },\n    {\n      \"name\": \"culpa eu do\",\n      \"value\": \"minim esse do\"\n    },\n    {\n      \"name\": \"mollit non velit\",\n      \"value\": \"occaecat commodo\"\n    },\n    {\n      \"name\": \"qui aliqua aliquip est\",\n      \"value\": \"eiusmod par\"\n    },\n    {\n      \"name\": \"in aliqua magna nisi\",\n      \"value\": \"mi\"\n    },\n    {\n      \"name\": \"nulla ipsum\",\n      \"value\": \"mollit\"\n    },\n    {\n      \"name\": \"commodo tempor in cillum Ut\",\n      \"value\": \"laboris id\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": true,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"dolore culpa\",\n  \"appId\": \"reprehenderit Ut Lorem\",\n  \"directoryId\": \"quis consectetur in\",\n  \"key\": \"enim Lorem aute sed\",\n  \"active\": false,\n  \"supportingServices\": [\n    {\n      \"name\": \"ut in proident\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"nulla aliqua ut exercitation\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Updates an existing Azure credentials configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"autoTagging\": false,\n  \"label\": \"y-TeMpMtr\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"ut qui in\",\n      \"value\": \"ipsum dolor cupidatat deserunt\"\n    },\n    {\n      \"name\": \"sint Excepteur minim\",\n      \"value\": \"occaecat incididunt cupidatat sunt\"\n    },\n    {\n      \"name\": \"dolor mollit amet deserunt\",\n      \"value\": \"ullamco do sunt\"\n    },\n    {\n      \"name\": \"amet laboris cillum do\",\n      \"value\": \"pariatur ipsum ut\"\n    },\n    {\n      \"name\": \"reprehenderit culpa\",\n      \"value\": \"Lorem officia dolore consectetur\"\n    },\n    {\n      \"name\": \"sed Duis ipsum Ut laboru\",\n      \"value\": \"veniam officia deserunt\"\n    },\n    {\n      \"name\": \"nostrud dolor in non\",\n      \"value\": \"incididunt Lorem sint\"\n    },\n    {\n      \"name\": \"ad Lorem dolore\",\n      \"value\": \"enim t\"\n    },\n    {\n      \"name\": \"incididunt ut\",\n      \"value\": \"eius\"\n    },\n    {\n      \"name\": \"ipsum dolore veniam do in\",\n      \"value\": \"c\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"appId\": \"magna qui eu\",\n  \"directoryId\": \"veniam\",\n  \"key\": \"veniam quis\",\n  \"active\": false,\n  \"supportingServices\": [\n    {\n      \"name\": \"sed qui ea\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"veniam nisi in irure\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/azure/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"azure",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the Azure credentials configuration to be updated."
										}
									]
								},
								"description": "* You can't change the Application ID or Directory ID of an Azure configuration. If you need to change them, create a new credentials configuration. \n* If a configuration with the specified ID doesn't exist, a new configuration is created."
							},
							"response": [
								{
									"name": "Success. The new Azure credentials configuration has been created. The response body contains the ID of the configuration.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"autoTagging\": false,\n  \"label\": \"y-TeMpMtr\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"ut qui in\",\n      \"value\": \"ipsum dolor cupidatat deserunt\"\n    },\n    {\n      \"name\": \"sint Excepteur minim\",\n      \"value\": \"occaecat incididunt cupidatat sunt\"\n    },\n    {\n      \"name\": \"dolor mollit amet deserunt\",\n      \"value\": \"ullamco do sunt\"\n    },\n    {\n      \"name\": \"amet laboris cillum do\",\n      \"value\": \"pariatur ipsum ut\"\n    },\n    {\n      \"name\": \"reprehenderit culpa\",\n      \"value\": \"Lorem officia dolore consectetur\"\n    },\n    {\n      \"name\": \"sed Duis ipsum Ut laboru\",\n      \"value\": \"veniam officia deserunt\"\n    },\n    {\n      \"name\": \"nostrud dolor in non\",\n      \"value\": \"incididunt Lorem sint\"\n    },\n    {\n      \"name\": \"ad Lorem dolore\",\n      \"value\": \"enim t\"\n    },\n    {\n      \"name\": \"incididunt ut\",\n      \"value\": \"eius\"\n    },\n    {\n      \"name\": \"ipsum dolore veniam do in\",\n      \"value\": \"c\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"appId\": \"magna qui eu\",\n  \"directoryId\": \"veniam\",\n  \"key\": \"veniam quis\",\n  \"active\": false,\n  \"supportingServices\": [\n    {\n      \"name\": \"sed qui ea\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"veniam nisi in irure\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/azure/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"azure",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Azure credentials configuration to be updated."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Success. The Azure credentials configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"autoTagging\": false,\n  \"label\": \"y-TeMpMtr\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"ut qui in\",\n      \"value\": \"ipsum dolor cupidatat deserunt\"\n    },\n    {\n      \"name\": \"sint Excepteur minim\",\n      \"value\": \"occaecat incididunt cupidatat sunt\"\n    },\n    {\n      \"name\": \"dolor mollit amet deserunt\",\n      \"value\": \"ullamco do sunt\"\n    },\n    {\n      \"name\": \"amet laboris cillum do\",\n      \"value\": \"pariatur ipsum ut\"\n    },\n    {\n      \"name\": \"reprehenderit culpa\",\n      \"value\": \"Lorem officia dolore consectetur\"\n    },\n    {\n      \"name\": \"sed Duis ipsum Ut laboru\",\n      \"value\": \"veniam officia deserunt\"\n    },\n    {\n      \"name\": \"nostrud dolor in non\",\n      \"value\": \"incididunt Lorem sint\"\n    },\n    {\n      \"name\": \"ad Lorem dolore\",\n      \"value\": \"enim t\"\n    },\n    {\n      \"name\": \"incididunt ut\",\n      \"value\": \"eius\"\n    },\n    {\n      \"name\": \"ipsum dolore veniam do in\",\n      \"value\": \"c\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"appId\": \"magna qui eu\",\n  \"directoryId\": \"veniam\",\n  \"key\": \"veniam quis\",\n  \"active\": false,\n  \"supportingServices\": [\n    {\n      \"name\": \"sed qui ea\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"veniam nisi in irure\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/azure/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"azure",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Azure credentials configuration to be updated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"autoTagging\": false,\n  \"label\": \"y-TeMpMtr\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"ut qui in\",\n      \"value\": \"ipsum dolor cupidatat deserunt\"\n    },\n    {\n      \"name\": \"sint Excepteur minim\",\n      \"value\": \"occaecat incididunt cupidatat sunt\"\n    },\n    {\n      \"name\": \"dolor mollit amet deserunt\",\n      \"value\": \"ullamco do sunt\"\n    },\n    {\n      \"name\": \"amet laboris cillum do\",\n      \"value\": \"pariatur ipsum ut\"\n    },\n    {\n      \"name\": \"reprehenderit culpa\",\n      \"value\": \"Lorem officia dolore consectetur\"\n    },\n    {\n      \"name\": \"sed Duis ipsum Ut laboru\",\n      \"value\": \"veniam officia deserunt\"\n    },\n    {\n      \"name\": \"nostrud dolor in non\",\n      \"value\": \"incididunt Lorem sint\"\n    },\n    {\n      \"name\": \"ad Lorem dolore\",\n      \"value\": \"enim t\"\n    },\n    {\n      \"name\": \"incididunt ut\",\n      \"value\": \"eius\"\n    },\n    {\n      \"name\": \"ipsum dolore veniam do in\",\n      \"value\": \"c\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"appId\": \"magna qui eu\",\n  \"directoryId\": \"veniam\",\n  \"key\": \"veniam quis\",\n  \"active\": false,\n  \"supportingServices\": [\n    {\n      \"name\": \"sed qui ea\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"veniam nisi in irure\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/azure/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"azure",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Azure credentials configuration to be updated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified Azure credentials configuration",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/azure/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"azure",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the Azure credentials configuration to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Deleted. The response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/azure/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"azure",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Azure credentials configuration to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/azure/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"azure",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Azure credentials configuration to be deleted."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /azure/credentials/{id}` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"autoTagging\": false,\n  \"label\": \"y-TeMpMtr\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"ut qui in\",\n      \"value\": \"ipsum dolor cupidatat deserunt\"\n    },\n    {\n      \"name\": \"sint Excepteur minim\",\n      \"value\": \"occaecat incididunt cupidatat sunt\"\n    },\n    {\n      \"name\": \"dolor mollit amet deserunt\",\n      \"value\": \"ullamco do sunt\"\n    },\n    {\n      \"name\": \"amet laboris cillum do\",\n      \"value\": \"pariatur ipsum ut\"\n    },\n    {\n      \"name\": \"reprehenderit culpa\",\n      \"value\": \"Lorem officia dolore consectetur\"\n    },\n    {\n      \"name\": \"sed Duis ipsum Ut laboru\",\n      \"value\": \"veniam officia deserunt\"\n    },\n    {\n      \"name\": \"nostrud dolor in non\",\n      \"value\": \"incididunt Lorem sint\"\n    },\n    {\n      \"name\": \"ad Lorem dolore\",\n      \"value\": \"enim t\"\n    },\n    {\n      \"name\": \"incididunt ut\",\n      \"value\": \"eius\"\n    },\n    {\n      \"name\": \"ipsum dolore veniam do in\",\n      \"value\": \"c\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"appId\": \"magna qui eu\",\n  \"directoryId\": \"veniam\",\n  \"key\": \"veniam quis\",\n  \"active\": false,\n  \"supportingServices\": [\n    {\n      \"name\": \"sed qui ea\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"veniam nisi in irure\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/azure/credentials/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"azure",
										"credentials",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the Azure credentials configuration to be validated."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. The response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"autoTagging\": false,\n  \"label\": \"y-TeMpMtr\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"ut qui in\",\n      \"value\": \"ipsum dolor cupidatat deserunt\"\n    },\n    {\n      \"name\": \"sint Excepteur minim\",\n      \"value\": \"occaecat incididunt cupidatat sunt\"\n    },\n    {\n      \"name\": \"dolor mollit amet deserunt\",\n      \"value\": \"ullamco do sunt\"\n    },\n    {\n      \"name\": \"amet laboris cillum do\",\n      \"value\": \"pariatur ipsum ut\"\n    },\n    {\n      \"name\": \"reprehenderit culpa\",\n      \"value\": \"Lorem officia dolore consectetur\"\n    },\n    {\n      \"name\": \"sed Duis ipsum Ut laboru\",\n      \"value\": \"veniam officia deserunt\"\n    },\n    {\n      \"name\": \"nostrud dolor in non\",\n      \"value\": \"incididunt Lorem sint\"\n    },\n    {\n      \"name\": \"ad Lorem dolore\",\n      \"value\": \"enim t\"\n    },\n    {\n      \"name\": \"incididunt ut\",\n      \"value\": \"eius\"\n    },\n    {\n      \"name\": \"ipsum dolore veniam do in\",\n      \"value\": \"c\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"appId\": \"magna qui eu\",\n  \"directoryId\": \"veniam\",\n  \"key\": \"veniam quis\",\n  \"active\": false,\n  \"supportingServices\": [\n    {\n      \"name\": \"sed qui ea\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"veniam nisi in irure\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/azure/credentials/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"azure",
												"credentials",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Azure credentials configuration to be validated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"autoTagging\": false,\n  \"label\": \"y-TeMpMtr\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"ut qui in\",\n      \"value\": \"ipsum dolor cupidatat deserunt\"\n    },\n    {\n      \"name\": \"sint Excepteur minim\",\n      \"value\": \"occaecat incididunt cupidatat sunt\"\n    },\n    {\n      \"name\": \"dolor mollit amet deserunt\",\n      \"value\": \"ullamco do sunt\"\n    },\n    {\n      \"name\": \"amet laboris cillum do\",\n      \"value\": \"pariatur ipsum ut\"\n    },\n    {\n      \"name\": \"reprehenderit culpa\",\n      \"value\": \"Lorem officia dolore consectetur\"\n    },\n    {\n      \"name\": \"sed Duis ipsum Ut laboru\",\n      \"value\": \"veniam officia deserunt\"\n    },\n    {\n      \"name\": \"nostrud dolor in non\",\n      \"value\": \"incididunt Lorem sint\"\n    },\n    {\n      \"name\": \"ad Lorem dolore\",\n      \"value\": \"enim t\"\n    },\n    {\n      \"name\": \"incididunt ut\",\n      \"value\": \"eius\"\n    },\n    {\n      \"name\": \"ipsum dolore veniam do in\",\n      \"value\": \"c\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"appId\": \"magna qui eu\",\n  \"directoryId\": \"veniam\",\n  \"key\": \"veniam quis\",\n  \"active\": false,\n  \"supportingServices\": [\n    {\n      \"name\": \"sed qui ea\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"veniam nisi in irure\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/azure/credentials/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"azure",
												"credentials",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Azure credentials configuration to be validated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available Azure credentials configurations",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/azure/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"azure",
								"credentials"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/azure/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"azure",
										"credentials"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new Azure credentials configuration",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"appId\": \"aliquip\",\n  \"autoTagging\": true,\n  \"directoryId\": \"anim eiusmod\",\n  \"key\": \"nisi adipisicing elit anim\",\n  \"label\": \"VGMAG\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"consectetur in\",\n      \"value\": \"cillum a\"\n    },\n    {\n      \"name\": \"eiusmod in elit ullamco\",\n      \"value\": \"aliqua qui\"\n    },\n    {\n      \"name\": \"esse\",\n      \"value\": \"mollit eiusmod esse\"\n    },\n    {\n      \"name\": \"nostrud commodo labore aliqua\",\n      \"value\": \"reprehenderit magna sit in\"\n    },\n    {\n      \"name\": \"nulla labore\",\n      \"value\": \"irure eiusmod dolore laboris dolor\"\n    },\n    {\n      \"name\": \"aliquip cupidatat quis officia in\",\n      \"value\": \"exercitation incidi\"\n    },\n    {\n      \"name\": \"elit ullamco voluptate exercitation\",\n      \"value\": \"dolor ut\"\n    },\n    {\n      \"name\": \"elit anim aute\",\n      \"value\": \"dolore Ut cillum\"\n    },\n    {\n      \"name\": \"mollit id officia et\",\n      \"value\": \"irure minim esse et nisi\"\n    },\n    {\n      \"name\": \"nostrud veniam\",\n      \"value\": \"in dolor fugiat\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": true,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"supportingServices\": [\n    {\n      \"name\": \"aliquip proident Excepteur\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"pariatur dolore ea\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/azure/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"azure",
								"credentials"
							]
						},
						"description": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server."
					},
					"response": [
						{
							"name": "Success. The new Azure credentials configuration has been created. The response body contains the ID of the configuration.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"appId\": \"aliqua exercitation\",\n  \"autoTagging\": true,\n  \"directoryId\": \"dolore est ex\",\n  \"key\": \"id cupidatat pr\",\n  \"label\": \"oUCTN\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"occaecat sint ea\",\n      \"value\": \"ut \"\n    },\n    {\n      \"name\": \"eu cillum nostrud sunt nulla\",\n      \"value\": \"nisi consectetur aute nostrud \"\n    },\n    {\n      \"name\": \"exercitation aute do\",\n      \"value\": \"laboris dolore magna Excepteur\"\n    },\n    {\n      \"name\": \"occaecat\",\n      \"value\": \"officia in fugiat\"\n    },\n    {\n      \"name\": \"sed proident\",\n      \"value\": \"voluptate lab\"\n    },\n    {\n      \"name\": \"quis proident et nisi dolor\",\n      \"value\": \"non sunt in\"\n    },\n    {\n      \"name\": \"cupidatat ut\",\n      \"value\": \"ipsum mollit dolore\"\n    },\n    {\n      \"name\": \"dolore occaecat non\",\n      \"value\": \"dolor ipsum\"\n    },\n    {\n      \"name\": \"officia pariatur in\",\n      \"value\": \"sint dolore laborum ad labore\"\n    },\n    {\n      \"name\": \"culpa nostrud\",\n      \"value\": \"aliquip Lorem est in labore\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": true,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": false,\n  \"supportingServices\": [\n    {\n      \"name\": \"in elit\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ex nulla sit \",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/azure/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"azure",
										"credentials"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"appId\": \"aliqua exercitation\",\n  \"autoTagging\": true,\n  \"directoryId\": \"dolore est ex\",\n  \"key\": \"id cupidatat pr\",\n  \"label\": \"oUCTN\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"occaecat sint ea\",\n      \"value\": \"ut \"\n    },\n    {\n      \"name\": \"eu cillum nostrud sunt nulla\",\n      \"value\": \"nisi consectetur aute nostrud \"\n    },\n    {\n      \"name\": \"exercitation aute do\",\n      \"value\": \"laboris dolore magna Excepteur\"\n    },\n    {\n      \"name\": \"occaecat\",\n      \"value\": \"officia in fugiat\"\n    },\n    {\n      \"name\": \"sed proident\",\n      \"value\": \"voluptate lab\"\n    },\n    {\n      \"name\": \"quis proident et nisi dolor\",\n      \"value\": \"non sunt in\"\n    },\n    {\n      \"name\": \"cupidatat ut\",\n      \"value\": \"ipsum mollit dolore\"\n    },\n    {\n      \"name\": \"dolore occaecat non\",\n      \"value\": \"dolor ipsum\"\n    },\n    {\n      \"name\": \"officia pariatur in\",\n      \"value\": \"sint dolore laborum ad labore\"\n    },\n    {\n      \"name\": \"culpa nostrud\",\n      \"value\": \"aliquip Lorem est in labore\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": true,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": false,\n  \"supportingServices\": [\n    {\n      \"name\": \"in elit\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ex nulla sit \",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/azure/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"azure",
										"credentials"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the `POST /azure/credentials` request",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"autoTagging\": false,\n  \"label\": \"y-TeMpMtr\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"ut qui in\",\n      \"value\": \"ipsum dolor cupidatat deserunt\"\n    },\n    {\n      \"name\": \"sint Excepteur minim\",\n      \"value\": \"occaecat incididunt cupidatat sunt\"\n    },\n    {\n      \"name\": \"dolor mollit amet deserunt\",\n      \"value\": \"ullamco do sunt\"\n    },\n    {\n      \"name\": \"amet laboris cillum do\",\n      \"value\": \"pariatur ipsum ut\"\n    },\n    {\n      \"name\": \"reprehenderit culpa\",\n      \"value\": \"Lorem officia dolore consectetur\"\n    },\n    {\n      \"name\": \"sed Duis ipsum Ut laboru\",\n      \"value\": \"veniam officia deserunt\"\n    },\n    {\n      \"name\": \"nostrud dolor in non\",\n      \"value\": \"incididunt Lorem sint\"\n    },\n    {\n      \"name\": \"ad Lorem dolore\",\n      \"value\": \"enim t\"\n    },\n    {\n      \"name\": \"incididunt ut\",\n      \"value\": \"eius\"\n    },\n    {\n      \"name\": \"ipsum dolore veniam do in\",\n      \"value\": \"c\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"appId\": \"magna qui eu\",\n  \"directoryId\": \"veniam\",\n  \"key\": \"veniam quis\",\n  \"active\": false,\n  \"supportingServices\": [\n    {\n      \"name\": \"sed qui ea\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"veniam nisi in irure\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/azure/credentials/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"azure",
								"credentials",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted configuration is valid. The response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"autoTagging\": false,\n  \"label\": \"y-TeMpMtr\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"ut qui in\",\n      \"value\": \"ipsum dolor cupidatat deserunt\"\n    },\n    {\n      \"name\": \"sint Excepteur minim\",\n      \"value\": \"occaecat incididunt cupidatat sunt\"\n    },\n    {\n      \"name\": \"dolor mollit amet deserunt\",\n      \"value\": \"ullamco do sunt\"\n    },\n    {\n      \"name\": \"amet laboris cillum do\",\n      \"value\": \"pariatur ipsum ut\"\n    },\n    {\n      \"name\": \"reprehenderit culpa\",\n      \"value\": \"Lorem officia dolore consectetur\"\n    },\n    {\n      \"name\": \"sed Duis ipsum Ut laboru\",\n      \"value\": \"veniam officia deserunt\"\n    },\n    {\n      \"name\": \"nostrud dolor in non\",\n      \"value\": \"incididunt Lorem sint\"\n    },\n    {\n      \"name\": \"ad Lorem dolore\",\n      \"value\": \"enim t\"\n    },\n    {\n      \"name\": \"incididunt ut\",\n      \"value\": \"eius\"\n    },\n    {\n      \"name\": \"ipsum dolore veniam do in\",\n      \"value\": \"c\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"appId\": \"magna qui eu\",\n  \"directoryId\": \"veniam\",\n  \"key\": \"veniam quis\",\n  \"active\": false,\n  \"supportingServices\": [\n    {\n      \"name\": \"sed qui ea\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"veniam nisi in irure\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/azure/credentials/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"azure",
										"credentials",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"autoTagging\": false,\n  \"label\": \"y-TeMpMtr\",\n  \"monitorOnlyTagPairs\": [\n    {\n      \"name\": \"ut qui in\",\n      \"value\": \"ipsum dolor cupidatat deserunt\"\n    },\n    {\n      \"name\": \"sint Excepteur minim\",\n      \"value\": \"occaecat incididunt cupidatat sunt\"\n    },\n    {\n      \"name\": \"dolor mollit amet deserunt\",\n      \"value\": \"ullamco do sunt\"\n    },\n    {\n      \"name\": \"amet laboris cillum do\",\n      \"value\": \"pariatur ipsum ut\"\n    },\n    {\n      \"name\": \"reprehenderit culpa\",\n      \"value\": \"Lorem officia dolore consectetur\"\n    },\n    {\n      \"name\": \"sed Duis ipsum Ut laboru\",\n      \"value\": \"veniam officia deserunt\"\n    },\n    {\n      \"name\": \"nostrud dolor in non\",\n      \"value\": \"incididunt Lorem sint\"\n    },\n    {\n      \"name\": \"ad Lorem dolore\",\n      \"value\": \"enim t\"\n    },\n    {\n      \"name\": \"incididunt ut\",\n      \"value\": \"eius\"\n    },\n    {\n      \"name\": \"ipsum dolore veniam do in\",\n      \"value\": \"c\"\n    }\n  ],\n  \"monitorOnlyTaggedEntities\": false,\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"appId\": \"magna qui eu\",\n  \"directoryId\": \"veniam\",\n  \"key\": \"veniam quis\",\n  \"active\": false,\n  \"supportingServices\": [\n    {\n      \"name\": \"sed qui ea\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"veniam nisi in irure\",\n      \"monitoredMetrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/azure/credentials/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"azure",
										"credentials",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "cloud Foundry/credentials",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Show the properties for the specified Cloud Foundry foundation credentials. | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cloudFoundry/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloudFoundry",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the required Cloud Foundry foundation credentials."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/cloudFoundry/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloudFoundry",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required Cloud Foundry foundation credentials."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"apiUrl\": \"eu\",\n  \"loginUrl\": \"cupida\",\n  \"name\": \"N5Wg9w\",\n  \"username\": \"non\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"laborum id ut\",\n  \"active\": true,\n  \"endpointStatus\": \"FASTCHECK_AUTH_LOCKED\",\n  \"endpointStatusInfo\": \"et incididunt Ut ex\",\n  \"password\": \"labore amet deserunt esse\"\n}"
								}
							]
						},
						{
							"name": "Create or update credentials for a single Cloud Foundry foundation. | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiUrl\": \"incididunt enim sint in\",\n  \"loginUrl\": \"aliquip amet\",\n  \"name\": \"G\",\n  \"username\": \"dolore ad enim\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"password\": \"quis ut dolor esse\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cloudFoundry/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloudFoundry",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the Cloud Foundry foundation credentials."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. Cloud Foundry foundation credentials have been created. The ID and name of the new credentials are returned.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiUrl\": \"incididunt enim sint in\",\n  \"loginUrl\": \"aliquip amet\",\n  \"name\": \"G\",\n  \"username\": \"dolore ad enim\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"password\": \"quis ut dolor esse\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/cloudFoundry/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloudFoundry",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Cloud Foundry foundation credentials."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Success. Cloud Foundry foundation credentials have been successfully updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiUrl\": \"incididunt enim sint in\",\n  \"loginUrl\": \"aliquip amet\",\n  \"name\": \"G\",\n  \"username\": \"dolore ad enim\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"password\": \"quis ut dolor esse\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/cloudFoundry/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloudFoundry",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Cloud Foundry foundation credentials."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiUrl\": \"incididunt enim sint in\",\n  \"loginUrl\": \"aliquip amet\",\n  \"name\": \"G\",\n  \"username\": \"dolore ad enim\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"password\": \"quis ut dolor esse\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/cloudFoundry/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloudFoundry",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Cloud Foundry foundation credentials."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Delete the specified Cloud Foundry foundation credentials. | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cloudFoundry/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloudFoundry",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the Cloud Foundry foundation credentials to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Deleted. Response does not have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/cloudFoundry/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloudFoundry",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Cloud Foundry foundation credentials to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validate that updating or creating credentials would be successful. | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiUrl\": \"incididunt enim sint in\",\n  \"loginUrl\": \"aliquip amet\",\n  \"name\": \"G\",\n  \"username\": \"dolore ad enim\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"password\": \"quis ut dolor esse\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cloudFoundry/credentials/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloudFoundry",
										"credentials",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the Cloud Foundry foundation credentials."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted credentials are valid. Response does not have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiUrl\": \"incididunt enim sint in\",\n  \"loginUrl\": \"aliquip amet\",\n  \"name\": \"G\",\n  \"username\": \"dolore ad enim\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"password\": \"quis ut dolor esse\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/cloudFoundry/credentials/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloudFoundry",
												"credentials",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Cloud Foundry foundation credentials."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiUrl\": \"incididunt enim sint in\",\n  \"loginUrl\": \"aliquip amet\",\n  \"name\": \"G\",\n  \"username\": \"dolore ad enim\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"password\": \"quis ut dolor esse\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/cloudFoundry/credentials/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cloudFoundry",
												"credentials",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Cloud Foundry foundation credentials."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "List all the Cloud Foundry foundations credentials. | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cloudFoundry/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cloudFoundry",
								"credentials"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cloudFoundry/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloudFoundry",
										"credentials"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create new credentials for a single foundation. | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"apiUrl\": \"incididunt enim sint in\",\n  \"loginUrl\": \"aliquip amet\",\n  \"name\": \"G\",\n  \"username\": \"dolore ad enim\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"password\": \"quis ut dolor esse\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cloudFoundry/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cloudFoundry",
								"credentials"
							]
						}
					},
					"response": [
						{
							"name": "Success. Cloud Foundry foundation credentials have been created. The ID and name of the new credentials are returned.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiUrl\": \"incididunt enim sint in\",\n  \"loginUrl\": \"aliquip amet\",\n  \"name\": \"G\",\n  \"username\": \"dolore ad enim\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"password\": \"quis ut dolor esse\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cloudFoundry/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloudFoundry",
										"credentials"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiUrl\": \"incididunt enim sint in\",\n  \"loginUrl\": \"aliquip amet\",\n  \"name\": \"G\",\n  \"username\": \"dolore ad enim\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"password\": \"quis ut dolor esse\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cloudFoundry/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloudFoundry",
										"credentials"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validate that creating credentials would be successful. | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"apiUrl\": \"incididunt enim sint in\",\n  \"loginUrl\": \"aliquip amet\",\n  \"name\": \"G\",\n  \"username\": \"dolore ad enim\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"password\": \"quis ut dolor esse\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cloudFoundry/credentials/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cloudFoundry",
								"credentials",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted credentials are valid. Response does not have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiUrl\": \"incididunt enim sint in\",\n  \"loginUrl\": \"aliquip amet\",\n  \"name\": \"G\",\n  \"username\": \"dolore ad enim\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"password\": \"quis ut dolor esse\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cloudFoundry/credentials/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloudFoundry",
										"credentials",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiUrl\": \"incididunt enim sint in\",\n  \"loginUrl\": \"aliquip amet\",\n  \"name\": \"G\",\n  \"username\": \"dolore ad enim\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"active\": true,\n  \"password\": \"quis ut dolor esse\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cloudFoundry/credentials/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cloudFoundry",
										"credentials",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "kubernetes/credentials",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the configuration of the specified Kubernetes credentials | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the required Kubernetes credentials configuration."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/kubernetes/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"kubernetes",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the required Kubernetes credentials configuration."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}"
								}
							]
						},
						{
							"name": "Updates an existing Kubernetes credentials configuration | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the Kubernetes credentials configuration to be updated."
										}
									]
								},
								"description": "You can't change the URL of the Kubernetes cluster. \n\nIf a configuration with the specified ID doesn't exist, a new configuration is created.\n\nIDs of entities are computed server side upon creation. If you want to create a new entity, use the POST method without an ID. To update an existing entity, use the PUT method with an existing, valid ID. To re-create an entity under a specific ID, a valid ID must be provided with the PUT method."
							},
							"response": [
								{
									"name": "Success. The new Kubernetes credentials configuration has been created. The response body contains the ID of the configuration.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/kubernetes/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"kubernetes",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Kubernetes credentials configuration to be updated."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Success. The Kubernetes credentials configuration has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/kubernetes/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"kubernetes",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Kubernetes credentials configuration to be updated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/kubernetes/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"kubernetes",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Kubernetes credentials configuration to be updated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified Kubernetes credentials configuration | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the Kubernetes credentials configuration be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Deleted. The response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/kubernetes/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"kubernetes",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Kubernetes credentials configuration be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/kubernetes/credentials/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"kubernetes",
												"credentials",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Kubernetes credentials configuration be deleted."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /kubernetes/credentials/{id}` request | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/credentials/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"credentials",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "aliqua",
											"description": "(Required) The ID of the Kubernetes credentials configuration to be validated."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. The response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/kubernetes/credentials/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"kubernetes",
												"credentials",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Kubernetes credentials configuration to be validated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/kubernetes/credentials/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"kubernetes",
												"credentials",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "aliqua",
													"description": "(Required) The ID of the Kubernetes credentials configuration to be validated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available Kubernetes credentials configurations | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/kubernetes/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"credentials"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/kubernetes/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"credentials"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"endpointUrl\": \"ad culpa\",\n      \"id\": \"reprehenderit anim sint non voluptate\",\n      \"name\": \"aute eu\",\n      \"description\": \"officia sint\"\n    },\n    {\n      \"endpointUrl\": \"culpa veniam enim ad quis\",\n      \"id\": \"commodo consequat sint\",\n      \"name\": \"labore incididunt\",\n      \"description\": \"consectetur ullamco tempor consequat sint\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new Kubernetes credentials configuration | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/kubernetes/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"credentials"
							]
						},
						"description": "The body must not provide an ID as it will be automatically assigned by the Dynatrace server."
					},
					"response": [
						{
							"name": "Success. The new Kubernetes credentials configuration has been created. The response body contains the ID of the configuration.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"credentials"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"credentials"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the `POST /kubernetes/credentials` request | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/kubernetes/credentials/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"kubernetes",
								"credentials",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted configuration is valid. The response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/credentials/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"credentials",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"label\": \"K8s credentials - REST example\",\n  \"endpointUrl\": \"https://k8s-api.sample.org\",\n  \"eventsFieldSelectors\": [\n    {\n      \"label\": \"Node events\",\n      \"fieldSelector\": \"involvedObject.kind=Node\",\n      \"active\": true\n    }\n  ],\n  \"workloadIntegrationEnabled\": true,\n  \"eventsIntegrationEnabled\": true,\n  \"authToken\": \"abcd9876\",\n  \"activeGateGroup\": \"group-1\",\n  \"active\": true,\n  \"certificateCheckEnabled\": true,\n  \"hostnameVerificationEnabled\": true,\n  \"prometheusExportersIntegrationEnabled\": true,\n  \"davisEventsIntegrationEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/kubernetes/credentials/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"kubernetes",
										"credentials",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "maintenance Windows",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the properties of the specified maintenance window",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/maintenanceWindows/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"maintenanceWindows",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the required maintenance window."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/maintenanceWindows/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"maintenanceWindows",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the required maintenance window."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"description\": \"mi\",\n  \"name\": \"in do\",\n  \"schedule\": {\n    \"end\": \"mollit consequat ut\",\n    \"recurrenceType\": \"ONCE\",\n    \"start\": \"cillum voluptate sed\",\n    \"zoneId\": \"mollit\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DETECT_PROBLEMS_AND_ALERT\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"urn:uuid:392fdca9-0d04-e447-7efc-02197912e07e\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"culpa aute occaecat amet\",\n      \"Excepteur sit velit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Updates an existing maintenance window",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"mi\",\n  \"name\": \"in do\",\n  \"schedule\": {\n    \"end\": \"mollit consequat ut\",\n    \"recurrenceType\": \"ONCE\",\n    \"start\": \"cillum voluptate sed\",\n    \"zoneId\": \"mollit\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DETECT_PROBLEMS_AND_ALERT\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"urn:uuid:392fdca9-0d04-e447-7efc-02197912e07e\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"culpa aute occaecat amet\",\n      \"Excepteur sit velit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/maintenanceWindows/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"maintenanceWindows",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the maintenance window to be updated."
										}
									]
								},
								"description": "If a maintenance window with the specified ID doesn't exist, a new one is created."
							},
							"response": [
								{
									"name": "Success. The new maintenance window has been created. The response body contains its ID.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"mi\",\n  \"name\": \"in do\",\n  \"schedule\": {\n    \"end\": \"mollit consequat ut\",\n    \"recurrenceType\": \"ONCE\",\n    \"start\": \"cillum voluptate sed\",\n    \"zoneId\": \"mollit\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DETECT_PROBLEMS_AND_ALERT\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"urn:uuid:392fdca9-0d04-e447-7efc-02197912e07e\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"culpa aute occaecat amet\",\n      \"Excepteur sit velit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/maintenanceWindows/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"maintenanceWindows",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the maintenance window to be updated."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
								},
								{
									"name": "Success. The maintenance window has been updated. The response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"mi\",\n  \"name\": \"in do\",\n  \"schedule\": {\n    \"end\": \"mollit consequat ut\",\n    \"recurrenceType\": \"ONCE\",\n    \"start\": \"cillum voluptate sed\",\n    \"zoneId\": \"mollit\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DETECT_PROBLEMS_AND_ALERT\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"urn:uuid:392fdca9-0d04-e447-7efc-02197912e07e\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"culpa aute occaecat amet\",\n      \"Excepteur sit velit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/maintenanceWindows/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"maintenanceWindows",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the maintenance window to be updated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"mi\",\n  \"name\": \"in do\",\n  \"schedule\": {\n    \"end\": \"mollit consequat ut\",\n    \"recurrenceType\": \"ONCE\",\n    \"start\": \"cillum voluptate sed\",\n    \"zoneId\": \"mollit\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DETECT_PROBLEMS_AND_ALERT\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"urn:uuid:392fdca9-0d04-e447-7efc-02197912e07e\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"culpa aute occaecat amet\",\n      \"Excepteur sit velit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/maintenanceWindows/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"maintenanceWindows",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the maintenance window to be updated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified maintenance window",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/maintenanceWindows/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"maintenanceWindows",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the maintenance window to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The maintenance window has been deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/maintenanceWindows/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"maintenanceWindows",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the maintenance window to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validates the payload for the `PUT /maintenancewindow/{id}` request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"mi\",\n  \"name\": \"in do\",\n  \"schedule\": {\n    \"end\": \"mollit consequat ut\",\n    \"recurrenceType\": \"ONCE\",\n    \"start\": \"cillum voluptate sed\",\n    \"zoneId\": \"mollit\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DETECT_PROBLEMS_AND_ALERT\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"urn:uuid:392fdca9-0d04-e447-7efc-02197912e07e\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"culpa aute occaecat amet\",\n      \"Excepteur sit velit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/maintenanceWindows/:id/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"maintenanceWindows",
										":id",
										"validator"
									],
									"variable": [
										{
											"key": "id",
											"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
											"description": "(Required) The ID of the maintenance window to be validated."
										}
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"mi\",\n  \"name\": \"in do\",\n  \"schedule\": {\n    \"end\": \"mollit consequat ut\",\n    \"recurrenceType\": \"ONCE\",\n    \"start\": \"cillum voluptate sed\",\n    \"zoneId\": \"mollit\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DETECT_PROBLEMS_AND_ALERT\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"urn:uuid:392fdca9-0d04-e447-7efc-02197912e07e\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"culpa aute occaecat amet\",\n      \"Excepteur sit velit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/maintenanceWindows/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"maintenanceWindows",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the maintenance window to be validated."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"mi\",\n  \"name\": \"in do\",\n  \"schedule\": {\n    \"end\": \"mollit consequat ut\",\n    \"recurrenceType\": \"ONCE\",\n    \"start\": \"cillum voluptate sed\",\n    \"zoneId\": \"mollit\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DETECT_PROBLEMS_AND_ALERT\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"urn:uuid:392fdca9-0d04-e447-7efc-02197912e07e\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"culpa aute occaecat amet\",\n      \"Excepteur sit velit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/maintenanceWindows/:id/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"maintenanceWindows",
												":id",
												"validator"
											],
											"variable": [
												{
													"key": "id",
													"value": "b4132f03-c6b8-3780-f296-5030d14ae066",
													"description": "(Required) The ID of the maintenance window to be validated."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available maintenance windows",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/maintenanceWindows",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"maintenanceWindows"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/maintenanceWindows",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"maintenanceWindows"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"eiusmod in culpa ut Ut\",\n      \"name\": \"proident \",\n      \"description\": \"irure velit\"\n    },\n    {\n      \"id\": \"ipsum exercitation aliqua mollit pariatur\",\n      \"name\": \"magna in\",\n      \"description\": \"elit voluptate commodo\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new maintenance window",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"cupidatat in mollit\",\n  \"name\": \"laboris quis occaecat et\",\n  \"schedule\": {\n    \"end\": \"sint\",\n    \"recurrenceType\": \"MONTHLY\",\n    \"start\": \"in minim\",\n    \"zoneId\": \"reprehenderit ut\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DONT_DETECT_PROBLEMS\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"70560bc2-77c1-9e03-f558-053a185cb12c\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"ullamco ad\",\n      \"enim mollit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/maintenanceWindows",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"maintenanceWindows"
							]
						},
						"description": "The body must not provide an ID. An ID is assigned automatically by the Dynatrace server."
					},
					"response": [
						{
							"name": "Success. The new maintenance window has been created. The response body contains its ID.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"mi\",\n  \"name\": \"in do\",\n  \"schedule\": {\n    \"end\": \"mollit consequat ut\",\n    \"recurrenceType\": \"ONCE\",\n    \"start\": \"cillum voluptate sed\",\n    \"zoneId\": \"mollit\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DETECT_PROBLEMS_AND_ALERT\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"urn:uuid:392fdca9-0d04-e447-7efc-02197912e07e\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"culpa aute occaecat amet\",\n      \"Excepteur sit velit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/maintenanceWindows",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"maintenanceWindows"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"irure aliquip\",\n  \"name\": \"consectetur in veniam irure\",\n  \"description\": \"in dolor\"\n}"
						},
						{
							"name": "Failed. The input is invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"mi\",\n  \"name\": \"in do\",\n  \"schedule\": {\n    \"end\": \"mollit consequat ut\",\n    \"recurrenceType\": \"ONCE\",\n    \"start\": \"cillum voluptate sed\",\n    \"zoneId\": \"mollit\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DETECT_PROBLEMS_AND_ALERT\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"urn:uuid:392fdca9-0d04-e447-7efc-02197912e07e\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"culpa aute occaecat amet\",\n      \"Excepteur sit velit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/maintenanceWindows",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"maintenanceWindows"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				},
				{
					"name": "Validates the payload for the `POST /maintenancewindow` request",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"mi\",\n  \"name\": \"in do\",\n  \"schedule\": {\n    \"end\": \"mollit consequat ut\",\n    \"recurrenceType\": \"ONCE\",\n    \"start\": \"cillum voluptate sed\",\n    \"zoneId\": \"mollit\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DETECT_PROBLEMS_AND_ALERT\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"urn:uuid:392fdca9-0d04-e447-7efc-02197912e07e\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"culpa aute occaecat amet\",\n      \"Excepteur sit velit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/maintenanceWindows/validator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"maintenanceWindows",
								"validator"
							]
						}
					},
					"response": [
						{
							"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"mi\",\n  \"name\": \"in do\",\n  \"schedule\": {\n    \"end\": \"mollit consequat ut\",\n    \"recurrenceType\": \"ONCE\",\n    \"start\": \"cillum voluptate sed\",\n    \"zoneId\": \"mollit\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DETECT_PROBLEMS_AND_ALERT\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"urn:uuid:392fdca9-0d04-e447-7efc-02197912e07e\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"culpa aute occaecat amet\",\n      \"Excepteur sit velit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/maintenanceWindows/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"maintenanceWindows",
										"validator"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The input is invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"mi\",\n  \"name\": \"in do\",\n  \"schedule\": {\n    \"end\": \"mollit consequat ut\",\n    \"recurrenceType\": \"ONCE\",\n    \"start\": \"cillum voluptate sed\",\n    \"zoneId\": \"mollit\",\n    \"recurrence\": {\n      \"durationMinutes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startTime\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfWeek\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dayOfMonth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"suppression\": \"DETECT_PROBLEMS_AND_ALERT\",\n  \"type\": \"UNPLANNED\",\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  },\n  \"id\": \"urn:uuid:392fdca9-0d04-e447-7efc-02197912e07e\",\n  \"suppressSyntheticMonitorsExecution\": false,\n  \"scope\": {\n    \"entities\": [\n      \"culpa aute occaecat amet\",\n      \"Excepteur sit velit\"\n    ],\n    \"matches\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/maintenanceWindows/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"maintenanceWindows",
										"validator"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"message\": \"sint in ut sunt qui\",\n    \"code\": 18779090\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Gets the global monitoring configuration of technologies.",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						},
						{
							"key": "value",
							"value": "Api-Token {{DT_TOKEN}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json; charset=utf-8"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/technologies",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"technologies"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "Api-Token {{DT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/technologies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"technologies"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						}
					],
					"cookie": [],
					"body": "{\n  \"technologies\": [\n    {\n      \"monitoringEnabled\": true,\n      \"type\": \"JAVA\",\n      \"scope\": \"ENVIRONMENT\"\n    },\n    {\n      \"monitoringEnabled\": true,\n      \"type\": \"JAVA\",\n      \"scope\": \"ENVIRONMENT\"\n    }\n  ],\n  \"metadata\": {\n    \"configurationVersions\": [\n      4,\n      2\n    ],\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\"\n  }\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://{{DT_HOST}}/api/config/v1",
			"type": "string"
		}
	]
}