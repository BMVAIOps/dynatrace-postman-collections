{
	"info": {
		"_postman_id": "8195d103-3fd0-4194-8b1c-da98866e775d",
		"name": "Dynatrace Cluster API v2",
		"description": "Dynatrace Managed exposes cluster-wide functionality via REST endpoints. This interactive documentation also acts as a REST client you can use to interact with Dynatrace Managed clusters. \n\nTo authorize, use the API Token generated in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the response shows the result of your request. The expected response code for a successful request is documented individually per REST endpoint. Additionally the following error response codes can occur in our REST interface:\n\n* 400 - Bad Request: Some request parameters are not correct. See response body for details.\n* 401 - Unauthorized: A valid authorization header is required but is missing.\n* 403 - Forbidden: Execution of request is not allowed, e.g. api-token is invalid.\n* 404 - Not Found: Endpoint does not exist or some entities could not be found.\n* 500 - Internal Server Error: See response body for details.\n* 556 - Upgrade in progress: Operation couldn't be performed during the upgrade.\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "license/consumption",
			"item": [
				{
					"name": "Export license consumption data",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/license/consumption?startTs=67827488&endTs=67827488",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"license",
								"consumption"
							],
							"query": [
								{
									"key": "startTs",
									"value": "67827488",
									"description": "Start timestamp (30 days ago by default)"
								},
								{
									"key": "endTs",
									"value": "67827488",
									"description": "End timestamp (2 hours ago by default, values from the last 2 hours are not allowed)"
								}
							]
						},
						"description": "Export license consumption data as a ZIP archive."
					},
					"response": [
						{
							"name": "OK - license consumption data export will start",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption?startTs=67827488&endTs=67827488",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption"
									],
									"query": [
										{
											"key": "startTs",
											"value": "67827488"
										},
										{
											"key": "endTs",
											"value": "67827488"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request. Provided time range is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption?startTs=67827488&endTs=67827488",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption"
									],
									"query": [
										{
											"key": "startTs",
											"value": "67827488"
										},
										{
											"key": "endTs",
											"value": "67827488"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License consumption data is already being exported. Please wait for the first request to finish before requesting another export.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption?startTs=67827488&endTs=67827488",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption"
									],
									"query": [
										{
											"key": "startTs",
											"value": "67827488"
										},
										{
											"key": "endTs",
											"value": "67827488"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption?startTs=67827488&endTs=67827488",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption"
									],
									"query": [
										{
											"key": "startTs",
											"value": "67827488"
										},
										{
											"key": "endTs",
											"value": "67827488"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve license consumption",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/license/consumption/hour?startTs=67827488",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"license",
								"consumption",
								"hour"
							],
							"query": [
								{
									"key": "startTs",
									"value": "67827488",
									"description": "Begin timestamp"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption/hour?startTs=67827488",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption",
										"hour"
									],
									"query": [
										{
											"key": "startTs",
											"value": "67827488"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"clusterUuid\": \"commodo laboris nulla Duis ullamco\",\n  \"timeFrameStart\": \"1971-05-03T09:22:54.287Z\",\n  \"timeFrameEnd\": \"1986-08-12T04:06:59.808Z\",\n  \"environmentBillingEntries\": [\n    {\n      \"environmentUuid\": \"sunt Lorem in sit do\",\n      \"visits\": 27662349,\n      \"mobileSessions\": -27899737,\n      \"totalRUMUserPropertiesUsed\": -45906079,\n      \"newProblems\": 78198727,\n      \"hostUsages\": [\n        {\n          \"osiId\": -54543958,\n          \"hostName\": \"dolore pariatur minim\",\n          \"hostCategory\": \"Excepteur sed dolore a\",\n          \"agentUsages\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"infrastructureOnly\": false,\n          \"paas\": false,\n          \"passMemoryLimit\": 93147741,\n          \"vendorTypeId\": -61882793,\n          \"hostMemoryBytes\": 15288639,\n          \"premiumLogAnalytics\": false,\n          \"hasContainers\": false\n        },\n        {\n          \"osiId\": -3109850,\n          \"hostName\": \"veniam minim in proident ut\",\n          \"hostCategory\": \"nostrud laborum\",\n          \"agentUsages\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"infrastructureOnly\": false,\n          \"paas\": false,\n          \"passMemoryLimit\": 88232729,\n          \"vendorTypeId\": 84574756,\n          \"hostMemoryBytes\": 10270695,\n          \"premiumLogAnalytics\": true,\n          \"hasContainers\": true\n        }\n      ],\n      \"downloads\": [\n        {\n          \"type\": \"labore eiusmod incididunt ut sint\",\n          \"downloadCount\": -65262839,\n          \"version\": \"esse dolore fugiat qui\",\n          \"firstDownloadTime\": \"1945-09-02T15:26:11.519Z\"\n        },\n        {\n          \"type\": \"id ex esse dolore laboris\",\n          \"downloadCount\": -15683629,\n          \"version\": \"nulla culpa\",\n          \"firstDownloadTime\": \"2006-04-22T06:38:19.944Z\"\n        }\n      ],\n      \"syntheticUsages\": [\n        {\n          \"monitorDefinitionId\": \"dolore sint amet ad aliquip\",\n          \"monitorDescription\": \"ad anim pariatur\",\n          \"monitorTypeId\": 2504561,\n          \"successCount\": 78621809,\n          \"failureCount\": -81630804,\n          \"syntheticActionCount\": 124168,\n          \"performedSyntheticActions\": 25623925\n        },\n        {\n          \"monitorDefinitionId\": \"eiusmod amet\",\n          \"monitorDescription\": \"dolore\",\n          \"monitorTypeId\": -83674734,\n          \"successCount\": -8131067,\n          \"failureCount\": -45002426,\n          \"syntheticActionCount\": 15692406,\n          \"performedSyntheticActions\": 5504081\n        }\n      ],\n      \"syntheticBillingUsage\": [\n        {\n          \"monitorTypeId\": 98548816,\n          \"testId\": -35751961,\n          \"publicExecutions\": 1493271,\n          \"privateExecutions\": -10953196\n        },\n        {\n          \"monitorTypeId\": -2065220,\n          \"testId\": 9512221,\n          \"publicExecutions\": 91106657,\n          \"privateExecutions\": -86671765\n        }\n      ],\n      \"customMetrics\": [\n        {\n          \"source\": \"JMX, Dynatrace API\",\n          \"total\": 62245171\n        },\n        {\n          \"source\": \"JMX, Dynatrace API\",\n          \"total\": 98512693\n        }\n      ],\n      \"davisDataUnits\": [\n        {\n          \"pool\": \"Metrics, Serverless Functions, Log\",\n          \"total\": 94252275.12050495\n        },\n        {\n          \"pool\": \"Metrics, Serverless Functions, Log\",\n          \"total\": -92940804.71494897\n        }\n      ],\n      \"trial\": false,\n      \"internalUse\": true,\n      \"highAvailabilityCluster\": true,\n      \"logStorageUsageBytes\": 57292492,\n      \"logUploadVolumeBytes\": 29506541,\n      \"sessionReplays\": -12842262,\n      \"mobileSessionReplays\": 55178473\n    },\n    {\n      \"environmentUuid\": \"officia adipisicing ut proident\",\n      \"visits\": 95695292,\n      \"mobileSessions\": 79165111,\n      \"totalRUMUserPropertiesUsed\": 3110145,\n      \"newProblems\": 83039102,\n      \"hostUsages\": [\n        {\n          \"osiId\": 1066482,\n          \"hostName\": \"laboris est eu\",\n          \"hostCategory\": \"reprehenderit dolore\",\n          \"agentUsages\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"infrastructureOnly\": true,\n          \"paas\": false,\n          \"passMemoryLimit\": -10247116,\n          \"vendorTypeId\": 97483202,\n          \"hostMemoryBytes\": 11080673,\n          \"premiumLogAnalytics\": true,\n          \"hasContainers\": true\n        },\n        {\n          \"osiId\": -53090946,\n          \"hostName\": \"do\",\n          \"hostCategory\": \"Lorem\",\n          \"agentUsages\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"infrastructureOnly\": false,\n          \"paas\": false,\n          \"passMemoryLimit\": -95583212,\n          \"vendorTypeId\": -21553317,\n          \"hostMemoryBytes\": -80037631,\n          \"premiumLogAnalytics\": false,\n          \"hasContainers\": false\n        }\n      ],\n      \"downloads\": [\n        {\n          \"type\": \"exercitation deserunt dolor\",\n          \"downloadCount\": -19936664,\n          \"version\": \"in magna irure Ut\",\n          \"firstDownloadTime\": \"2021-10-16T14:38:48.748Z\"\n        },\n        {\n          \"type\": \"sed aliqua in in\",\n          \"downloadCount\": -75742350,\n          \"version\": \"elit\",\n          \"firstDownloadTime\": \"1972-03-27T04:15:12.073Z\"\n        }\n      ],\n      \"syntheticUsages\": [\n        {\n          \"monitorDefinitionId\": \"id consectetur\",\n          \"monitorDescription\": \"irure\",\n          \"monitorTypeId\": 32880142,\n          \"successCount\": 77613819,\n          \"failureCount\": -97998803,\n          \"syntheticActionCount\": -51747969,\n          \"performedSyntheticActions\": -3311166\n        },\n        {\n          \"monitorDefinitionId\": \"Duis non do\",\n          \"monitorDescription\": \"consequat\",\n          \"monitorTypeId\": 79450551,\n          \"successCount\": -44045751,\n          \"failureCount\": -75305013,\n          \"syntheticActionCount\": 47951868,\n          \"performedSyntheticActions\": -34924514\n        }\n      ],\n      \"syntheticBillingUsage\": [\n        {\n          \"monitorTypeId\": 42852847,\n          \"testId\": -60838516,\n          \"publicExecutions\": -10952168,\n          \"privateExecutions\": 56407599\n        },\n        {\n          \"monitorTypeId\": -68178154,\n          \"testId\": -28742158,\n          \"publicExecutions\": 45108163,\n          \"privateExecutions\": -48868298\n        }\n      ],\n      \"customMetrics\": [\n        {\n          \"source\": \"JMX, Dynatrace API\",\n          \"total\": 28857321\n        },\n        {\n          \"source\": \"JMX, Dynatrace API\",\n          \"total\": -58453920\n        }\n      ],\n      \"davisDataUnits\": [\n        {\n          \"pool\": \"Metrics, Serverless Functions, Log\",\n          \"total\": -41498568.583886005\n        },\n        {\n          \"pool\": \"Metrics, Serverless Functions, Log\",\n          \"total\": -84921910.17117335\n        }\n      ],\n      \"trial\": false,\n      \"internalUse\": true,\n      \"highAvailabilityCluster\": true,\n      \"logStorageUsageBytes\": 20576970,\n      \"logUploadVolumeBytes\": 67341892,\n      \"sessionReplays\": 50141046,\n      \"mobileSessionReplays\": 50598248\n    }\n  ]\n}"
						},
						{
							"name": "Bad request. Provided timestamp is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption/hour?startTs=67827488",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption",
										"hour"
									],
									"query": [
										{
											"key": "startTs",
											"value": "67827488"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption/hour?startTs=67827488",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption",
										"hour"
									],
									"query": [
										{
											"key": "startTs",
											"value": "67827488"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "environments",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the properties of the specified environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/environments/:id?includeConsumptionInfo=true&includeStorageInfo=true&includeUncachedConsumptionInfo=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":id"
									],
									"query": [
										{
											"key": "includeConsumptionInfo",
											"value": "true",
											"description": "If true, consumption information (limits, usage) is returned for this environment.\n\nReturned usage is typically up to 1 hour old. To obtain fresher data, you can use **includeUncachedConsumptionInfo** parameter instead."
										},
										{
											"key": "includeStorageInfo",
											"value": "true",
											"description": "If true, storage information (limits, usage) is returned for this environment."
										},
										{
											"key": "includeUncachedConsumptionInfo",
											"value": "true",
											"description": "If true, uncached consumption information (limits, usage) is returned for this environment.\n\nUp to date consumption will be calculated. If both this parameter and **includeConsumptionInfo** are set, **includeUncachedConsumptionInfo** will take priority."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "laborum",
											"description": "(Required) The ID of the environment."
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/environments/:id?includeConsumptionInfo=true&includeStorageInfo=true&includeUncachedConsumptionInfo=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"query": [
												{
													"key": "includeConsumptionInfo",
													"value": "true"
												},
												{
													"key": "includeStorageInfo",
													"value": "true"
												},
												{
													"key": "includeUncachedConsumptionInfo",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}"
								}
							]
						},
						{
							"name": "Updates an existing environment or creates a new one.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/environments/:id?createToken=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":id"
									],
									"query": [
										{
											"key": "createToken",
											"value": "false",
											"description": "If true, a token management token with the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement' (for usage with token API v1) is created when creating a new environment. This token is then returned in the response body. It can be used within the newly created environment to create other tokens for configuring this environment."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "laborum",
											"description": "(Required) The ID of the environment to update.\n\n If you set the ID in the body as well, it must match this ID."
										}
									]
								},
								"description": "If the environment with the specified ID does not exist, a new environment will be created."
							},
							"response": [
								{
									"name": "Success. The new environment has been created. The response body contains the ID, the name and also a token management token if 'createToken' is 'true'.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id?createToken=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"query": [
												{
													"key": "createToken",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the environment to update.\n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"sint voluptate velit\",\n  \"name\": \"consequat sit est ut\",\n  \"description\": \"sit\",\n  \"tokenManagementToken\": \"aliquip do culpa\"\n}"
								},
								{
									"name": "Success. The environment has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id?createToken=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"query": [
												{
													"key": "createToken",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the environment to update.\n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id?createToken=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"query": [
												{
													"key": "createToken",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the environment to update.\n\n If you set the ID in the body as well, it must match this ID."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes the specified environment. An environment must be disabled before it can be deleted.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/environments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "laborum",
											"description": "(Required) The ID of the environment to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Deleted. Response does not have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/environments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the environment to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. For example, if an environment is not disabled.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/environments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the environment to be deleted."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creates a new tenant management token for an environment.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Token Management\",\n  \"expiresIn\": {\n    \"value\": 3600,\n    \"unit\": \"SECONDS\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/environments/:id/tokenManagementToken",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":id",
										"tokenManagementToken"
									],
									"variable": [
										{
											"key": "id",
											"value": "laborum",
											"description": "(Required) The ID of the environment where the token is valid."
										}
									]
								},
								"description": "The newly created token is owned by the same user who owns the token used for authentication of creation call. \nIt has the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement' (for usage with token API v1)."
							},
							"response": [
								{
									"name": "Success. The token has been created. The response body contains the token itself",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Token Management\",\n  \"expiresIn\": {\n    \"value\": 3600,\n    \"unit\": \"SECONDS\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id/tokenManagementToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id",
												"tokenManagementToken"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the environment where the token is valid."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "laborum",
											"description": "Token Id"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"token\": \"abcdefjhij1234567890\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Token Management\",\n  \"expiresIn\": {\n    \"value\": 3600,\n    \"unit\": \"SECONDS\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id/tokenManagementToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id",
												"tokenManagementToken"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the environment where the token is valid."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"id est adipisicing\",\n        \"message\": \"do irure sunt\",\n        \"path\": \"quis velit nulla culpa\"\n      },\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"consectetur velit magna Lorem\",\n        \"message\": \"anim Lorem\",\n        \"path\": \"ut sit\"\n      }\n    ],\n    \"message\": \"mollit nulla\",\n    \"code\": -46283938\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all existing environments.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/environments?nextPageKey=laborum&pageSize=67827488&sort=laborum&filter=laborum&includeConsumptionInfo=true&includeStorageInfo=true&includeUncachedConsumptionInfo=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "laborum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "67827488",
									"description": "The amount of environments in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
								},
								{
									"key": "sort",
									"value": "laborum",
									"description": "The sort order. Possible sorts orders are:\n * 'name' (without quotes): Sort by name ascending.\n * '-name' (without quotes): Sort by name descending.\n * 'creationDate' (without quotes): Sort by creation date ascending.\n * '-creationDate' (without quotes): Sort by name descending.\n"
								},
								{
									"key": "filter",
									"value": "laborum",
									"description": "Specifies the filter of the query. \n\nYou can set one or several of the following criteria:\n* Name: `name(string)`. The name can be either a substring or the full name of an environment. Case-insensitive.\n* Trial: `trial(true)` or `trial(false)`. Only includes trial environments if true is specified or only non-trial environments if false is specified.\n* State: `state(ENABLED)` or `state(DISABLED)`.\n* Tag: `tag(string)`. To filter by multiple tags by applying OR logic use `tag(string1,string2)`. To filter by multiple tags by applying AND logic use `tag(string1),tag(string2)`.\nTo set several criteria, separate them with a comma (`,`). Only results, matching **all** criteria, are included into response.\n"
								},
								{
									"key": "includeConsumptionInfo",
									"value": "true",
									"description": "If true, consumption information (limits, usage) is returned for each environment.\n\nReturned usage is typically up to 1 hour old. To obtain fresher data, you can use **includeUncachedConsumptionInfo** parameter instead."
								},
								{
									"key": "includeStorageInfo",
									"value": "true",
									"description": "If true, storage information (limits, usage) is returned for each environment."
								},
								{
									"key": "includeUncachedConsumptionInfo",
									"value": "true",
									"description": "If true, uncached consumption information (limits, usage) is returned for each environment.\n\nUp to date consumption will be calculated. Calculation may be time consuming, so it's recommended to use **includeConsumptionInfo** parameter instead.\n\nIf both this parameter and **includeConsumptionInfo** are set, **includeUncachedConsumptionInfo** will take priority."
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/environments?nextPageKey=laborum&pageSize=67827488&sort=laborum&filter=laborum&includeConsumptionInfo=true&includeStorageInfo=true&includeUncachedConsumptionInfo=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "laborum"
										},
										{
											"key": "pageSize",
											"value": "67827488"
										},
										{
											"key": "sort",
											"value": "laborum"
										},
										{
											"key": "filter",
											"value": "laborum"
										},
										{
											"key": "includeConsumptionInfo",
											"value": "true"
										},
										{
											"key": "includeStorageInfo",
											"value": "true"
										},
										{
											"key": "includeUncachedConsumptionInfo",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"environments\": [\n    {\n      \"name\": \"example environment\",\n      \"state\": \"ENABLED\",\n      \"tags\": [\n        \"tag1\",\n        \"tag2\"\n      ],\n      \"trial\": false\n    },\n    {\n      \"name\": \"example environment\",\n      \"state\": \"ENABLED\",\n      \"tags\": [\n        \"tag1\",\n        \"tag2\"\n      ],\n      \"trial\": false\n    }\n  ],\n  \"totalCount\": -10894848,\n  \"pageSize\": -11127748,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						}
					]
				},
				{
					"name": "Creates a new environment.",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/environments?createToken=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "createToken",
									"value": "false",
									"description": "If true, a token management token with the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement' (for usage with token API v1) is created when creating a new environment. This token is then returned in the response body. It can be used within the newly created environment to create other tokens for configuring this environment."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success. The environment has been created and started. The response body contains the generated ID of the environment and a token with the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement'. The locatio",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/environments?createToken=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "createToken",
											"value": "false"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"sint voluptate velit\",\n  \"name\": \"consequat sit est ut\",\n  \"description\": \"sit\",\n  \"tokenManagementToken\": \"aliquip do culpa\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"example environment\",\n  \"state\": \"ENABLED\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"trial\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/environments?createToken=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "createToken",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "log Monitoring",
			"item": [
				{
					"name": "{environment Id}",
					"item": [
						{
							"name": "Gets the current status of Log Monitoring v2",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logMonitoring/:environmentId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logMonitoring",
										":environmentId",
										"status"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "laborum",
											"description": "(Required) The ID of the environment."
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/logMonitoring/:environmentId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"logMonitoring",
												":environmentId",
												"status"
											],
											"variable": [
												{
													"key": "environmentId",
													"value": "laborum",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"enabled\": true\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/logMonitoring/:environmentId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"logMonitoring",
												":environmentId",
												"status"
											],
											"variable": [
												{
													"key": "environmentId",
													"value": "laborum",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Enables Log Monitoring v2",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/logMonitoring/:environmentId/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logMonitoring",
										":environmentId",
										"enable"
									],
									"variable": [
										{
											"key": "environmentId",
											"value": "laborum",
											"description": "(Required) The ID of the environment."
										}
									]
								},
								"description": "Enables Log Monitoring v2 and sets a default limit of 1,000 log events per minute for the specified environment. The total log events per cluster for all environments cannot exceed 10,000. You can enable Log Monitoring v2 for the environment that will not exceed the total log events per minute limit for the cluster. If you need to ingest more, please contact the Dynatrace ONE team."
							},
							"response": [
								{
									"name": "Enabled. Response does not have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/logMonitoring/:environmentId/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"logMonitoring",
												":environmentId",
												"enable"
											],
											"variable": [
												{
													"key": "environmentId",
													"value": "laborum",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/logMonitoring/:environmentId/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"logMonitoring",
												":environmentId",
												"enable"
											],
											"variable": [
												{
													"key": "environmentId",
													"value": "laborum",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Minimum memory requirement of 64 GB per node is not met.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/logMonitoring/:environmentId/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"logMonitoring",
												":environmentId",
												"enable"
											],
											"variable": [
												{
													"key": "environmentId",
													"value": "laborum",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The Log Monitoring v2 cannot be enabled because the limit of log events per minute for this cluster is reached. Reduce log event ingestion per minute on other environments, so that at least 1,000 log events per minute are available for this cluster.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/logMonitoring/:environmentId/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"logMonitoring",
												":environmentId",
												"enable"
											],
											"variable": [
												{
													"key": "environmentId",
													"value": "laborum",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"status": "Not Extended (RFC 2774)",
									"code": 510,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Updates the total log events per cluster limit based on the cluster resources size",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/logMonitoring/refreshLogEventsLimit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logMonitoring",
								"refreshLogEventsLimit"
							]
						}
					},
					"response": [
						{
							"name": "Successful operation. Returns new log events limit",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logMonitoring/refreshLogEventsLimit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logMonitoring",
										"refreshLogEventsLimit"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"limit\": 23459832\n}"
						},
						{
							"name": "Refreshing log events limit not possible due to lack of storage statistics",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logMonitoring/refreshLogEventsLimit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logMonitoring",
										"refreshLogEventsLimit"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "remoteaccess/requests",
			"item": [
				{
					"name": "{request Id}",
					"item": [
						{
							"name": "Get access request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "laborum",
											"description": "(Required) Request id param"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "laborum",
													"description": "(Required) Request id param"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"requestId\": \"reprehenderit do\",\n  \"userId\": \"mollit minim\",\n  \"reason\": \"laboris ut\",\n  \"requestedDays\": 83481378,\n  \"role\": \"devops-viewer\",\n  \"createdTimestamp\": 9798772,\n  \"expirationTimestamp\": 61262406,\n  \"state\": \"PENDING\",\n  \"stateModifiedByUser\": \"Ut in nisi\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "laborum",
													"description": "(Required) Request id param"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Approving remote access request is disabled",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "laborum",
													"description": "(Required) Request id param"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "laborum",
													"description": "(Required) Request id param"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change state of access request",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"state\": \"ACCEPTED\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests",
										":requestId",
										"state"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "laborum",
											"description": "(Required) Request id param"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"state\": \"ACCEPTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "laborum",
													"description": "(Required) Request id param"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"state\": \"ACCEPTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "laborum",
													"description": "(Required) Request id param"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Approving remote access request is disabled",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"state\": \"ACCEPTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "laborum",
													"description": "(Required) Request id param"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access request not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"state\": \"ACCEPTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "laborum",
													"description": "(Required) Request id param"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access request was found, but it's already expired",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"state\": \"ACCEPTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "laborum",
													"description": "(Required) Request id param"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Operation failed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"state\": \"ACCEPTED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "laborum",
													"description": "(Required) Request id param"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get all access requests",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/remoteaccess/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remoteaccess",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"requestId\": \"ea dolore\",\n    \"userId\": \"eu enim\",\n    \"reason\": \"elit minim reprehenderit proident\",\n    \"requestedDays\": -75199267,\n    \"role\": \"devops-admin\",\n    \"createdTimestamp\": 17701847,\n    \"expirationTimestamp\": -81540293,\n    \"state\": \"ACCEPTED\",\n    \"stateModifiedByUser\": \"fugiat consectetur id\"\n  },\n  {\n    \"requestId\": \"ut eu nulla l\",\n    \"userId\": \"labore ullamco in\",\n    \"reason\": \"culpa ut\",\n    \"requestedDays\": -63145408,\n    \"role\": \"devops-admin\",\n    \"createdTimestamp\": -49545269,\n    \"expirationTimestamp\": -99386858,\n    \"state\": \"EXPIRED\",\n    \"stateModifiedByUser\": \"pariatur se\"\n  }\n]"
						},
						{
							"name": "Approving remote access request is disabled",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Grant remote access permission",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "*/*"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"ea aliquip eu\",\n  \"reason\": \"magna\",\n  \"requestedDays\": -45113513,\n  \"role\": \"devops-viewer\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/remoteaccess/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remoteaccess",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"ea aliquip eu\",\n  \"reason\": \"magna\",\n  \"requestedDays\": -45113513,\n  \"role\": \"devops-viewer\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"requestId\": \"reprehenderit do\",\n  \"userId\": \"mollit minim\",\n  \"reason\": \"laboris ut\",\n  \"requestedDays\": 83481378,\n  \"role\": \"devops-viewer\",\n  \"createdTimestamp\": 9798772,\n  \"expirationTimestamp\": 61262406,\n  \"state\": \"PENDING\",\n  \"stateModifiedByUser\": \"Ut in nisi\"\n}"
						},
						{
							"name": "Invalid parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"ea aliquip eu\",\n  \"reason\": \"magna\",\n  \"requestedDays\": -45113513,\n  \"role\": \"devops-viewer\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Approving remote access request is disabled",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"ea aliquip eu\",\n  \"reason\": \"magna\",\n  \"requestedDays\": -45113513,\n  \"role\": \"devops-viewer\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"ea aliquip eu\",\n  \"reason\": \"magna\",\n  \"requestedDays\": -45113513,\n  \"role\": \"devops-viewer\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Mission Control is unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"ea aliquip eu\",\n  \"reason\": \"magna\",\n  \"requestedDays\": -45113513,\n  \"role\": \"devops-viewer\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"code": 513,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "cluster Config/user Sessions",
			"item": [
				{
					"name": "Get user sessions configuration",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/clusterConfig/userSessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clusterConfig",
								"userSessions"
							]
						}
					},
					"response": [
						{
							"name": "Successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clusterConfig/userSessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusterConfig",
										"userSessions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"automaticLogoutDto\": {\n    \"logoutInactiveUsersEnabled\": true,\n    \"userInactivityTimeout\": 900\n  },\n  \"concurrentSessionPolicyDto\": {\n    \"adminLimit\": -29438447,\n    \"userLimit\": -5904179\n  }\n}"
						}
					]
				},
				{
					"name": "Update user sessions configuration",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"automaticLogoutDto\": {\n    \"logoutInactiveUsersEnabled\": true,\n    \"userInactivityTimeout\": 900\n  },\n  \"concurrentSessionPolicyDto\": {\n    \"adminLimit\": -29438447,\n    \"userLimit\": -5904179\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/clusterConfig/userSessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clusterConfig",
								"userSessions"
							]
						}
					},
					"response": [
						{
							"name": "Successful",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"automaticLogoutDto\": {\n    \"logoutInactiveUsersEnabled\": true,\n    \"userInactivityTimeout\": 900\n  },\n  \"concurrentSessionPolicyDto\": {\n    \"adminLimit\": -29438447,\n    \"userLimit\": -5904179\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clusterConfig/userSessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusterConfig",
										"userSessions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Wrong parameters",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"automaticLogoutDto\": {\n    \"logoutInactiveUsersEnabled\": true,\n    \"userInactivityTimeout\": 900\n  },\n  \"concurrentSessionPolicyDto\": {\n    \"adminLimit\": -29438447,\n    \"userLimit\": -5904179\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clusterConfig/userSessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusterConfig",
										"userSessions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Configuration update failed",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"automaticLogoutDto\": {\n    \"logoutInactiveUsersEnabled\": true,\n    \"userInactivityTimeout\": 900\n  },\n  \"concurrentSessionPolicyDto\": {\n    \"adminLimit\": -29438447,\n    \"userLimit\": -5904179\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clusterConfig/userSessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusterConfig",
										"userSessions"
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "user Sessions",
			"item": [
				{
					"name": "Get user sessions",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/userSessions?userId=laborum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userSessions"
							],
							"query": [
								{
									"key": "userId",
									"value": "laborum",
									"description": "User ID (optional)"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=laborum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "laborum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"creationTime\": 7354666,\n    \"loginType\": \"SSO_MANAGED\",\n    \"nodeId\": -5080213,\n    \"sessionId\": \"pariatur laborum Duis\",\n    \"tenantUuid\": \"Lorem veniam nisi\",\n    \"userId\": \"do voluptate proident\",\n    \"lastAccessedTimestamp\": -78684455,\n    \"device\": \"magna sint\",\n    \"ip\": \"reprehenderit cillum\"\n  },\n  {\n    \"creationTime\": 68313697,\n    \"loginType\": \"LDAP\",\n    \"nodeId\": -78959881,\n    \"sessionId\": \"veniam nisi nulla\",\n    \"tenantUuid\": \"minim labore in nisi\",\n    \"userId\": \"qui consectetur anim\",\n    \"lastAccessedTimestamp\": -53619660,\n    \"device\": \"non\",\n    \"ip\": \"sed enim culpa\"\n  }\n]"
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=laborum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "laborum"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove user sessions for a given user",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userSessions?userId=laborum",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userSessions"
							],
							"query": [
								{
									"key": "userId",
									"value": "laborum",
									"description": "User ID (mandatory)"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=laborum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "laborum"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request. User id must be filled in.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=laborum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "laborum"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User sessions not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=laborum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "laborum"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=laborum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "laborum"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed to invalidate sessions",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=laborum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "laborum"
										}
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "active Gates",
			"item": [
				{
					"name": "{ag Id}",
					"item": [
						{
							"name": "auto Update",
							"item": [
								{
									"name": "Gets the configuration of auto-update for the specified ActiveGate",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate"
											],
											"variable": [
												{
													"key": "agId",
													"value": "laborum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"setting\": \"INHERITED\",\n  \"effectiveSetting\": \"ENABLED\"\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								},
								{
									"name": "Updates the configuration of auto-update for the specified ActiveGate",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"INHERITED\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate"
											],
											"variable": [
												{
													"key": "agId",
													"value": "laborum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The auto-update configuration have been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"setting\": \"INHERITED\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"setting\": \"INHERITED\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"setting\": \"INHERITED\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "laborum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted auto-update configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"setting\": \"INHERITED\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate",
														"validator"
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"setting\": \"INHERITED\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate",
														"validator"
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "update Jobs",
							"item": [
								{
									"name": "{job Id}",
									"item": [
										{
											"name": "Gets the parameters of the specified update job",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "laborum",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId",
																	"value": "laborum",
																	"description": "(Required) The ID of the required ActiveGate."
																},
																{
																	"key": "jobId",
																	"value": "laborum",
																	"description": "(Required) A unique identifier for a update-job of ActiveGate."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\",\n  \"updateMethod\": \"AUTOMATIC\",\n  \"updateType\": \"ACTIVE_GATE\",\n  \"agType\": \"ENVIRONMENT\",\n  \"startVersion\": \"1.185.0.20200201-120000\",\n  \"cancelable\": false,\n  \"jobId\": \"-3524498778810258605\",\n  \"jobState\": \"SUCCEED\",\n  \"environments\": [\n    \"deserunt in\",\n    \"ex cillum voluptate aliqua consectetur\"\n  ],\n  \"timestamp\": 1582031917814,\n  \"duration\": 3608000,\n  \"error\": \"reprehenderit laboris\"\n}"
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId",
																	"value": "laborum",
																	"description": "(Required) The ID of the required ActiveGate."
																},
																{
																	"key": "jobId",
																	"value": "laborum",
																	"description": "(Required) A unique identifier for a update-job of ActiveGate."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified update job",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json; charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "laborum",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The update-job have been deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId",
																	"value": "laborum",
																	"description": "(Required) The ID of the required ActiveGate."
																},
																{
																	"key": "jobId",
																	"value": "laborum",
																	"description": "(Required) A unique identifier for a update-job of ActiveGate."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId",
																	"value": "laborum",
																	"description": "(Required) The ID of the required ActiveGate."
																},
																{
																	"key": "jobId",
																	"value": "laborum",
																	"description": "(Required) A unique identifier for a update-job of ActiveGate."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId",
																	"value": "laborum",
																	"description": "(Required) The ID of the required ActiveGate."
																},
																{
																	"key": "jobId",
																	"value": "laborum",
																	"description": "(Required) A unique identifier for a update-job of ActiveGate."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists update jobs for the specified ActiveGate",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=laborum&to=laborum&startVersionCompareType=EQUAL&startVersion=laborum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=laborum&lastUpdates=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"query": [
												{
													"key": "from",
													"value": "laborum",
													"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days."
												},
												{
													"key": "to",
													"value": "laborum",
													"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
												},
												{
													"key": "startVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
												},
												{
													"key": "startVersion",
													"value": "laborum",
													"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "updateType",
													"value": "ACTIVE_GATE",
													"description": "Filters the resulting set of update-jobs by the update type."
												},
												{
													"key": "targetVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
												},
												{
													"key": "targetVersion",
													"value": "laborum",
													"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "lastUpdates",
													"value": "false",
													"description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
												}
											],
											"variable": [
												{
													"key": "agId",
													"value": "laborum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										},
										"description": "The job can update the ActiveGate to the specified version or the latest available one."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=laborum&to=laborum&startVersionCompareType=EQUAL&startVersion=laborum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=laborum&lastUpdates=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "laborum"
														},
														{
															"key": "to",
															"value": "laborum"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "laborum"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "laborum"
														},
														{
															"key": "lastUpdates",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"agId\": \"0x3efdd092\",\n  \"updateJobs\": [\n    {\n      \"targetVersion\": \"1.190.0.20200301-130000\",\n      \"updateMethod\": \"AUTOMATIC\",\n      \"updateType\": \"ACTIVE_GATE\",\n      \"agType\": \"ENVIRONMENT\",\n      \"startVersion\": \"1.185.0.20200201-120000\",\n      \"cancelable\": false,\n      \"jobId\": \"-3524498778810258605\",\n      \"jobState\": \"SUCCEED\",\n      \"environments\": [\n        \"tempo\",\n        \"aute dolore Ut\"\n      ],\n      \"timestamp\": 1582031917814,\n      \"duration\": 3608000,\n      \"error\": \"elit quis et nisi\"\n    },\n    {\n      \"targetVersion\": \"1.190.0.20200301-130000\",\n      \"updateMethod\": \"AUTOMATIC\",\n      \"updateType\": \"ACTIVE_GATE\",\n      \"agType\": \"ENVIRONMENT\",\n      \"startVersion\": \"1.185.0.20200201-120000\",\n      \"cancelable\": false,\n      \"jobId\": \"-3524498778810258605\",\n      \"jobState\": \"SUCCEED\",\n      \"environments\": [\n        \"amet est labore\",\n        \"aliqua\"\n      ],\n      \"timestamp\": 1582031917814,\n      \"duration\": 3608000,\n      \"error\": \"aliquip qui in nisi dolor\"\n    }\n  ]\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=laborum&to=laborum&startVersionCompareType=EQUAL&startVersion=laborum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=laborum&lastUpdates=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "laborum"
														},
														{
															"key": "to",
															"value": "laborum"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "laborum"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "laborum"
														},
														{
															"key": "lastUpdates",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								},
								{
									"name": "Creates a new update job for the specified ActiveGate",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"variable": [
												{
													"key": "agId",
													"value": "laborum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The update-job have been created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\",\n  \"updateMethod\": \"AUTOMATIC\",\n  \"updateType\": \"ACTIVE_GATE\",\n  \"agType\": \"ENVIRONMENT\",\n  \"startVersion\": \"1.185.0.20200201-120000\",\n  \"cancelable\": false,\n  \"jobId\": \"-3524498778810258605\",\n  \"jobState\": \"SUCCEED\",\n  \"environments\": [\n    \"deserunt in\",\n    \"ex cillum voluptate aliqua consectetur\"\n  ],\n  \"timestamp\": 1582031917814,\n  \"duration\": 3608000,\n  \"error\": \"reprehenderit laboris\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "laborum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted update-job is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"targetVersion\": \"1.190.0.20200301-130000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId",
															"value": "laborum",
															"description": "(Required) The ID of the required ActiveGate."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the details of the specified ActiveGate",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/:agId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										":agId"
									],
									"variable": [
										{
											"key": "agId",
											"value": "laborum",
											"description": "(Required) The ID of the required ActiveGate."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId",
													"value": "laborum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"0x3efdd091\",\n  \"networkAddresses\": [\n    \"ea amet voluptate in irure\",\n    \"est \"\n  ],\n  \"loadBalancerAddresses\": [\n    \"elit fugiat commodo\",\n    \"incididunt ullamco nulla\"\n  ],\n  \"osType\": \"WINDOWS\",\n  \"autoUpdateStatus\": \"OUTDATED\",\n  \"offlineSince\": 1582031917814,\n  \"version\": \"1.185.0.20200201-120000\",\n  \"type\": \"ENVIRONMENT\",\n  \"hostname\": \"exampleHostname\",\n  \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n  \"environments\": [\n    \"ut tempor\",\n    \"culpa ea\"\n  ],\n  \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n  },\n  \"networkZone\": \"exampleNetworkZone\",\n  \"group\": \"default\",\n  \"modules\": [\n    {\n      \"misconfigured\": false,\n      \"type\": \"KUBERNETES\",\n      \"attributes\": {\n        \"aliqua_350\": \"ut anim consequat est\"\n      },\n      \"version\": \"qui ex officia in\",\n      \"enabled\": true\n    },\n    {\n      \"misconfigured\": true,\n      \"type\": \"KUBERNETES\",\n      \"attributes\": {\n        \"esse_f4f\": \"laboris laboru\",\n        \"nullabab\": \"cupidatat \",\n        \"tempor7f\": \"nostrud eu cupidatat\"\n      },\n      \"version\": \"nisi velit\",\n      \"enabled\": false\n    }\n  ],\n  \"containerized\": false,\n  \"connectedHosts\": {\n    \"number\": 150\n  }\n}"
								},
								{
									"name": "Not found. See response body for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId",
													"value": "laborum",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "auto Update",
					"item": [
						{
							"name": "{env Id}",
							"item": [
								{
									"name": "Gets the global auto-update configuration of environment ActiveGates.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												":envId"
											],
											"variable": [
												{
													"key": "envId",
													"value": "laborum",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId"
													],
													"variable": [
														{
															"key": "envId",
															"value": "laborum",
															"description": "(Required) The ID of the environment."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId"
													],
													"variable": [
														{
															"key": "envId",
															"value": "laborum",
															"description": "(Required) The ID of the environment."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								},
								{
									"name": "Puts the global auto-update configuration of environment ActiveGates.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												":envId"
											],
											"variable": [
												{
													"key": "envId",
													"value": "laborum",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId"
													],
													"variable": [
														{
															"key": "envId",
															"value": "laborum",
															"description": "(Required) The ID of the environment."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId"
													],
													"variable": [
														{
															"key": "envId",
															"value": "laborum",
															"description": "(Required) The ID of the environment."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/autoUpdate/{envId}` request.",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												":envId",
												"validator"
											],
											"variable": [
												{
													"key": "envId",
													"value": "laborum",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId",
														"validator"
													],
													"variable": [
														{
															"key": "envId",
															"value": "laborum",
															"description": "(Required) The ID of the environment."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId",
														"validator"
													],
													"variable": [
														{
															"key": "envId",
															"value": "laborum",
															"description": "(Required) The ID of the environment."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the global auto-update configuration of cluster ActiveGates.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Puts the global auto-update configuration of cluster ActiveGates.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate"
									]
								}
							},
							"response": [
								{
									"name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"globalSetting\": \"DISABLED\",\n  \"metadata\": {\n    \"currentConfigurationVersions\": [\n      \"1.0.4\",\n      \"1.23\"\n    ],\n    \"clusterVersion\": \"1.192.1\",\n    \"configurationVersions\": [\n      4,\n      2\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available ActiveGates",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activeGates?hostname=laborum&osType=LINUX&networkAddress=laborum&loadBalancerAddress=laborum&type=CLUSTER&networkZone=laborum&updateStatus=INCOMPATIBLE&versionCompareType=EQUAL&version=laborum&autoUpdate=ENABLED&group=laborum&online=true&enabledModule=DB_INSIGHT&enabledModule=VMWARE&disabledModule=DB_INSIGHT&disabledModule=VMWARE&containerized=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates"
							],
							"query": [
								{
									"key": "hostname",
									"value": "laborum",
									"description": "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "osType",
									"value": "LINUX",
									"description": "Filters the resulting set of ActiveGates by the OS type of the host it's running on."
								},
								{
									"key": "networkAddress",
									"value": "laborum",
									"description": "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "loadBalancerAddress",
									"value": "laborum",
									"description": "Filters the resulting set of ActiveGates by the Load Balancer address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "type",
									"value": "CLUSTER",
									"description": "Filters the resulting set of ActiveGates by the ActiveGate type."
								},
								{
									"key": "networkZone",
									"value": "laborum",
									"description": "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "updateStatus",
									"value": "INCOMPATIBLE",
									"description": "Filters the resulting set of ActiveGates by the auto-update status."
								},
								{
									"key": "versionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here."
								},
								{
									"key": "version",
									"value": "laborum",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here."
								},
								{
									"key": "autoUpdate",
									"value": "ENABLED",
									"description": "Filters the resulting set of ActiveGates by the actual state of auto-update."
								},
								{
									"key": "group",
									"value": "laborum",
									"description": "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "online",
									"value": "true",
									"description": "Filters the resulting set of ActiveGates by the communication status."
								},
								{
									"key": "enabledModule",
									"value": "DB_INSIGHT",
									"description": "Filters the resulting set of ActiveGates by the enabled modules."
								},
								{
									"key": "enabledModule",
									"value": "VMWARE",
									"description": "Filters the resulting set of ActiveGates by the enabled modules."
								},
								{
									"key": "disabledModule",
									"value": "DB_INSIGHT",
									"description": "Filters the resulting set of ActiveGates by the disabled modules."
								},
								{
									"key": "disabledModule",
									"value": "VMWARE",
									"description": "Filters the resulting set of ActiveGates by the disabled modules."
								},
								{
									"key": "containerized",
									"value": "true",
									"description": "Filters the resulting set of ActiveGates to those which are running in container (`true`) or not (`false`)."
								}
							]
						},
						"description": "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=laborum&osType=LINUX&networkAddress=laborum&loadBalancerAddress=laborum&type=CLUSTER&networkZone=laborum&updateStatus=INCOMPATIBLE&versionCompareType=EQUAL&version=laborum&autoUpdate=ENABLED&group=laborum&online=true&enabledModule=LOGS&enabledModule=EXTENSIONS_V1&disabledModule=LOGS&disabledModule=EXTENSIONS_V1&containerized=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "laborum"
										},
										{
											"key": "osType",
											"value": "LINUX"
										},
										{
											"key": "networkAddress",
											"value": "laborum"
										},
										{
											"key": "loadBalancerAddress",
											"value": "laborum"
										},
										{
											"key": "type",
											"value": "CLUSTER"
										},
										{
											"key": "networkZone",
											"value": "laborum"
										},
										{
											"key": "updateStatus",
											"value": "INCOMPATIBLE"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "laborum"
										},
										{
											"key": "autoUpdate",
											"value": "ENABLED"
										},
										{
											"key": "group",
											"value": "laborum"
										},
										{
											"key": "online",
											"value": "true"
										},
										{
											"key": "enabledModule",
											"value": "LOGS"
										},
										{
											"key": "enabledModule",
											"value": "EXTENSIONS_V1"
										},
										{
											"key": "disabledModule",
											"value": "LOGS"
										},
										{
											"key": "disabledModule",
											"value": "EXTENSIONS_V1"
										},
										{
											"key": "containerized",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"activeGates\": [\n    {\n      \"id\": \"0x3efdd091\",\n      \"networkAddresses\": [\n        \"nostrud id magna ullamco\",\n        \"irure aliqua nisi\"\n      ],\n      \"loadBalancerAddresses\": [\n        \"aliqua do\",\n        \"labore laborum\"\n      ],\n      \"osType\": \"WINDOWS\",\n      \"autoUpdateStatus\": \"OUTDATED\",\n      \"offlineSince\": 1582031917814,\n      \"version\": \"1.185.0.20200201-120000\",\n      \"type\": \"ENVIRONMENT\",\n      \"hostname\": \"exampleHostname\",\n      \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n      \"environments\": [\n        \"exercitation officia\",\n        \"est magna deserunt sint\"\n      ],\n      \"autoUpdateSettings\": {\n        \"setting\": \"INHERITED\",\n        \"effectiveSetting\": \"ENABLED\"\n      },\n      \"networkZone\": \"exampleNetworkZone\",\n      \"group\": \"default\",\n      \"modules\": [\n        {\n          \"misconfigured\": true,\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"enim_5d\": \"sit\",\n            \"laboris_4\": \"ad \",\n            \"Excepteur_e01\": \"ipsum esse culpa\"\n          },\n          \"version\": \"do proident irure amet\",\n          \"enabled\": true\n        },\n        {\n          \"misconfigured\": false,\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"consequat8\": \"id non incididunt\"\n          },\n          \"version\": \"officia enim proident amet pariatur\",\n          \"enabled\": true\n        }\n      ],\n      \"containerized\": false,\n      \"connectedHosts\": {\n        \"number\": 150\n      }\n    },\n    {\n      \"id\": \"0x3efdd091\",\n      \"networkAddresses\": [\n        \"ex\",\n        \"voluptate irure eiusmod\"\n      ],\n      \"loadBalancerAddresses\": [\n        \"ea\",\n        \"Lorem\"\n      ],\n      \"osType\": \"WINDOWS\",\n      \"autoUpdateStatus\": \"OUTDATED\",\n      \"offlineSince\": 1582031917814,\n      \"version\": \"1.185.0.20200201-120000\",\n      \"type\": \"ENVIRONMENT\",\n      \"hostname\": \"exampleHostname\",\n      \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n      \"environments\": [\n        \"ut dolore ea Duis\",\n        \"laborum\"\n      ],\n      \"autoUpdateSettings\": {\n        \"setting\": \"INHERITED\",\n        \"effectiveSetting\": \"ENABLED\"\n      },\n      \"networkZone\": \"exampleNetworkZone\",\n      \"group\": \"default\",\n      \"modules\": [\n        {\n          \"misconfigured\": false,\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"voluptatea_\": \"pariatur dolore do\",\n            \"irure_f6\": \"ipsum\"\n          },\n          \"version\": \"occaecat minim labore\",\n          \"enabled\": false\n        },\n        {\n          \"misconfigured\": false,\n          \"type\": \"KUBERNETES\",\n          \"attributes\": {\n            \"uta50\": \"dolore laboris velit sunt aute\",\n            \"dolor12\": \"Excepteur dolore nisi dolor Duis\",\n            \"anim_893\": \"enim Lore\",\n            \"ut_b\": \"in anim\"\n          },\n          \"version\": \"dolor adipisicing ipsum\",\n          \"enabled\": true\n        }\n      ],\n      \"containerized\": false,\n      \"connectedHosts\": {\n        \"number\": 150\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=laborum&osType=LINUX&networkAddress=laborum&loadBalancerAddress=laborum&type=CLUSTER&networkZone=laborum&updateStatus=INCOMPATIBLE&versionCompareType=EQUAL&version=laborum&autoUpdate=ENABLED&group=laborum&online=true&enabledModule=LOGS&enabledModule=EXTENSIONS_V1&disabledModule=LOGS&disabledModule=EXTENSIONS_V1&containerized=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "laborum"
										},
										{
											"key": "osType",
											"value": "LINUX"
										},
										{
											"key": "networkAddress",
											"value": "laborum"
										},
										{
											"key": "loadBalancerAddress",
											"value": "laborum"
										},
										{
											"key": "type",
											"value": "CLUSTER"
										},
										{
											"key": "networkZone",
											"value": "laborum"
										},
										{
											"key": "updateStatus",
											"value": "INCOMPATIBLE"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "laborum"
										},
										{
											"key": "autoUpdate",
											"value": "ENABLED"
										},
										{
											"key": "group",
											"value": "laborum"
										},
										{
											"key": "online",
											"value": "true"
										},
										{
											"key": "enabledModule",
											"value": "LOGS"
										},
										{
											"key": "enabledModule",
											"value": "EXTENSIONS_V1"
										},
										{
											"key": "disabledModule",
											"value": "LOGS"
										},
										{
											"key": "disabledModule",
											"value": "EXTENSIONS_V1"
										},
										{
											"key": "containerized",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
						}
					]
				},
				{
					"name": "List ActiveGates with update jobs",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activeGates/updateJobs?from=laborum&to=laborum&startVersionCompareType=EQUAL&startVersion=laborum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=laborum&lastUpdates=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates",
								"updateJobs"
							],
							"query": [
								{
									"key": "from",
									"value": "laborum",
									"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days."
								},
								{
									"key": "to",
									"value": "laborum",
									"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "startVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
								},
								{
									"key": "startVersion",
									"value": "laborum",
									"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "updateType",
									"value": "ACTIVE_GATE",
									"description": "Filters the resulting set of update-jobs by the update type."
								},
								{
									"key": "targetVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
								},
								{
									"key": "targetVersion",
									"value": "laborum",
									"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "lastUpdates",
									"value": "false",
									"description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
								}
							]
						},
						"description": "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=laborum&to=laborum&startVersionCompareType=EQUAL&startVersion=laborum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=laborum&lastUpdates=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "laborum"
										},
										{
											"key": "to",
											"value": "laborum"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "laborum"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "laborum"
										},
										{
											"key": "lastUpdates",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"allUpdateJobs\": [\n    {\n      \"agId\": \"0x3efdd092\",\n      \"updateJobs\": [\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"cancelable\": false,\n          \"jobId\": \"-3524498778810258605\",\n          \"jobState\": \"SUCCEED\",\n          \"environments\": [\n            \"ut cillum ea ut\",\n            \"enim ea proident aliquip dolor\"\n          ],\n          \"timestamp\": 1582031917814,\n          \"duration\": 3608000,\n          \"error\": \"exercitation Lorem\"\n        },\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"cancelable\": false,\n          \"jobId\": \"-3524498778810258605\",\n          \"jobState\": \"SUCCEED\",\n          \"environments\": [\n            \"eiusmod exercitation et consequat consectetur\",\n            \"dolor\"\n          ],\n          \"timestamp\": 1582031917814,\n          \"duration\": 3608000,\n          \"error\": \"eu\"\n        }\n      ]\n    },\n    {\n      \"agId\": \"0x3efdd092\",\n      \"updateJobs\": [\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"cancelable\": false,\n          \"jobId\": \"-3524498778810258605\",\n          \"jobState\": \"SUCCEED\",\n          \"environments\": [\n            \"ullamco quis Ut\",\n            \"mollit ut ex enim nisi\"\n          ],\n          \"timestamp\": 1582031917814,\n          \"duration\": 3608000,\n          \"error\": \"amet id\"\n        },\n        {\n          \"targetVersion\": \"1.190.0.20200301-130000\",\n          \"updateMethod\": \"AUTOMATIC\",\n          \"updateType\": \"ACTIVE_GATE\",\n          \"agType\": \"ENVIRONMENT\",\n          \"startVersion\": \"1.185.0.20200201-120000\",\n          \"cancelable\": false,\n          \"jobId\": \"-3524498778810258605\",\n          \"jobState\": \"SUCCEED\",\n          \"environments\": [\n            \"occaecat cupidatat\",\n            \"Lorem in sit\"\n          ],\n          \"timestamp\": 1582031917814,\n          \"duration\": 3608000,\n          \"error\": \"sed adipisicing dolor\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=laborum&to=laborum&startVersionCompareType=EQUAL&startVersion=laborum&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=laborum&lastUpdates=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "laborum"
										},
										{
											"key": "to",
											"value": "laborum"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "laborum"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "laborum"
										},
										{
											"key": "lastUpdates",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "network Zones",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets parameters of the specified network zone",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "laborum",
											"description": "(Required) The ID of the required network zone."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the required network zone."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"alternativeZones\": [\n    \"voluptate\",\n    \"laboris ad dolor sint\"\n  ],\n  \"numOfOneAgentsUsing\": 80335901,\n  \"numOfConfiguredOneAgents\": -89472285,\n  \"numOfOneAgentsFromOtherZones\": 87741805,\n  \"numOfConfiguredActiveGates\": -99990813,\n  \"id\": \"eiusmod offici\",\n  \"description\": \"id elit voluptate nulla\"\n}"
								}
							]
						},
						{
							"name": "Updates an existing network zone or creates a new one",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alternativeZones\": [\n    \"laborum anim minim pariatur\",\n    \"dolore dolor aliqua eiusmod\"\n  ],\n  \"description\": \"quis Lorem\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "laborum",
											"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
										}
									]
								},
								"description": "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
							},
							"response": [
								{
									"name": "Success. The new network zone has been created. The response body contains the ID of the new network zone.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alternativeZones\": [\n    \"laborum anim minim pariatur\",\n    \"dolore dolor aliqua eiusmod\"\n  ],\n  \"description\": \"quis Lorem\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"laborum fugiat aute\",\n  \"name\": \"laborum anim elit\",\n  \"description\": \"et sed nisi\"\n}"
								},
								{
									"name": "Success. The network zone has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alternativeZones\": [\n    \"laborum anim minim pariatur\",\n    \"dolore dolor aliqua eiusmod\"\n  ],\n  \"description\": \"quis Lorem\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alternativeZones\": [\n    \"laborum anim minim pariatur\",\n    \"dolore dolor aliqua eiusmod\"\n  ],\n  \"description\": \"quis Lorem\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified network zone",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "laborum",
											"description": "(Required) The ID of the network zone to be deleted."
										}
									]
								},
								"description": "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives."
							},
							"response": [
								{
									"name": "Deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the network zone to be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. See error message in the response body for details.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the network zone to be deleted."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all existing network zones",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/networkZones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZones"
							]
						}
					},
					"response": [
						{
							"name": "Success.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"networkZones\": [\n    {\n      \"alternativeZones\": [\n        \"eni\",\n        \"ut\"\n      ],\n      \"numOfOneAgentsUsing\": -96027577,\n      \"numOfConfiguredOneAgents\": 47483640,\n      \"numOfOneAgentsFromOtherZones\": 50139541,\n      \"numOfConfiguredActiveGates\": -39271054,\n      \"id\": \"sed\",\n      \"description\": \"est magna \"\n    },\n    {\n      \"alternativeZones\": [\n        \"elit non minim pariatur\",\n        \"reprehenderit amet occaecat commodo labo\"\n      ],\n      \"numOfOneAgentsUsing\": -25207591,\n      \"numOfConfiguredOneAgents\": 56023599,\n      \"numOfOneAgentsFromOtherZones\": -69431275,\n      \"numOfConfiguredActiveGates\": 87427054,\n      \"id\": \"ullamco aliquip ea irure consectetur\",\n      \"description\": \"labore\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "tokens",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Lists token metadata by token ID",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "laborum",
											"description": "(Required) The ID of the required token."
										}
									]
								},
								"description": "The token itself is **not** exposed."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the required token."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"scopes\": [\n    \"activeGateTokenManagement.write\",\n    \"activeGateTokenManagement.write\"\n  ],\n  \"id\": \"consequat eu elit\",\n  \"name\": \"in officia cillum irure\",\n  \"userId\": \"culp\",\n  \"revoked\": true,\n  \"created\": 29996032,\n  \"expires\": -16172168,\n  \"lastUse\": 98748964,\n  \"personalAccessToken\": false\n}"
								},
								{
									"name": "Failed. The requested token has not been found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the required token."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								}
							]
						},
						{
							"name": "Updates the specified token",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"revoked\": false,\n  \"name\": \"voluptate dolore pariatur\",\n  \"scopes\": [\n    \"ControlManagement\",\n    \"ExternalSyntheticIntegration\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "laborum",
											"description": "(Required) The ID of the token to be updated. \n\n You can't update the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The token has been updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"revoked\": false,\n  \"name\": \"adipisicing dolore deserunt\",\n  \"scopes\": [\n    \"settings.read\",\n    \"EnvironmentTokenManagement\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the token to be updated. \n\n You can't update the token you're using for authentication of the request."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. You can't update the token you're using for authentication of the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"revoked\": false,\n  \"name\": \"adipisicing dolore deserunt\",\n  \"scopes\": [\n    \"settings.read\",\n    \"EnvironmentTokenManagement\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the token to be updated. \n\n You can't update the token you're using for authentication of the request."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								},
								{
									"name": "Failed. The requested token has not been found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"revoked\": false,\n  \"name\": \"adipisicing dolore deserunt\",\n  \"scopes\": [\n    \"settings.read\",\n    \"EnvironmentTokenManagement\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the token to be updated. \n\n You can't update the token you're using for authentication of the request."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified token",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "laborum",
											"description": "(Required) The ID of the token to be deleted. Can either be the public identifier or the secret.\n\n You can't delete the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the token to be deleted. Can either be the public identifier or the secret.\n\n You can't delete the token you're using for authentication of the request."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. You can't delete the token you're using for authentication of the request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the token to be deleted. Can either be the public identifier or the secret.\n\n You can't delete the token you're using for authentication of the request."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								},
								{
									"name": "Failed. The requested token has not been found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum",
													"description": "(Required) The ID of the token to be deleted. Can either be the public identifier or the secret.\n\n You can't delete the token you're using for authentication of the request."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists available tokens in your environment",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tokens?limit=1000&user=laborum&permissions=EnvironmentTokenManagement&permissions=UnattendedInstall&from=67827488&to=67827488",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tokens"
							],
							"query": [
								{
									"key": "limit",
									"value": "1000",
									"description": "Limits the maximum number of returned tokens. \n\n If not set the value of `1000` is used. \n\n Maximum value is 1000000."
								},
								{
									"key": "user",
									"value": "laborum",
									"description": "Filters the resulting set of tokens by user, who owns the token."
								},
								{
									"key": "permissions",
									"value": "EnvironmentTokenManagement",
									"description": "Filters the resulting set of tokens by scopes assigned to the token. \n\n You can specify several permissions in the following format: `permissions=scope1&permissions=scope2`. The token must have *all* the specified scopes."
								},
								{
									"key": "permissions",
									"value": "UnattendedInstall",
									"description": "Filters the resulting set of tokens by scopes assigned to the token. \n\n You can specify several permissions in the following format: `permissions=scope1&permissions=scope2`. The token must have *all* the specified scopes."
								},
								{
									"key": "from",
									"value": "67827488",
									"description": "Last used after this timestamp (UTC milliseconds)."
								},
								{
									"key": "to",
									"value": "67827488",
									"description": "Last used before this timestamp (UTC milliseconds)."
								}
							]
						},
						"description": "You can narrow down the output by adding parameters. The token has to match *all* the specified parameters. \n\n You can also specify the limit of returned tokens.\n\n **This list may contain tokens which were created automatically** (e.g. InstallerDownload, Mobile, ...) and are not visible on the `Settings` page. Deleting those might have unintended side-effects as they might still be in use."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tokens?limit=1000&user=laborum&permissions=ClusterTokenManagement&permissions=Nodekeeper&from=67827488&to=67827488",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										},
										{
											"key": "user",
											"value": "laborum"
										},
										{
											"key": "permissions",
											"value": "ClusterTokenManagement"
										},
										{
											"key": "permissions",
											"value": "Nodekeeper"
										},
										{
											"key": "from",
											"value": "67827488"
										},
										{
											"key": "to",
											"value": "67827488"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"values\": [\n    {\n      \"id\": \"cupidatat ad tempor\",\n      \"name\": \"amet do laborum aliquip ea\",\n      \"description\": \"pariatur culpa veniam\"\n    },\n    {\n      \"id\": \"dolor pariatur dolore et\",\n      \"name\": \"in dolor occaecat\",\n      \"description\": \"Excepteur reprehenderit sint\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new token",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ea pariatur\",\n  \"scopes\": [\n    \"activeGateTokenManagement.create\"\n  ],\n  \"expiresIn\": {\n    \"value\": 62554927,\n    \"unit\": \"MINUTES\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tokens"
							]
						},
						"description": "The newly created token will be owned by the same user who owns the token used for authentication of the call."
					},
					"response": [
						{
							"name": "Success. The token has been created. The response body contains the token itself.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"ea pariatur\",\n  \"scopes\": [\n    \"activeGateTokenManagement.create\"\n  ],\n  \"expiresIn\": {\n    \"value\": 62554927,\n    \"unit\": \"MINUTES\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "laborum",
									"description": "Token Id"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"abcdefjhij1234567890\"\n}"
						},
						{
							"name": "Failed. The input is invalid. Response body provides details.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"ea pariatur\",\n  \"scopes\": [\n    \"activeGateTokenManagement.create\"\n  ],\n  \"expiresIn\": {\n    \"value\": 62554927,\n    \"unit\": \"MINUTES\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
						}
					]
				},
				{
					"name": "Lists token metadata by token itself",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"abcdefjhij1234567890\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tokens/lookup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tokens",
								"lookup"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"abcdefjhij1234567890\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tokens/lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										"lookup"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"scopes\": [\n    \"ExternalSyntheticIntegration\",\n    \"settings.read\"\n  ],\n  \"id\": \"officia do tempor in aute\",\n  \"name\": \"culpa consequat eiusmod do Duis\",\n  \"userId\": \"minim\",\n  \"revoked\": true,\n  \"created\": 42586534,\n  \"expires\": 56987113,\n  \"lastUse\": 73062406,\n  \"personalAccessToken\": false\n}"
						}
					]
				}
			]
		},
		{
			"name": "iam",
			"item": [
				{
					"name": "repo/{level-type}/{level-id}",
					"item": [
						{
							"name": "bindings",
							"item": [
								{
									"name": "{policy-uuid}",
									"item": [
										{
											"name": "{group-uuid}",
											"item": [
												{
													"name": "Append policy bindings within a level for particular group",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "Api-Token {{DT_TOKEN}}",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"parameters\": {\n    \"dolored5\": \"eiusmod aute ad commodo ex\",\n    \"sit_e\": \"quis mollit\"\n  },\n  \"metadata\": {\n    \"nulla3\": \"aliqua eu Duis Lorem\",\n    \"incididunt9\": \"qui dolore sed commodo\",\n    \"laborea\": \"in aute labore esse\",\n    \"in_7b_\": \"velit officia consequat minim\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid/:group-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																":policy-uuid",
																":group-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																},
																{
																	"key": "group-uuid",
																	"value": "laborum",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Successful response - policy bindings created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"parameters\": {\n    \"dolored5\": \"eiusmod aute ad commodo ex\",\n    \"sit_e\": \"quis mollit\"\n  },\n  \"metadata\": {\n    \"nulla3\": \"aliqua eu Duis Lorem\",\n    \"incididunt9\": \"qui dolore sed commodo\",\n    \"laborea\": \"in aute labore esse\",\n    \"in_7b_\": \"velit officia consequat minim\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid/:group-uuid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"iam",
																		"repo",
																		":level-type",
																		":level-id",
																		"bindings",
																		":policy-uuid",
																		":group-uuid"
																	],
																	"variable": [
																		{
																			"key": "level-type",
																			"value": "laborum",
																			"description": "(Required) One of the values: global, cluster, environment"
																		},
																		{
																			"key": "level-id",
																			"value": "laborum",
																			"description": "(Required) "
																		},
																		{
																			"key": "policy-uuid",
																			"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																			"description": "(Required) "
																		},
																		{
																			"key": "group-uuid",
																			"value": "laborum",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Policy bindings create request invalid",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"parameters\": {\n    \"dolored5\": \"eiusmod aute ad commodo ex\",\n    \"sit_e\": \"quis mollit\"\n  },\n  \"metadata\": {\n    \"nulla3\": \"aliqua eu Duis Lorem\",\n    \"incididunt9\": \"qui dolore sed commodo\",\n    \"laborea\": \"in aute labore esse\",\n    \"in_7b_\": \"velit officia consequat minim\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid/:group-uuid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"iam",
																		"repo",
																		":level-type",
																		":level-id",
																		"bindings",
																		":policy-uuid",
																		":group-uuid"
																	],
																	"variable": [
																		{
																			"key": "level-type",
																			"value": "laborum",
																			"description": "(Required) One of the values: global, cluster, environment"
																		},
																		{
																			"key": "level-id",
																			"value": "laborum",
																			"description": "(Required) "
																		},
																		{
																			"key": "policy-uuid",
																			"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																			"description": "(Required) "
																		},
																		{
																			"key": "group-uuid",
																			"value": "laborum",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
														},
														{
															"name": "Level not found response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"parameters\": {\n    \"dolored5\": \"eiusmod aute ad commodo ex\",\n    \"sit_e\": \"quis mollit\"\n  },\n  \"metadata\": {\n    \"nulla3\": \"aliqua eu Duis Lorem\",\n    \"incididunt9\": \"qui dolore sed commodo\",\n    \"laborea\": \"in aute labore esse\",\n    \"in_7b_\": \"velit officia consequat minim\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid/:group-uuid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"iam",
																		"repo",
																		":level-type",
																		":level-id",
																		"bindings",
																		":policy-uuid",
																		":group-uuid"
																	],
																	"variable": [
																		{
																			"key": "level-type",
																			"value": "laborum",
																			"description": "(Required) One of the values: global, cluster, environment"
																		},
																		{
																			"key": "level-id",
																			"value": "laborum",
																			"description": "(Required) "
																		},
																		{
																			"key": "policy-uuid",
																			"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																			"description": "(Required) "
																		},
																		{
																			"key": "group-uuid",
																			"value": "laborum",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
														},
														{
															"name": "Policy bindings create request invalid",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"parameters\": {\n    \"dolored5\": \"eiusmod aute ad commodo ex\",\n    \"sit_e\": \"quis mollit\"\n  },\n  \"metadata\": {\n    \"nulla3\": \"aliqua eu Duis Lorem\",\n    \"incididunt9\": \"qui dolore sed commodo\",\n    \"laborea\": \"in aute labore esse\",\n    \"in_7b_\": \"velit officia consequat minim\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid/:group-uuid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"iam",
																		"repo",
																		":level-type",
																		":level-id",
																		"bindings",
																		":policy-uuid",
																		":group-uuid"
																	],
																	"variable": [
																		{
																			"key": "level-type",
																			"value": "laborum",
																			"description": "(Required) One of the values: global, cluster, environment"
																		},
																		{
																			"key": "level-id",
																			"value": "laborum",
																			"description": "(Required) "
																		},
																		{
																			"key": "policy-uuid",
																			"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																			"description": "(Required) "
																		},
																		{
																			"key": "group-uuid",
																			"value": "laborum",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
														}
													]
												},
												{
													"name": "Delete a policy binding from a group within a level",
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "key",
																	"value": "Authorization",
																	"type": "string"
																},
																{
																	"key": "value",
																	"value": "Api-Token {{DT_TOKEN}}",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "header",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid/:group-uuid?parameters[param1]=value1&parameters[param2]=value2&metadata[param1]=value1&forceMultiple=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																":policy-uuid",
																":group-uuid"
															],
															"query": [
																{
																	"key": "parameters[param1]",
																	"value": "value1",
																	"description": "Key-value pairs for policy template parameters and metadata according to sample format. This is taken into account only in SAAS. Ignored for Managed"
																},
																{
																	"key": "parameters[param2]",
																	"value": "value2",
																	"description": "Key-value pairs for policy template parameters and metadata according to sample format. This is taken into account only in SAAS. Ignored for Managed"
																},
																{
																	"key": "metadata[param1]",
																	"value": "value1",
																	"description": "Key-value pairs for policy template parameters and metadata according to sample format. This is taken into account only in SAAS. Ignored for Managed"
																},
																{
																	"key": "forceMultiple",
																	"value": "true",
																	"description": "Forces multiple bindings delete in case of delete attempt by parameters and metadata query"
																}
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																},
																{
																	"key": "group-uuid",
																	"value": "laborum",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Successful response - binding deleted",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid/:group-uuid?parameters[param1]=value1&parameters[param2]=value2&metadata[param1]=value1&forceMultiple=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"iam",
																		"repo",
																		":level-type",
																		":level-id",
																		"bindings",
																		":policy-uuid",
																		":group-uuid"
																	],
																	"query": [
																		{
																			"key": "parameters[param1]",
																			"value": "value1"
																		},
																		{
																			"key": "parameters[param2]",
																			"value": "value2"
																		},
																		{
																			"key": "metadata[param1]",
																			"value": "value1"
																		},
																		{
																			"key": "forceMultiple",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "level-type",
																			"value": "laborum",
																			"description": "(Required) One of the values: global, cluster, environment"
																		},
																		{
																			"key": "level-id",
																			"value": "laborum",
																			"description": "(Required) "
																		},
																		{
																			"key": "policy-uuid",
																			"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																			"description": "(Required) "
																		},
																		{
																			"key": "group-uuid",
																			"value": "laborum",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Policy bindings delete request invalid",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid/:group-uuid?parameters[param1]=value1&parameters[param2]=value2&metadata[param1]=value1&forceMultiple=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"iam",
																		"repo",
																		":level-type",
																		":level-id",
																		"bindings",
																		":policy-uuid",
																		":group-uuid"
																	],
																	"query": [
																		{
																			"key": "parameters[param1]",
																			"value": "value1"
																		},
																		{
																			"key": "parameters[param2]",
																			"value": "value2"
																		},
																		{
																			"key": "metadata[param1]",
																			"value": "value1"
																		},
																		{
																			"key": "forceMultiple",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "level-type",
																			"value": "laborum",
																			"description": "(Required) One of the values: global, cluster, environment"
																		},
																		{
																			"key": "level-id",
																			"value": "laborum",
																			"description": "(Required) "
																		},
																		{
																			"key": "policy-uuid",
																			"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																			"description": "(Required) "
																		},
																		{
																			"key": "group-uuid",
																			"value": "laborum",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
														},
														{
															"name": "Level not found response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "Api-Token {{DT_TOKEN}}"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid/:group-uuid?parameters[param1]=value1&parameters[param2]=value2&metadata[param1]=value1&forceMultiple=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"iam",
																		"repo",
																		":level-type",
																		":level-id",
																		"bindings",
																		":policy-uuid",
																		":group-uuid"
																	],
																	"query": [
																		{
																			"key": "parameters[param1]",
																			"value": "value1"
																		},
																		{
																			"key": "parameters[param2]",
																			"value": "value2"
																		},
																		{
																			"key": "metadata[param1]",
																			"value": "value1"
																		},
																		{
																			"key": "forceMultiple",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "level-type",
																			"value": "laborum",
																			"description": "(Required) One of the values: global, cluster, environment"
																		},
																		{
																			"key": "level-id",
																			"value": "laborum",
																			"description": "(Required) "
																		},
																		{
																			"key": "policy-uuid",
																			"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																			"description": "(Required) "
																		},
																		{
																			"key": "group-uuid",
																			"value": "laborum",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get policy bindings within a level",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid?parameters[param1]=value1&parameters[param2]=value2&metadata[param1]=value1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings",
														":policy-uuid"
													],
													"query": [
														{
															"key": "parameters[param1]",
															"value": "value1",
															"description": "Key-value pairs for policy template parameters and metadata according to sample format. This is taken into account only in SAAS. Ignored for Managed"
														},
														{
															"key": "parameters[param2]",
															"value": "value2",
															"description": "Key-value pairs for policy template parameters and metadata according to sample format. This is taken into account only in SAAS. Ignored for Managed"
														},
														{
															"key": "metadata[param1]",
															"value": "value1",
															"description": "Key-value pairs for policy template parameters and metadata according to sample format. This is taken into account only in SAAS. Ignored for Managed"
														}
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														},
														{
															"key": "policy-uuid",
															"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful response - list of policy bindings with parameters",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid?parameters[param1]=value1&parameters[param2]=value2&metadata[param1]=value1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																":policy-uuid"
															],
															"query": [
																{
																	"key": "parameters[param1]",
																	"value": "value1"
																},
																{
																	"key": "parameters[param2]",
																	"value": "value2"
																},
																{
																	"key": "metadata[param1]",
																	"value": "value1"
																}
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"enim ad Duis amet\"\n      ],\n      \"policyUuid\": \"urn:uuid:cbcc4d82-dc58-31b5-1a90-e54c36d1d92e\",\n      \"parameters\": {\n        \"labore930\": \"pariatur dolore reprehenderit cupidatat\"\n      },\n      \"metadata\": {\n        \"proident49\": \"reprehenderit adipisicing\"\n      }\n    },\n    {\n      \"groups\": [\n        \"non voluptate\"\n      ],\n      \"policyUuid\": \"urn:uuid:c2e81dac-8b10-6391-ff57-2a20474acfc2\",\n      \"parameters\": {\n        \"adipisicing_6\": \"ea laborum\",\n        \"consequat4\": \"quis\"\n      },\n      \"metadata\": {\n        \"ipsum_c21\": \"pariatur commodo eiusmod minim\"\n      }\n    }\n  ],\n  \"levelType\": \"qui Lorem\",\n  \"levelId\": \"esse ad ut a\"\n}"
												},
												{
													"name": "Level or policy not found response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid?parameters[param1]=value1&parameters[param2]=value2&metadata[param1]=value1",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																":policy-uuid"
															],
															"query": [
																{
																	"key": "parameters[param1]",
																	"value": "value1"
																},
																{
																	"key": "parameters[param2]",
																	"value": "value2"
																},
																{
																	"key": "metadata[param1]",
																	"value": "value1"
																}
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												}
											]
										},
										{
											"name": "Append policy bindings within a level",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groups\": [\n    \"c\"\n  ],\n  \"parameters\": {\n    \"doloraef\": \"minim ullamco culpa dolor esse\",\n    \"labore___\": \"officia velit\",\n    \"consectetur_4d8\": \"laborum cillum in aute consequat\"\n  },\n  \"metadata\": {\n    \"deserunt2\": \"ut Lorem\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings",
														":policy-uuid"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														},
														{
															"key": "policy-uuid",
															"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful response - policy bindings created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groups\": [\n    \"c\"\n  ],\n  \"parameters\": {\n    \"doloraef\": \"minim ullamco culpa dolor esse\",\n    \"labore___\": \"officia velit\",\n    \"consectetur_4d8\": \"laborum cillum in aute consequat\"\n  },\n  \"metadata\": {\n    \"deserunt2\": \"ut Lorem\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																":policy-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Policy bindings create request invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groups\": [\n    \"c\"\n  ],\n  \"parameters\": {\n    \"doloraef\": \"minim ullamco culpa dolor esse\",\n    \"labore___\": \"officia velit\",\n    \"consectetur_4d8\": \"laborum cillum in aute consequat\"\n  },\n  \"metadata\": {\n    \"deserunt2\": \"ut Lorem\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																":policy-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												},
												{
													"name": "Level not found response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groups\": [\n    \"c\"\n  ],\n  \"parameters\": {\n    \"doloraef\": \"minim ullamco culpa dolor esse\",\n    \"labore___\": \"officia velit\",\n    \"consectetur_4d8\": \"laborum cillum in aute consequat\"\n  },\n  \"metadata\": {\n    \"deserunt2\": \"ut Lorem\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																":policy-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												},
												{
													"name": "Policy bindings create request invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groups\": [\n    \"c\"\n  ],\n  \"parameters\": {\n    \"doloraef\": \"minim ullamco culpa dolor esse\",\n    \"labore___\": \"officia velit\",\n    \"consectetur_4d8\": \"laborum cillum in aute consequat\"\n  },\n  \"metadata\": {\n    \"deserunt2\": \"ut Lorem\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																":policy-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												}
											]
										},
										{
											"name": "Delete all policy bindings within a level",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid?parameters[param1]=value1&parameters[param2]=value2&metadata[param1]=value1&forceMultiple=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings",
														":policy-uuid"
													],
													"query": [
														{
															"key": "parameters[param1]",
															"value": "value1",
															"description": "Key-value pairs for policy template parameters and metadata according to sample format. This is taken into account only in SAAS. Ignored for Managed"
														},
														{
															"key": "parameters[param2]",
															"value": "value2",
															"description": "Key-value pairs for policy template parameters and metadata according to sample format. This is taken into account only in SAAS. Ignored for Managed"
														},
														{
															"key": "metadata[param1]",
															"value": "value1",
															"description": "Key-value pairs for policy template parameters and metadata according to sample format. This is taken into account only in SAAS. Ignored for Managed"
														},
														{
															"key": "forceMultiple",
															"value": "true",
															"description": "Forces multiple in case delete by parameters and metadata query"
														}
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														},
														{
															"key": "policy-uuid",
															"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful response - binding deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid?parameters[param1]=value1&parameters[param2]=value2&metadata[param1]=value1&forceMultiple=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																":policy-uuid"
															],
															"query": [
																{
																	"key": "parameters[param1]",
																	"value": "value1"
																},
																{
																	"key": "parameters[param2]",
																	"value": "value2"
																},
																{
																	"key": "metadata[param1]",
																	"value": "value1"
																},
																{
																	"key": "forceMultiple",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Policy bindings delete request invalid",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid?parameters[param1]=value1&parameters[param2]=value2&metadata[param1]=value1&forceMultiple=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																":policy-uuid"
															],
															"query": [
																{
																	"key": "parameters[param1]",
																	"value": "value1"
																},
																{
																	"key": "parameters[param2]",
																	"value": "value2"
																},
																{
																	"key": "metadata[param1]",
																	"value": "value1"
																},
																{
																	"key": "forceMultiple",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												},
												{
													"name": "Level not found response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/:policy-uuid?parameters[param1]=value1&parameters[param2]=value2&metadata[param1]=value1&forceMultiple=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																":policy-uuid"
															],
															"query": [
																{
																	"key": "parameters[param1]",
																	"value": "value1"
																},
																{
																	"key": "parameters[param2]",
																	"value": "value2"
																},
																{
																	"key": "metadata[param1]",
																	"value": "value1"
																},
																{
																	"key": "forceMultiple",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "groups/{group-uuid}",
									"item": [
										{
											"name": "Get policy UUIDs for a given level by level ID and group",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/groups/:group-uuid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings",
														"groups",
														":group-uuid"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														},
														{
															"key": "group-uuid",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful response - level found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/groups/:group-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																"groups",
																":group-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "group-uuid",
																	"value": "laborum",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"policyUuids\": [\n    \"urn:uuid:26156c6b-424b-db26-fea7-b25078977c73\",\n    \"4dd86c54-5608-ca0a-1e64-640dde132c9f\"\n  ]\n}"
												},
												{
													"name": "Level not found response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/groups/:group-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																"groups",
																":group-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "group-uuid",
																	"value": "laborum",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												}
											]
										},
										{
											"name": "Create or update policy bindings within a level for a group",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"policyUuids\": [\n    \"f517fc52-5bbc-e092-a029-fc23f3715fde\",\n    \"urn:uuid:77d4f8c4-cfbb-b80a-c5a8-b5fe20b69201\"\n  ],\n  \"parameters\": {\n    \"quis_e\": \"ex\"\n  },\n  \"metadata\": {\n    \"et_66c\": \"exercitation\",\n    \"non_c4\": \"cupidatat ex dolore Excepteur\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/groups/:group-uuid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings",
														"groups",
														":group-uuid"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														},
														{
															"key": "group-uuid",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful response - policy bindings created or updated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"policyUuids\": [\n    \"d1c397b4-4ae2-50da-4dfc-78204c86761f\",\n    \"0f43237a-3438-36f0-43b7-e339c7322fd5\"\n  ],\n  \"parameters\": {\n    \"dolore_1\": \"sint tempor eiusmod enim\",\n    \"officia_f7d\": \"sit id\"\n  },\n  \"metadata\": {\n    \"suntbe\": \"est\",\n    \"Duis_e\": \"minim deserunt nisi\",\n    \"exea\": \"eu officia\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/groups/:group-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																"groups",
																":group-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "group-uuid",
																	"value": "laborum",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Policy bindings create or update request invalid",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"policyUuids\": [\n    \"d1c397b4-4ae2-50da-4dfc-78204c86761f\",\n    \"0f43237a-3438-36f0-43b7-e339c7322fd5\"\n  ],\n  \"parameters\": {\n    \"dolore_1\": \"sint tempor eiusmod enim\",\n    \"officia_f7d\": \"sit id\"\n  },\n  \"metadata\": {\n    \"suntbe\": \"est\",\n    \"Duis_e\": \"minim deserunt nisi\",\n    \"exea\": \"eu officia\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/groups/:group-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																"groups",
																":group-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "group-uuid",
																	"value": "laborum",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												},
												{
													"name": "Level not found response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"policyUuids\": [\n    \"d1c397b4-4ae2-50da-4dfc-78204c86761f\",\n    \"0f43237a-3438-36f0-43b7-e339c7322fd5\"\n  ],\n  \"parameters\": {\n    \"dolore_1\": \"sint tempor eiusmod enim\",\n    \"officia_f7d\": \"sit id\"\n  },\n  \"metadata\": {\n    \"suntbe\": \"est\",\n    \"Duis_e\": \"minim deserunt nisi\",\n    \"exea\": \"eu officia\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/groups/:group-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																"groups",
																":group-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "group-uuid",
																	"value": "laborum",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												},
												{
													"name": "Policy bindings create or update request invalid",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"policyUuids\": [\n    \"d1c397b4-4ae2-50da-4dfc-78204c86761f\",\n    \"0f43237a-3438-36f0-43b7-e339c7322fd5\"\n  ],\n  \"parameters\": {\n    \"dolore_1\": \"sint tempor eiusmod enim\",\n    \"officia_f7d\": \"sit id\"\n  },\n  \"metadata\": {\n    \"suntbe\": \"est\",\n    \"Duis_e\": \"minim deserunt nisi\",\n    \"exea\": \"eu officia\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings/groups/:group-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"bindings",
																"groups",
																":group-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "group-uuid",
																	"value": "laborum",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get policy bindings for a level",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"iam",
												"repo",
												":level-type",
												":level-id",
												"bindings"
											],
											"variable": [
												{
													"key": "level-type",
													"value": "laborum",
													"description": "(Required) One of the values: global, cluster, environment"
												},
												{
													"key": "level-id",
													"value": "laborum",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful response - level found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"dolor aliquip\"\n      ],\n      \"policyUuid\": \"urn:uuid:e4e0075f-1092-1f0d-1f88-39a45475c7b6\",\n      \"parameters\": {\n        \"adipisicing_95\": \"commodo\"\n      },\n      \"metadata\": {\n        \"aliqua__\": \"adipisicing ipsum\",\n        \"sint3\": \"reprehenderit in fugiat\"\n      }\n    },\n    {\n      \"groups\": [\n        \"laboris voluptate reprehenderit\"\n      ],\n      \"policyUuid\": \"urn:uuid:eb14b9e5-97eb-282f-42ed-8639dc2a6367\",\n      \"parameters\": {\n        \"ipsum4\": \"minim do reprehenderit\",\n        \"ine2\": \"sint cillum id\"\n      },\n      \"metadata\": {\n        \"id30\": \"dolor est\",\n        \"aute9\": \"laboris quis pariatur fugiat\"\n      }\n    }\n  ],\n  \"levelType\": \"fugiat minim\",\n  \"levelId\": \"deserunt aliqua ad\"\n}"
										},
										{
											"name": "Level not found response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								},
								{
									"name": "Update policy bindings within a level",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"id minim\"\n      ],\n      \"policyUuid\": \"urn:uuid:93758877-c008-7487-0725-a0f1518595c2\",\n      \"parameters\": {\n        \"exercitation_7\": \"ad\",\n        \"minim_6_\": \"adipisicing nulla\"\n      },\n      \"metadata\": {\n        \"cupidatat_3b\": \"occaecat dolore Excepteur commodo\",\n        \"ad_8\": \"minim\",\n        \"enimc\": \"voluptate eu\"\n      }\n    },\n    {\n      \"groups\": [\n        \"adipisicing Excepteur quis dolor nisi\"\n      ],\n      \"policyUuid\": \"a4ad82ad-8749-3761-3327-15b9b3d23068\",\n      \"parameters\": {\n        \"exercitationeb4\": \"culpa reprehenderit\"\n      },\n      \"metadata\": {\n        \"est6\": \"reprehenderit\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"iam",
												"repo",
												":level-type",
												":level-id",
												"bindings"
											],
											"variable": [
												{
													"key": "level-type",
													"value": "laborum",
													"description": "(Required) One of the values: global, cluster, environment"
												},
												{
													"key": "level-id",
													"value": "laborum",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful response - policy bindings created or updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"minim amet eu dolore\"\n      ],\n      \"policyUuid\": \"urn:uuid:f30884ac-d009-e6c2-ebfb-0c743ba203f3\",\n      \"parameters\": {\n        \"iddf8\": \"in Excepteur do\",\n        \"exercitation_86\": \"et exercitation eiusmod mollit\"\n      },\n      \"metadata\": {\n        \"culpa_71c\": \"adipisicing ad nulla\"\n      }\n    },\n    {\n      \"groups\": [\n        \"aliqua ut Lorem cillum\"\n      ],\n      \"policyUuid\": \"urn:uuid:cb8827e8-9a26-5c68-d6f2-1067e741b82e\",\n      \"parameters\": {\n        \"excd\": \"Duis dolore\"\n      },\n      \"metadata\": {\n        \"exercitation_90\": \"quis velit reprehenderit Lorem\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Policy bindings create or update request invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"minim amet eu dolore\"\n      ],\n      \"policyUuid\": \"urn:uuid:f30884ac-d009-e6c2-ebfb-0c743ba203f3\",\n      \"parameters\": {\n        \"iddf8\": \"in Excepteur do\",\n        \"exercitation_86\": \"et exercitation eiusmod mollit\"\n      },\n      \"metadata\": {\n        \"culpa_71c\": \"adipisicing ad nulla\"\n      }\n    },\n    {\n      \"groups\": [\n        \"aliqua ut Lorem cillum\"\n      ],\n      \"policyUuid\": \"urn:uuid:cb8827e8-9a26-5c68-d6f2-1067e741b82e\",\n      \"parameters\": {\n        \"excd\": \"Duis dolore\"\n      },\n      \"metadata\": {\n        \"exercitation_90\": \"quis velit reprehenderit Lorem\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										},
										{
											"name": "Level not found response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"minim amet eu dolore\"\n      ],\n      \"policyUuid\": \"urn:uuid:f30884ac-d009-e6c2-ebfb-0c743ba203f3\",\n      \"parameters\": {\n        \"iddf8\": \"in Excepteur do\",\n        \"exercitation_86\": \"et exercitation eiusmod mollit\"\n      },\n      \"metadata\": {\n        \"culpa_71c\": \"adipisicing ad nulla\"\n      }\n    },\n    {\n      \"groups\": [\n        \"aliqua ut Lorem cillum\"\n      ],\n      \"policyUuid\": \"urn:uuid:cb8827e8-9a26-5c68-d6f2-1067e741b82e\",\n      \"parameters\": {\n        \"excd\": \"Duis dolore\"\n      },\n      \"metadata\": {\n        \"exercitation_90\": \"quis velit reprehenderit Lorem\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										},
										{
											"name": "Policy bindings create or update request invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"policyBindings\": [\n    {\n      \"groups\": [\n        \"minim amet eu dolore\"\n      ],\n      \"policyUuid\": \"urn:uuid:f30884ac-d009-e6c2-ebfb-0c743ba203f3\",\n      \"parameters\": {\n        \"iddf8\": \"in Excepteur do\",\n        \"exercitation_86\": \"et exercitation eiusmod mollit\"\n      },\n      \"metadata\": {\n        \"culpa_71c\": \"adipisicing ad nulla\"\n      }\n    },\n    {\n      \"groups\": [\n        \"aliqua ut Lorem cillum\"\n      ],\n      \"policyUuid\": \"urn:uuid:cb8827e8-9a26-5c68-d6f2-1067e741b82e\",\n      \"parameters\": {\n        \"excd\": \"Duis dolore\"\n      },\n      \"metadata\": {\n        \"exercitation_90\": \"quis velit reprehenderit Lorem\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								},
								{
									"name": "Delete all policy bindings from a level",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"iam",
												"repo",
												":level-type",
												":level-id",
												"bindings"
											],
											"variable": [
												{
													"key": "level-type",
													"value": "laborum",
													"description": "(Required) One of the values: global, cluster, environment"
												},
												{
													"key": "level-id",
													"value": "laborum",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful response - bindings deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Policy bindings delete request invalid",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										},
										{
											"name": "Level not found response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										},
										{
											"name": "Policy bindings delete request invalid",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/bindings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"bindings"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "policies",
							"item": [
								{
									"name": "{uuid}",
									"item": [
										{
											"name": "Get a policy within a level",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/:uuid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"policies",
														":uuid"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														},
														{
															"key": "uuid",
															"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful response - policy found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/:uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																":uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"dolor culpa\",\n  \"statementQuery\": \"dolore reprehenderit non labore enim\",\n  \"statements\": [\n    {\n      \"effect\": \"DENY\",\n      \"permissions\": [\n        \"sunt in\"\n      ],\n      \"conditions\": [\n        {\n          \"name\": \"in laboris elit\",\n          \"operator\": \"IN\",\n          \"values\": [\n            \"eu nisi\"\n          ]\n        },\n        {\n          \"name\": \"nulla Lorem\",\n          \"operator\": \"IN\",\n          \"values\": [\n            \"in\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"uuid\": \"4273b618-2f2e-9478-36b6-6d07375ff13e\",\n  \"description\": \"aliqua quis non\",\n  \"tags\": [\n    \"anim adipisicing tempor\",\n    \"consectetur nisi ut dolore\"\n  ]\n}"
												},
												{
													"name": "Policy not found response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/:uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																":uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												}
											]
										},
										{
											"name": "Update or create a new policy within a level",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/:uuid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"policies",
														":uuid"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														},
														{
															"key": "uuid",
															"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful response - policy created",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/:uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																":uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Location",
															"value": "",
															"description": "URI of created policy"
														},
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"dolor culpa\",\n  \"statementQuery\": \"dolore reprehenderit non labore enim\",\n  \"statements\": [\n    {\n      \"effect\": \"DENY\",\n      \"permissions\": [\n        \"sunt in\"\n      ],\n      \"conditions\": [\n        {\n          \"name\": \"in laboris elit\",\n          \"operator\": \"IN\",\n          \"values\": [\n            \"eu nisi\"\n          ]\n        },\n        {\n          \"name\": \"nulla Lorem\",\n          \"operator\": \"IN\",\n          \"values\": [\n            \"in\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"uuid\": \"4273b618-2f2e-9478-36b6-6d07375ff13e\",\n  \"description\": \"aliqua quis non\",\n  \"tags\": [\n    \"anim adipisicing tempor\",\n    \"consectetur nisi ut dolore\"\n  ]\n}"
												},
												{
													"name": "Successful response - policy updated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/:uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																":uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Policy put request invalid",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/:uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																":uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												},
												{
													"name": "Level not found response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/:uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																":uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												},
												{
													"name": "Policy put request invalid",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/:uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																":uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												}
											]
										},
										{
											"name": "Delete a policy from a level",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/:uuid?force=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"policies",
														":uuid"
													],
													"query": [
														{
															"key": "force",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														},
														{
															"key": "uuid",
															"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successful response - policy deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/:uuid?force=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																":uuid"
															],
															"query": [
																{
																	"key": "force",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Policy delete request invalid",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/:uuid?force=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																":uuid"
															],
															"query": [
																{
																	"key": "force",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												},
												{
													"name": "Level not found response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/:uuid?force=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																":uuid"
															],
															"query": [
																{
																	"key": "force",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "validation",
									"item": [
										{
											"name": "Validates policy before creation or update",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/validation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"policies",
														"validation"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Policy is valid but there may be some validation warnings. Please check the response body",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/validation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																"validation"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"warnings\": [\n    \"dolor sed enim elit\",\n    \"occaecat\"\n  ]\n}"
												},
												{
													"name": "Policy request is invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/validation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																"validation"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												},
												{
													"name": "Level not found response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/validation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																"validation"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												},
												{
													"name": "Policy request is invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/validation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																"validation"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												}
											]
										},
										{
											"name": "Validates policy before creation or update",
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "Authorization",
															"type": "string"
														},
														{
															"key": "value",
															"value": "Api-Token {{DT_TOKEN}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/validation/:policy-uuid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"policies",
														"validation",
														":policy-uuid"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														},
														{
															"key": "policy-uuid",
															"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Policy is valid but there may be some validation warnings. Please check the response body",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/validation/:policy-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																"validation",
																":policy-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"warnings\": [\n    \"sint eu\",\n    \"incididunt eu in labore dolor\"\n  ]\n}"
												},
												{
													"name": "Policy request is invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/validation/:policy-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																"validation",
																":policy-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												},
												{
													"name": "Level not found response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/validation/:policy-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																"validation",
																":policy-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												},
												{
													"name": "Policy request is invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "Api-Token {{DT_TOKEN}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/validation/:policy-uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"iam",
																"repo",
																":level-type",
																":level-id",
																"policies",
																"validation",
																":policy-uuid"
															],
															"variable": [
																{
																	"key": "level-type",
																	"value": "laborum",
																	"description": "(Required) One of the values: global, cluster, environment"
																},
																{
																	"key": "level-id",
																	"value": "laborum",
																	"description": "(Required) "
																},
																{
																	"key": "policy-uuid",
																	"value": "05030244-6c06-8bf6-1d90-5171792ea1e9",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get all policies for a level",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies?name=laborum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"iam",
												"repo",
												":level-type",
												":level-id",
												"policies"
											],
											"query": [
												{
													"key": "name",
													"value": "laborum",
													"description": "Optional policy name. Only policies that are of equal name will be returned"
												}
											],
											"variable": [
												{
													"key": "level-type",
													"value": "laborum",
													"description": "(Required) One of the values: global, cluster, environment"
												},
												{
													"key": "level-id",
													"value": "laborum",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful response - level found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies?name=laborum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"policies"
													],
													"query": [
														{
															"key": "name",
															"value": "laborum"
														}
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"policies\": [\n    {\n      \"uuid\": \"urn:uuid:8a897ea3-4e80-5e5b-0582-f3a7fff110c7\",\n      \"name\": \"consectetur\",\n      \"description\": \"tempor aliquip\"\n    },\n    {\n      \"uuid\": \"34ba9c3b-3a95-05c1-23a9-47ecd96733b9\",\n      \"name\": \"labore veniam qui aute\",\n      \"description\": \"ex commodo\"\n    }\n  ]\n}"
										},
										{
											"name": "Level not found response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies?name=laborum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"policies"
													],
													"query": [
														{
															"key": "name",
															"value": "laborum"
														}
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								},
								{
									"name": "Create a policy within a level",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"eu reprehenderit consectetur voluptate\",\n  \"description\": \"culpa\",\n  \"tags\": [\n    \"reprehenderit minim amet nis\",\n    \"incididunt sit dol\"\n  ],\n  \"statementQuery\": \"deserunt ut\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"iam",
												"repo",
												":level-type",
												":level-id",
												"policies"
											],
											"variable": [
												{
													"key": "level-type",
													"value": "laborum",
													"description": "(Required) One of the values: global, cluster, environment"
												},
												{
													"key": "level-id",
													"value": "laborum",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful response - policy created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"policies"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Location",
													"value": "",
													"description": "URI of created policy"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"ex exercitation enim\",\n  \"statementQuery\": \"ipsum aute nulla occaecat\",\n  \"statements\": [\n    {\n      \"effect\": \"ALLOW\",\n      \"permissions\": [\n        \"Lorem in\"\n      ],\n      \"conditions\": [\n        {\n          \"name\": \"laboris consectetur ipsum\",\n          \"operator\": \"NEQ\",\n          \"values\": [\n            \"dolore ut sunt sit\"\n          ]\n        },\n        {\n          \"name\": \"in eiusmod quis sed\",\n          \"operator\": \"IN\",\n          \"values\": [\n            \"Lorem eiusmod est\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"uuid\": \"urn:uuid:431fe15a-8665-4221-e59b-b1679d2bda6e\",\n  \"description\": \"dolore voluptate sit nostrud\",\n  \"tags\": [\n    \"deserunt in quis reprehenderit esse\",\n    \"sed voluptate\"\n  ]\n}"
										},
										{
											"name": "Policy create request invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"policies"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										},
										{
											"name": "Level not found response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"policies"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										},
										{
											"name": "Policy create request invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"aliquip proident commodo non\",\n  \"description\": \"in ut\",\n  \"tags\": [\n    \"laborum et\",\n    \"laborum\"\n  ],\n  \"statementQuery\": \"sint do commodo et\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"policies"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								},
								{
									"name": "Get overview of all policies for a given level, descendant and ancestor levels",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/aggregate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"iam",
												"repo",
												":level-type",
												":level-id",
												"policies",
												"aggregate"
											],
											"variable": [
												{
													"key": "level-type",
													"value": "laborum",
													"description": "(Required) One of the values: global, cluster, environment"
												},
												{
													"key": "level-id",
													"value": "laborum",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successful response - level found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/aggregate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"policies",
														"aggregate"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"policyOverviewList\": [\n    {\n      \"uuid\": \"2bd35e6b-aeea-7515-ce84-03bf69b1c6ff\",\n      \"name\": \"anim enim amet\",\n      \"description\": \"adipisicing\",\n      \"levelType\": \"aute est Excepteur\",\n      \"levelId\": \"voluptate dolore elit\"\n    },\n    {\n      \"uuid\": \"4e646340-9ba7-3045-6613-e7bbe00e0782\",\n      \"name\": \"ullamco\",\n      \"description\": \"do magna \",\n      \"levelType\": \"enim\",\n      \"levelId\": \"fugiat eu aute incididunt reprehenderit\"\n    }\n  ]\n}"
										},
										{
											"name": "Level not found response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/iam/repo/:level-type/:level-id/policies/aggregate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"iam",
														"repo",
														":level-type",
														":level-id",
														"policies",
														"aggregate"
													],
													"variable": [
														{
															"key": "level-type",
															"value": "laborum",
															"description": "(Required) One of the values: global, cluster, environment"
														},
														{
															"key": "level-id",
															"value": "laborum",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "organizational-levels/{level-type}/{level-id}",
					"item": [
						{
							"name": "Get an organizational level by level ID",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iam/organizational-levels/:level-type/:level-id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iam",
										"organizational-levels",
										":level-type",
										":level-id"
									],
									"variable": [
										{
											"key": "level-type",
											"value": "laborum",
											"description": "(Required) One of the values: global, cluster, environment"
										},
										{
											"key": "level-id",
											"value": "laborum",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful response - level found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/iam/organizational-levels/:level-type/:level-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"iam",
												"organizational-levels",
												":level-type",
												":level-id"
											],
											"variable": [
												{
													"key": "level-type",
													"value": "laborum",
													"description": "(Required) One of the values: global, cluster, environment"
												},
												{
													"key": "level-id",
													"value": "laborum",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"parentId\": \"Duis laborum esse proident\",\n  \"parentType\": \"Lor\",\n  \"type\": \"eiusmod Duis\",\n  \"id\": \"quis sed\",\n  \"modifiedAt\": \"nisi magna quis\"\n}"
								},
								{
									"name": "Level not found response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/iam/organizational-levels/:level-type/:level-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"iam",
												"organizational-levels",
												":level-type",
												":level-id"
											],
											"variable": [
												{
													"key": "level-type",
													"value": "laborum",
													"description": "(Required) One of the values: global, cluster, environment"
												},
												{
													"key": "level-id",
													"value": "laborum",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								}
							]
						},
						{
							"name": "Get descendant organizational levels for a given level by level ID",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/iam/organizational-levels/:level-type/:level-id/descendants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iam",
										"organizational-levels",
										":level-type",
										":level-id",
										"descendants"
									],
									"variable": [
										{
											"key": "level-type",
											"value": "laborum",
											"description": "(Required) One of the values: global, cluster, environment"
										},
										{
											"key": "level-id",
											"value": "laborum",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful response - level list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/iam/organizational-levels/:level-type/:level-id/descendants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"iam",
												"organizational-levels",
												":level-type",
												":level-id",
												"descendants"
											],
											"variable": [
												{
													"key": "level-type",
													"value": "laborum",
													"description": "(Required) One of the values: global, cluster, environment"
												},
												{
													"key": "level-id",
													"value": "laborum",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"levels\": [\n    {\n      \"parentId\": \"et amet\",\n      \"parentType\": \"magna incididunt in qui commodo\",\n      \"type\": \"Duis\",\n      \"id\": \"incididunt quis\",\n      \"modifiedAt\": \"consequat do elit labore\"\n    },\n    {\n      \"parentId\": \"Exce\",\n      \"parentType\": \"Duis exercitation incididunt\",\n      \"type\": \"al\",\n      \"id\": \"sint \",\n      \"modifiedAt\": \"aute sunt fugiat commodo\"\n    }\n  ]\n}"
								},
								{
									"name": "Level not found response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/iam/organizational-levels/:level-type/:level-id/descendants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"iam",
												"organizational-levels",
												":level-type",
												":level-id",
												"descendants"
											],
											"variable": [
												{
													"key": "level-type",
													"value": "laborum",
													"description": "(Required) One of the values: global, cluster, environment"
												},
												{
													"key": "level-id",
													"value": "laborum",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Gets configuration for policy statements. Available values for services, permissions, conditions and operators",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/iam/configuration/policystatements?statuses=IN_DEVELOPMENT&statuses=IN_DEVELOPMENT",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"iam",
								"configuration",
								"policystatements"
							],
							"query": [
								{
									"key": "statuses",
									"value": "IN_DEVELOPMENT"
								},
								{
									"key": "statuses",
									"value": "IN_DEVELOPMENT"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/iam/configuration/policystatements?statuses=IN_DEVELOPMENT&statuses=GENERAL_AVAILABILITY",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"iam",
										"configuration",
										"policystatements"
									],
									"query": [
										{
											"key": "statuses",
											"value": "IN_DEVELOPMENT"
										},
										{
											"key": "statuses",
											"value": "GENERAL_AVAILABILITY"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"services\": [\n    {\n      \"name\": \"Excepteur occaecat nulla aliqua\",\n      \"description\": \"sit ipsum Excepteur quis\",\n      \"permissions\": [\n        {\n          \"name\": \"sint dolore aliquip aliqua\",\n          \"description\": \"magna eu occaecat qui\",\n          \"conditions\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"dynamicConditionPrefixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"status\": \"GENERAL_AVAILABILITY\",\n          \"internal\": false\n        },\n        {\n          \"name\": \"officia nostrud\",\n          \"description\": \"enim minim aliqua\",\n          \"conditions\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"dynamicConditionPrefixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"status\": \"IN_DEVELOPMENT\",\n          \"internal\": false\n        }\n      ],\n      \"status\": \"GENERAL_AVAILABILITY\"\n    },\n    {\n      \"name\": \"ut aliquip consequat\",\n      \"description\": \"anim sunt in laboris pariatur\",\n      \"permissions\": [\n        {\n          \"name\": \"ipsum laborum nulla\",\n          \"description\": \"deserunt esse\",\n          \"conditions\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"dynamicConditionPrefixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"status\": \"GENERAL_AVAILABILITY\",\n          \"internal\": true\n        },\n        {\n          \"name\": \"dolor in\",\n          \"description\": \"ad reprehenderit id\",\n          \"conditions\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"dynamicConditionPrefixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"status\": \"GENERAL_AVAILABILITY\",\n          \"internal\": false\n        }\n      ],\n      \"status\": \"GENERAL_AVAILABILITY\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "active Gate Tokens",
			"item": [
				{
					"name": "{token Identifier}",
					"item": [
						{
							"name": "Gets metadata of an ActiveGate token | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens",
										":tokenIdentifier"
									],
									"variable": [
										{
											"key": "tokenIdentifier",
											"value": "laborum",
											"description": "(Required) The ID of the token."
										}
									]
								},
								"description": "The token secret is **not** exposed."
							},
							"response": [
								{
									"name": "Success. The response contains the metadata of the tokens.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGateTokens",
												":tokenIdentifier"
											],
											"variable": [
												{
													"key": "tokenIdentifier",
													"value": "laborum",
													"description": "(Required) The ID of the token."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"dt0g02.4KWZO5EF\",\n  \"name\": \"myToken\",\n  \"owner\": \"john.smith\",\n  \"creationDate\": \"2020-11-22T08:15:30.144Z\",\n  \"expirationDate\": \"2020-11-24T08:15:30.144Z\",\n  \"lastUsedDate\": \"2020-11-23T08:15:30.144Z\",\n  \"seedToken\": false,\n  \"activeGateType\": \"CLUSTER\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGateTokens",
												":tokenIdentifier"
											],
											"variable": [
												{
													"key": "tokenIdentifier",
													"value": "laborum",
													"description": "(Required) The ID of the token."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGateTokens",
												":tokenIdentifier"
											],
											"variable": [
												{
													"key": "tokenIdentifier",
													"value": "laborum",
													"description": "(Required) The ID of the token."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes an ActiveGate token | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens",
										":tokenIdentifier"
									],
									"variable": [
										{
											"key": "tokenIdentifier",
											"value": "laborum",
											"description": "(Required) The token to be deleted. \n\nYou can specify either the ID or the secret of the token."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGateTokens",
												":tokenIdentifier"
											],
											"variable": [
												{
													"key": "tokenIdentifier",
													"value": "laborum",
													"description": "(Required) The token to be deleted. \n\nYou can specify either the ID or the secret of the token."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGateTokens/:tokenIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGateTokens",
												":tokenIdentifier"
											],
											"variable": [
												{
													"key": "tokenIdentifier",
													"value": "laborum",
													"description": "(Required) The token to be deleted. \n\nYou can specify either the ID or the secret of the token."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available ActiveGate tokens | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activeGateTokens?nextPageKey=laborum&pageSize=67827488",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGateTokens"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "laborum",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "67827488",
									"description": "The amount of ActiveGate tokens in a single response payload. \n\nThe maximal allowed page size is 3000 and the minimal size is 100. \n\nIf not set, 100 is used."
								}
							]
						},
						"description": "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages."
					},
					"response": [
						{
							"name": "Success. The response contains the list of ActiveGate tokens.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens?nextPageKey=laborum&pageSize=67827488",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "laborum"
										},
										{
											"key": "pageSize",
											"value": "67827488"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": 1000,\n  \"pageSize\": 100,\n  \"nextPageKey\": \"AAAAAAAAAAAAAABOAAAAAAAAAAAAAAA6ACQAEAAAABgACgAITFdXQk1BRzYAAAhtZXRhZGF0YQB___-bf___m3iIYxfF7xVQvY72rwblQkcAAwAAAAAAAADHAAAAZA==\",\n  \"activeGateTokens\": {\n    \"name\": \"myToken\",\n    \"owner\": \"john.smith\",\n    \"creationDate\": \"2020-11-22T08:15:30.144Z\",\n    \"expirationDate\": \"2020-11-24T08:15:30.144Z\",\n    \"lastUsedDate\": \"2020-11-23T08:15:30.144Z\",\n    \"seedToken\": \"false\",\n    \"activeGateType\": \"ENVIRONMENT\"\n  }\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens?nextPageKey=laborum&pageSize=67827488",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "laborum"
										},
										{
											"key": "pageSize",
											"value": "67827488"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens?nextPageKey=laborum&pageSize=67827488",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "laborum"
										},
										{
											"key": "pageSize",
											"value": "67827488"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
						}
					]
				},
				{
					"name": "Creates a new ActiveGate token | maturity=EARLY_ADOPTER",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "Api-Token {{DT_TOKEN}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							},
							{
								"key": "Accept",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"activeGateType\": \"CLUSTER\",\n  \"name\": \"myToken\",\n  \"expirationDate\": \"now+14d\",\n  \"seedToken\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/activeGateTokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGateTokens"
							]
						},
						"description": "The newly created token will be owned by the same user who owns the token used for authentication of the call."
					},
					"response": [
						{
							"name": "Success. The token has been created. The body of the response contains the token secret.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activeGateType\": \"CLUSTER\",\n  \"name\": \"myToken\",\n  \"expirationDate\": \"now+14d\",\n  \"seedToken\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"dt0g02.4KWZO5EF\",\n  \"token\": \"dt0g02.4KWZO5EF.XT47R5DRADJIZUFOX4UDNOKTSUSABGLN7XSMJG7UXHRXKNY4WLORH4OF4T75MG7E\",\n  \"expirationDate\": \"2020-11-24T08:15:30.144Z\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "Api-Token {{DT_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activeGateType\": \"CLUSTER\",\n  \"name\": \"myToken\",\n  \"expirationDate\": \"now+14d\",\n  \"seedToken\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/activeGateTokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGateTokens"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "objects",
					"item": [
						{
							"name": "{object Id}",
							"item": [
								{
									"name": "Gets the specified settings object | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "laborum",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId",
															"value": "laborum",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"modified\": 1216066,\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"author\": \"john.doe@example.com\",\n  \"schemaVersion\": \"1.0.0\",\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"created\": 45272565,\n  \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"scope\": \"HOST-D3A3C5A146830A79\",\n  \"summary\": \"laboris ut reprehenderit esse\"\n}"
										},
										{
											"name": "No object available for the given objectId",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId",
															"value": "laborum",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -80470575,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"fugiat non incididunt culpa enim\",\n        \"message\": \"sint enim quis occaecat\",\n        \"path\": \"pariatur nulla sit Duis\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"deserunt consequat Excepteur\",\n        \"message\": \"enim ad laboris eu\",\n        \"path\": \"pariatur ut\"\n      }\n    ],\n    \"message\": \"in mollit fugiat commodo in\",\n    \"code\": 45031486\n  }\n}"
										}
									]
								},
								{
									"name": "Updates an existing settings object | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"schemaVersion\": \"1.0.0\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "laborum",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"schemaVersion\": \"1.0.0\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId",
															"value": "laborum",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -80470575,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"fugiat non incididunt culpa enim\",\n        \"message\": \"sint enim quis occaecat\",\n        \"path\": \"pariatur nulla sit Duis\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"deserunt consequat Excepteur\",\n        \"message\": \"enim ad laboris eu\",\n        \"path\": \"pariatur ut\"\n      }\n    ],\n    \"message\": \"in mollit fugiat commodo in\",\n    \"code\": 45031486\n  }\n}"
										},
										{
											"name": "Failed. Schema validation failed.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"schemaVersion\": \"1.0.0\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId",
															"value": "laborum",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -80470575,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"fugiat non incididunt culpa enim\",\n        \"message\": \"sint enim quis occaecat\",\n        \"path\": \"pariatur nulla sit Duis\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"deserunt consequat Excepteur\",\n        \"message\": \"enim ad laboris eu\",\n        \"path\": \"pariatur ut\"\n      }\n    ],\n    \"message\": \"in mollit fugiat commodo in\",\n    \"code\": 45031486\n  }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"schemaVersion\": \"1.0.0\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId",
															"value": "laborum",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -80470575,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"fugiat non incididunt culpa enim\",\n        \"message\": \"sint enim quis occaecat\",\n        \"path\": \"pariatur nulla sit Duis\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"deserunt consequat Excepteur\",\n        \"message\": \"enim ad laboris eu\",\n        \"path\": \"pariatur ut\"\n      }\n    ],\n    \"message\": \"in mollit fugiat commodo in\",\n    \"code\": 45031486\n  }\n}"
										},
										{
											"name": "Failed. Conflicting resource.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": {\n    \"autoMonitoring\": true\n  },\n  \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"schemaVersion\": \"1.0.0\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId",
															"value": "laborum",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -80470575,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"fugiat non incididunt culpa enim\",\n        \"message\": \"sint enim quis occaecat\",\n        \"path\": \"pariatur nulla sit Duis\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"deserunt consequat Excepteur\",\n        \"message\": \"enim ad laboris eu\",\n        \"path\": \"pariatur ut\"\n      }\n    ],\n    \"message\": \"in mollit fugiat commodo in\",\n    \"code\": 45031486\n  }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified settings object | maturity=EARLY_ADOPTER",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=laborum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"query": [
												{
													"key": "updateToken",
													"value": "laborum",
													"description": "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks."
												}
											],
											"variable": [
												{
													"key": "objectId",
													"value": "laborum",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=laborum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "laborum"
														}
													],
													"variable": [
														{
															"key": "objectId",
															"value": "laborum",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. Schema validation failed.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=laborum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "laborum"
														}
													],
													"variable": [
														{
															"key": "objectId",
															"value": "laborum",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -80470575,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"fugiat non incididunt culpa enim\",\n        \"message\": \"sint enim quis occaecat\",\n        \"path\": \"pariatur nulla sit Duis\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"deserunt consequat Excepteur\",\n        \"message\": \"enim ad laboris eu\",\n        \"path\": \"pariatur ut\"\n      }\n    ],\n    \"message\": \"in mollit fugiat commodo in\",\n    \"code\": 45031486\n  }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=laborum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "laborum"
														}
													],
													"variable": [
														{
															"key": "objectId",
															"value": "laborum",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -80470575,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"fugiat non incididunt culpa enim\",\n        \"message\": \"sint enim quis occaecat\",\n        \"path\": \"pariatur nulla sit Duis\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"deserunt consequat Excepteur\",\n        \"message\": \"enim ad laboris eu\",\n        \"path\": \"pariatur ut\"\n      }\n    ],\n    \"message\": \"in mollit fugiat commodo in\",\n    \"code\": 45031486\n  }\n}"
										},
										{
											"name": "Failed. Conflicting resource.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=laborum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "laborum"
														}
													],
													"variable": [
														{
															"key": "objectId",
															"value": "laborum",
															"description": "(Required) The ID of the required settings object."
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"invalidValue\": {\n    \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -80470575,\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"QUERY\",\n        \"location\": \"fugiat non incididunt culpa enim\",\n        \"message\": \"sint enim quis occaecat\",\n        \"path\": \"pariatur nulla sit Duis\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"deserunt consequat Excepteur\",\n        \"message\": \"enim ad laboris eu\",\n        \"path\": \"pariatur ut\"\n      }\n    ],\n    \"message\": \"in mollit fugiat commodo in\",\n    \"code\": 45031486\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists available settings objects | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settings/objects?schemaIds=laborum&scopes=laborum&fields=objectId,value&nextPageKey=laborum&pageSize=67827488",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "schemaIds",
											"value": "laborum",
											"description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "scopes",
											"value": "laborum",
											"description": "A list of comma-separated scopes, that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scopes. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "fields",
											"value": "objectId,value",
											"description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `objectId,value`)."
										},
										{
											"key": "nextPageKey",
											"value": "laborum",
											"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
										},
										{
											"key": "pageSize",
											"value": "67827488",
											"description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=laborum&scopes=laborum&fields=objectId,value&nextPageKey=laborum&pageSize=67827488",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "laborum"
												},
												{
													"key": "scopes",
													"value": "laborum"
												},
												{
													"key": "fields",
													"value": "objectId,value"
												},
												{
													"key": "nextPageKey",
													"value": "laborum"
												},
												{
													"key": "pageSize",
													"value": "67827488"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 10570638,\n  \"items\": [\n    {\n      \"modified\": 19516664,\n      \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"author\": \"john.doe@example.com\",\n      \"schemaVersion\": \"1.0.0\",\n      \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"created\": 67078465,\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"value\": {\n        \"autoMonitoring\": true\n      },\n      \"scope\": \"HOST-D3A3C5A146830A79\",\n      \"summary\": \"commodo minim\"\n    },\n    {\n      \"modified\": 63787435,\n      \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"author\": \"john.doe@example.com\",\n      \"schemaVersion\": \"1.0.0\",\n      \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n      \"created\": 26528038,\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"value\": {\n        \"autoMonitoring\": true\n      },\n      \"scope\": \"HOST-D3A3C5A146830A79\",\n      \"summary\": \"tempor nulla\"\n    }\n  ],\n  \"pageSize\": 74072878,\n  \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
								},
								{
									"name": "Failed. The specified schema or scope is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=laborum&scopes=laborum&fields=objectId,value&nextPageKey=laborum&pageSize=67827488",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "laborum"
												},
												{
													"key": "scopes",
													"value": "laborum"
												},
												{
													"key": "fields",
													"value": "objectId,value"
												},
												{
													"key": "nextPageKey",
													"value": "laborum"
												},
												{
													"key": "pageSize",
													"value": "67827488"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								}
							]
						},
						{
							"name": "Creates a new settings object | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false",
											"description": "If `true`, the request runs only validation of the submitted settings objects, without saving them."
										}
									]
								},
								"description": "You can upload several objects at once. In that case each object returns its own response code. Check the response body for details."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -29367520,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"minim\",\n          \"message\": \"laboris Lorem exercitation\",\n          \"path\": \"d\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"Lorem irure quis aliqua\",\n          \"message\": \"aute ullamco deserunt occaecat\",\n          \"path\": \"aliqua aute\"\n        }\n      ],\n      \"message\": \"veniam voluptate mollit consequat\",\n      \"code\": -6772625\n    }\n  },\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -44494228,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"veniam Excepteur dolore dolor\",\n          \"message\": \"commodo labore do\",\n          \"path\": \"consectetur Ut aliqua ad ut\"\n        },\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"nostrud officia ad\",\n          \"message\": \"sunt dolore\",\n          \"path\": \"ut voluptate\"\n        }\n      ],\n      \"message\": \"sed sit ad\",\n      \"code\": -4780061\n    }\n  }\n]"
								},
								{
									"name": "Multi-status: different objects in the payload resulted in different statuses.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -29367520,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"minim\",\n          \"message\": \"laboris Lorem exercitation\",\n          \"path\": \"d\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"Lorem irure quis aliqua\",\n          \"message\": \"aute ullamco deserunt occaecat\",\n          \"path\": \"aliqua aute\"\n        }\n      ],\n      \"message\": \"veniam voluptate mollit consequat\",\n      \"code\": -6772625\n    }\n  },\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -44494228,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"veniam Excepteur dolore dolor\",\n          \"message\": \"commodo labore do\",\n          \"path\": \"consectetur Ut aliqua ad ut\"\n        },\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"nostrud officia ad\",\n          \"message\": \"sunt dolore\",\n          \"path\": \"ut voluptate\"\n        }\n      ],\n      \"message\": \"sed sit ad\",\n      \"code\": -4780061\n    }\n  }\n]"
								},
								{
									"name": "Failed. Schema validation failed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -29367520,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"minim\",\n          \"message\": \"laboris Lorem exercitation\",\n          \"path\": \"d\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"Lorem irure quis aliqua\",\n          \"message\": \"aute ullamco deserunt occaecat\",\n          \"path\": \"aliqua aute\"\n        }\n      ],\n      \"message\": \"veniam voluptate mollit consequat\",\n      \"code\": -6772625\n    }\n  },\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -44494228,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"veniam Excepteur dolore dolor\",\n          \"message\": \"commodo labore do\",\n          \"path\": \"consectetur Ut aliqua ad ut\"\n        },\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"nostrud officia ad\",\n          \"message\": \"sunt dolore\",\n          \"path\": \"ut voluptate\"\n        }\n      ],\n      \"message\": \"sed sit ad\",\n      \"code\": -4780061\n    }\n  }\n]"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -29367520,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"minim\",\n          \"message\": \"laboris Lorem exercitation\",\n          \"path\": \"d\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"Lorem irure quis aliqua\",\n          \"message\": \"aute ullamco deserunt occaecat\",\n          \"path\": \"aliqua aute\"\n        }\n      ],\n      \"message\": \"veniam voluptate mollit consequat\",\n      \"code\": -6772625\n    }\n  },\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -44494228,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"veniam Excepteur dolore dolor\",\n          \"message\": \"commodo labore do\",\n          \"path\": \"consectetur Ut aliqua ad ut\"\n        },\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"nostrud officia ad\",\n          \"message\": \"sunt dolore\",\n          \"path\": \"ut voluptate\"\n        }\n      ],\n      \"message\": \"sed sit ad\",\n      \"code\": -4780061\n    }\n  }\n]"
								},
								{
									"name": "Failed. Conflicting resource.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  },\n  {\n    \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n    \"value\": {\n      \"autoMonitoring\": true\n    },\n    \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\",\n    \"scope\": \"HOST-D3A3C5A146830A79\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -29367520,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"minim\",\n          \"message\": \"laboris Lorem exercitation\",\n          \"path\": \"d\"\n        },\n        {\n          \"parameterLocation\": \"PAYLOAD_BODY\",\n          \"location\": \"Lorem irure quis aliqua\",\n          \"message\": \"aute ullamco deserunt occaecat\",\n          \"path\": \"aliqua aute\"\n        }\n      ],\n      \"message\": \"veniam voluptate mollit consequat\",\n      \"code\": -6772625\n    }\n  },\n  {\n    \"invalidValue\": {\n      \"autoMonitoring\": true\n    },\n    \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"code\": -44494228,\n    \"error\": {\n      \"constraintViolations\": [\n        {\n          \"parameterLocation\": \"PATH\",\n          \"location\": \"veniam Excepteur dolore dolor\",\n          \"message\": \"commodo labore do\",\n          \"path\": \"consectetur Ut aliqua ad ut\"\n        },\n        {\n          \"parameterLocation\": \"QUERY\",\n          \"location\": \"nostrud officia ad\",\n          \"message\": \"sunt dolore\",\n          \"path\": \"ut voluptate\"\n        }\n      ],\n      \"message\": \"sed sit ad\",\n      \"code\": -4780061\n    }\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "schemas",
					"item": [
						{
							"name": "Lists available settings schemas | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"items\": [\n    {\n      \"latestSchemaVersion\": \"1.4.2\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"displayName\": \"Built-in container monitoring rules\"\n    },\n    {\n      \"latestSchemaVersion\": \"1.4.2\",\n      \"schemaId\": \"builtin:container.built-in-monitoring-rule\",\n      \"displayName\": \"Built-in container monitoring rules\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Gets parameters of the specified settings schema | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=laborum",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas",
										":schemaId"
									],
									"query": [
										{
											"key": "schemaVersion",
											"value": "laborum",
											"description": "The version of the required schema. \n\n If not set, the most recent version is returned."
										}
									],
									"variable": [
										{
											"key": "schemaId",
											"value": "laborum",
											"description": "(Required) The ID of the required schema."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=laborum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"query": [
												{
													"key": "schemaVersion",
													"value": "laborum"
												}
											],
											"variable": [
												{
													"key": "schemaId",
													"value": "laborum",
													"description": "(Required) The ID of the required schema."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "null"
								},
								{
									"name": "Failed. The specified schema doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=laborum",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"query": [
												{
													"key": "schemaVersion",
													"value": "laborum"
												}
											],
											"variable": [
												{
													"key": "schemaId",
													"value": "laborum",
													"description": "(Required) The ID of the required schema."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "synthetic",
			"item": [
				{
					"name": "locations",
					"item": [
						{
							"name": "{location Id}",
							"item": [
								{
									"name": "Gets properties of the specified cluster location",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "laborum",
													"description": "(Required) The Dynatrace entity ID of the required cluster location."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains parameters of the synthetic cluster location.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId",
															"value": "laborum",
															"description": "(Required) The Dynatrace entity ID of the required cluster location."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n  \"entityId\": \"sint Lorem deserunt minim\",\n  \"latitude\": 13978213.149212807,\n  \"longitude\": 90438547.18704295,\n  \"name\": \"non magna eiu\",\n  \"type\": \"PRIVATE\",\n  \"countryCode\": \"et commodo quis\",\n  \"regionCode\": \"veniam ipsum\",\n  \"city\": \"magna\",\n  \"status\": \"DISABLED\"\n}"
										}
									]
								},
								{
									"name": "Updates the specified private synthetic cluster location",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityId\": \"cupidatat consequat\",\n  \"latitude\": -7963652.83410348,\n  \"longitude\": 5569184.813322142,\n  \"name\": \"ipsum officia dolor\",\n  \"nodes\": [\n    \"proident do nostrud sunt\",\n    \"et ad\"\n  ],\n  \"type\": \"PRIVATE\",\n  \"countryCode\": \"reprehenderit nostrud magna qui exercitation\",\n  \"regionCode\": \"incididunt aute est\",\n  \"city\": \"aliqua exercit\",\n  \"status\": \"ENABLED\",\n  \"availabilityLocationOutage\": false,\n  \"availabilityNodeOutage\": true,\n  \"locationNodeOutageDelayInMinutes\": 1,\n  \"availabilityNotificationsEnabled\": false,\n  \"autoUpdateChromium\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "laborum",
													"description": "(Required) The Dynatrace entity ID of the private synthetic cluster location to be updated."
												}
											]
										}
									},
									"response": [
										{
											"name": "default response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"entityId\": \"cupidatat consequat\",\n  \"latitude\": -7963652.83410348,\n  \"longitude\": 5569184.813322142,\n  \"name\": \"ipsum officia dolor\",\n  \"nodes\": [\n    \"proident do nostrud sunt\",\n    \"et ad\"\n  ],\n  \"type\": \"PRIVATE\",\n  \"countryCode\": \"reprehenderit nostrud magna qui exercitation\",\n  \"regionCode\": \"incididunt aute est\",\n  \"city\": \"aliqua exercit\",\n  \"status\": \"ENABLED\",\n  \"availabilityLocationOutage\": false,\n  \"availabilityNodeOutage\": true,\n  \"locationNodeOutageDelayInMinutes\": 1,\n  \"availabilityNotificationsEnabled\": false,\n  \"autoUpdateChromium\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId",
															"value": "laborum",
															"description": "(Required) The Dynatrace entity ID of the private synthetic cluster location to be updated."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								},
								{
									"name": "Deletes the specified private synthetic cluster location",
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "Authorization",
													"type": "string"
												},
												{
													"key": "value",
													"value": "Api-Token {{DT_TOKEN}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json; charset=utf-8"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "laborum",
													"description": "(Required) The Dynatrace entity ID of the private synthetic cluster location to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "default response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "Api-Token {{DT_TOKEN}}"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId",
															"value": "laborum",
															"description": "(Required) The Dynatrace entity ID of the private synthetic cluster location to be deleted."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								}
							]
						},
						{
							"name": "Lists all cluster private synthetic locations",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"locations\": [\n    {\n      \"name\": \"Gdansk\",\n      \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n      \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n      \"type\": \"PUBLIC\",\n      \"cloudPlatform\": \"AMAZON_EC2\",\n      \"ips\": [\n        \"134.189.153.97\",\n        \"134.189.153.98\"\n      ],\n      \"stage\": \"GA\",\n      \"status\": \"ENABLED\",\n      \"capabilities\": [\n        \"BROWSER\",\n        \"HTTP\"\n      ]\n    },\n    {\n      \"name\": \"My private location\",\n      \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n      \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n      \"type\": \"PRIVATE\",\n      \"status\": \"ENABLED\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Creates a new private synthetic cluster location",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityId\": \"eu consectetur nulla occaec\",\n  \"latitude\": 52215920.98052591,\n  \"longitude\": -47249179.143386535,\n  \"name\": \"culpa anim\",\n  \"nodes\": [\n    \"et exercitation dolor\",\n    \"cupidatat dolore exercitation\"\n  ],\n  \"type\": \"CLUSTER\",\n  \"countryCode\": \"in exercitation ipsum reprehenderit\",\n  \"regionCode\": \"esse enim do nisi\",\n  \"city\": \"ut anim\",\n  \"status\": \"DISABLED\",\n  \"availabilityLocationOutage\": false,\n  \"availabilityNodeOutage\": true,\n  \"locationNodeOutageDelayInMinutes\": 4,\n  \"availabilityNotificationsEnabled\": false,\n  \"autoUpdateChromium\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityId\": \"cupidatat consequat\",\n  \"latitude\": -7963652.83410348,\n  \"longitude\": 5569184.813322142,\n  \"name\": \"ipsum officia dolor\",\n  \"nodes\": [\n    \"proident do nostrud sunt\",\n    \"et ad\"\n  ],\n  \"type\": \"PRIVATE\",\n  \"countryCode\": \"reprehenderit nostrud magna qui exercitation\",\n  \"regionCode\": \"incididunt aute est\",\n  \"city\": \"aliqua exercit\",\n  \"status\": \"ENABLED\",\n  \"availabilityLocationOutage\": false,\n  \"availabilityNodeOutage\": true,\n  \"locationNodeOutageDelayInMinutes\": 1,\n  \"availabilityNotificationsEnabled\": false,\n  \"autoUpdateChromium\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"entityId\": \"veniam nisi aliquip tempor\",\n  \"geoLocationId\": \"dolor ut laborum\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "nodes",
					"item": [
						{
							"name": "Lists all synthetic cluster nodes | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes"
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"nodes\": [\n    {\n      \"activeGateVersion\": \"dolore aliqua et minim\",\n      \"autoUpdateEnabled\": true,\n      \"browserMonitorsEnabled\": true,\n      \"entityId\": \"sint\",\n      \"healthCheckStatus\": \"est ut exercitation culpa velit\",\n      \"hostname\": \"laboris commodo\",\n      \"ips\": [\n        \"proident dolor nisi consectetur Duis\",\n        \"velit labore minim laborum\"\n      ],\n      \"oneAgentRoutingEnabled \": true,\n      \"operatingSystem\": \"fugiat aliqua proident dolor\",\n      \"playerVersion\": \"commodo adipisicing Lorem sint\",\n      \"status\": \"p\",\n      \"version\": \"laborum ex sit\"\n    },\n    {\n      \"activeGateVersion\": \"in ut ut et commodo\",\n      \"autoUpdateEnabled\": false,\n      \"browserMonitorsEnabled\": false,\n      \"entityId\": \"magna ut\",\n      \"healthCheckStatus\": \"eiusmod\",\n      \"hostname\": \"dolore elit velit\",\n      \"ips\": [\n        \"qui aliquip labo\",\n        \"et\"\n      ],\n      \"oneAgentRoutingEnabled \": true,\n      \"operatingSystem\": \"Lorem quis\",\n      \"playerVersion\": \"laboris ut minim commodo veniam\",\n      \"status\": \"ipsum Duis sint Ut Excepteur\",\n      \"version\": \"qu\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Lists properties of the specified synthetic cluster node | maturity=EARLY_ADOPTER",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "Api-Token {{DT_TOKEN}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json; charset=utf-8"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes",
										":nodeId"
									],
									"variable": [
										{
											"key": "nodeId",
											"value": "laborum",
											"description": "(Required) The ID of the required synthetic cluster node."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "Api-Token {{DT_TOKEN}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId",
													"value": "laborum",
													"description": "(Required) The ID of the required synthetic cluster node."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n  \"activeGateVersion\": \"tempor id mollit\",\n  \"autoUpdateEnabled\": false,\n  \"browserMonitorsEnabled\": true,\n  \"browserType\": \"nisi sed\",\n  \"browserVersion\": \"est aute fugiat\",\n  \"entityId\": \"nostrud esse tempor Excepteur mini\",\n  \"healthCheckStatus\": \"sit culpa non\",\n  \"hostname\": \"proident\",\n  \"ips\": [\n    \"nostrud consequa\",\n    \"do\"\n  ],\n  \"oneAgentRoutingEnabled \": false,\n  \"operatingSystem\": \"consect\",\n  \"playerVersion\": \"occaecat e\",\n  \"status\": \"adipisicing enim\",\n  \"version\": \"cillum ea Ut anim\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Lists all available versions of ActiveGate installer",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						},
						{
							"key": "value",
							"value": "Api-Token {{DT_TOKEN}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/deployment/installer/gateway/versions/:osType",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"deployment",
						"installer",
						"gateway",
						"versions",
						":osType"
					],
					"variable": [
						{
							"key": "osType",
							"value": "windows",
							"description": "(Required) The operating system of the installer."
						}
					]
				}
			},
			"response": [
				{
					"name": "Success. The payload contains the available versions.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "Api-Token {{DT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deployment/installer/gateway/versions/:osType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deployment",
								"installer",
								"gateway",
								"versions",
								":osType"
							],
							"variable": [
								{
									"key": "osType",
									"value": "windows",
									"description": "(Required) The operating system of the installer."
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"availableVersions\": [\n    \"nostrud aliqua eu dolore irure\",\n    \"dolore nostrud in sed\"\n  ]\n}"
				},
				{
					"name": "Not found. See the response body for details.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "Api-Token {{DT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deployment/installer/gateway/versions/:osType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deployment",
								"installer",
								"gateway",
								"versions",
								":osType"
							],
							"variable": [
								{
									"key": "osType",
									"value": "windows",
									"description": "(Required) The operating system of the installer."
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": {\n    \"constraintViolations\": [\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"non\",\n        \"message\": \"dolore consectetur ut\",\n        \"path\": \"officia commodo\"\n      },\n      {\n        \"parameterLocation\": \"PAYLOAD_BODY\",\n        \"location\": \"aliquip adipisicing non\",\n        \"message\": \"reprehenderit nisi\",\n        \"path\": \"consequat enim\"\n      }\n    ],\n    \"message\": \"eu proident exercitation amet\",\n    \"code\": 47253610\n  }\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://{{DT_HOST}}/api/cluster/v2",
			"type": "string"
		}
	]
}