{
	"info": {
		"_postman_id": "fa5aa33d-146a-4b0c-a91c-0fb876972b0a",
		"name": "Dynatrace Cluster API v2",
		"description": "Dynatrace Managed exposes cluster-wide functionality via REST endpoints. This interactive documentation also acts as a REST client you can use to interact with Dynatrace Managed clusters. \n\nTo authorize, use the API Token generated in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the response shows the result of your request. The expected response code for a successful request is documented individually per REST endpoint. Additionally the following error response codes can occur in our REST interface:\n\n* 400 - Bad Request: Some request parameters are not correct. See response body for details.\n* 401 - Unauthorized: A valid authorization header is required but is missing.\n* 403 - Forbidden: Execution of request is not allowed, e.g. api-token is invalid.\n* 404 - Not Found: Endpoint does not exist or some entities could not be found.\n* 500 - Internal Server Error: See response body for details.\n* 556 - Upgrade in progress: Operation couldn't be performed during the upgrade.\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "license/consumption",
			"item": [
				{
					"name": "Export license consumption data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/license/consumption?startTs=65453730&endTs=65453730",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"license",
								"consumption"
							],
							"query": [
								{
									"key": "startTs",
									"value": "65453730",
									"description": "Start timestamp (30 days ago by default)"
								},
								{
									"key": "endTs",
									"value": "65453730",
									"description": "End timestamp (2 hours ago by default, values from the last 2 hours are not allowed)"
								}
							]
						},
						"description": "Export license consumption data as a ZIP archive."
					},
					"response": [
						{
							"name": "OK - license consumption data export will start",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption?startTs=65453730&endTs=65453730",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption"
									],
									"query": [
										{
											"key": "startTs",
											"value": "65453730"
										},
										{
											"key": "endTs",
											"value": "65453730"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request. Provided time range is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption?startTs=65453730&endTs=65453730",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption"
									],
									"query": [
										{
											"key": "startTs",
											"value": "65453730"
										},
										{
											"key": "endTs",
											"value": "65453730"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License consumption data is already being exported. Please wait for the first request to finish before requesting another export.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption?startTs=65453730&endTs=65453730",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption"
									],
									"query": [
										{
											"key": "startTs",
											"value": "65453730"
										},
										{
											"key": "endTs",
											"value": "65453730"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption?startTs=65453730&endTs=65453730",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption"
									],
									"query": [
										{
											"key": "startTs",
											"value": "65453730"
										},
										{
											"key": "endTs",
											"value": "65453730"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve license consumption",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/license/consumption/hour?startTs=65453730",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"license",
								"consumption",
								"hour"
							],
							"query": [
								{
									"key": "startTs",
									"value": "65453730",
									"description": "Begin timestamp"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption/hour?startTs=65453730",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption",
										"hour"
									],
									"query": [
										{
											"key": "startTs",
											"value": "65453730"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"clusterUuid\": \"pariatur consequat\",\n \"timeFrameStart\": \"2010-02-11T07:36:24.479Z\",\n \"timeFrameEnd\": \"2011-03-16T22:42:40.912Z\",\n \"environmentBillingEntries\": [\n  {\n   \"environmentUuid\": \"nulla dolore ve\",\n   \"visits\": -46313468,\n   \"mobileSessions\": 97684268,\n   \"totalRUMUserPropertiesUsed\": -22398555,\n   \"newProblems\": 25467280,\n   \"hostUsages\": [\n    {\n     \"osiId\": -81074206,\n     \"hostName\": \"pariatur in\",\n     \"hostCategory\": \"et eu\",\n     \"agentUsages\": [\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"infrastructureOnly\": false,\n     \"paas\": false,\n     \"passMemoryLimit\": 69138014,\n     \"vendorTypeId\": 63784511,\n     \"hostMemoryBytes\": 55977006,\n     \"premiumLogAnalytics\": false,\n     \"hasContainers\": true\n    },\n    {\n     \"osiId\": 61608814,\n     \"hostName\": \"adipisicing nulla Excepteur i\",\n     \"hostCategory\": \"aliqua in elit sunt\",\n     \"agentUsages\": [\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"infrastructureOnly\": true,\n     \"paas\": true,\n     \"passMemoryLimit\": -24235915,\n     \"vendorTypeId\": 98297494,\n     \"hostMemoryBytes\": -85411231,\n     \"premiumLogAnalytics\": false,\n     \"hasContainers\": false\n    }\n   ],\n   \"downloads\": [\n    {\n     \"type\": \"non esse do occaecat\",\n     \"downloadCount\": 68727807,\n     \"version\": \"aliquip\",\n     \"firstDownloadTime\": \"1983-11-28T11:34:01.041Z\"\n    },\n    {\n     \"type\": \"ipsum minim\",\n     \"downloadCount\": -37635311,\n     \"version\": \"sunt est\",\n     \"firstDownloadTime\": \"2008-07-18T23:40:40.810Z\"\n    }\n   ],\n   \"syntheticUsages\": [\n    {\n     \"monitorDefinitionId\": \"aute enim occaecat cillum deserunt\",\n     \"monitorDescription\": \"exercitation commodo nisi ad\",\n     \"monitorTypeId\": -13867019,\n     \"successCount\": -14926344,\n     \"failureCount\": -6329283,\n     \"syntheticActionCount\": 47622022,\n     \"performedSyntheticActions\": -62757836\n    },\n    {\n     \"monitorDefinitionId\": \"esse\",\n     \"monitorDescription\": \"dolor ullamco sunt culpa\",\n     \"monitorTypeId\": 42769348,\n     \"successCount\": -91094757,\n     \"failureCount\": 85660363,\n     \"syntheticActionCount\": -32096299,\n     \"performedSyntheticActions\": 67530126\n    }\n   ],\n   \"syntheticBillingUsage\": [\n    {\n     \"monitorTypeId\": 18570153,\n     \"testId\": 78390765,\n     \"publicExecutions\": -72257311,\n     \"privateExecutions\": -49981236\n    },\n    {\n     \"monitorTypeId\": 20633523,\n     \"testId\": 34793660,\n     \"publicExecutions\": -41371688,\n     \"privateExecutions\": 81049384\n    }\n   ],\n   \"customMetrics\": [\n    {\n     \"source\": \"incididunt qui\",\n     \"total\": -13140734\n    },\n    {\n     \"source\": \"dolore elit velit\",\n     \"total\": -14564987\n    }\n   ],\n   \"davisDataUnits\": [\n    {\n     \"pool\": \"fugiat ex\",\n     \"total\": 41738161.64223951\n    },\n    {\n     \"pool\": \"reprehenderit sint enim qui ad\",\n     \"total\": -69029656.42683485\n    }\n   ],\n   \"trial\": true,\n   \"internalUse\": false,\n   \"highAvailabilityCluster\": true,\n   \"logStorageUsageBytes\": 12945147,\n   \"logUploadVolumeBytes\": -71482541,\n   \"sessionReplays\": 80087016,\n   \"mobileSessionReplays\": -52114023\n  },\n  {\n   \"environmentUuid\": \"adipisicing exercitation sunt\",\n   \"visits\": -97798544,\n   \"mobileSessions\": -33645231,\n   \"totalRUMUserPropertiesUsed\": 41691425,\n   \"newProblems\": 8964666,\n   \"hostUsages\": [\n    {\n     \"osiId\": 19300156,\n     \"hostName\": \"cupidatat deserunt\",\n     \"hostCategory\": \"in nostrud id\",\n     \"agentUsages\": [\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"infrastructureOnly\": true,\n     \"paas\": false,\n     \"passMemoryLimit\": -24067731,\n     \"vendorTypeId\": -86875202,\n     \"hostMemoryBytes\": -36625846,\n     \"premiumLogAnalytics\": true,\n     \"hasContainers\": true\n    },\n    {\n     \"osiId\": -45344688,\n     \"hostName\": \"mollit m\",\n     \"hostCategory\": \"esse laboris ex\",\n     \"agentUsages\": [\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"infrastructureOnly\": false,\n     \"paas\": false,\n     \"passMemoryLimit\": 32761701,\n     \"vendorTypeId\": 87032159,\n     \"hostMemoryBytes\": -33148206,\n     \"premiumLogAnalytics\": true,\n     \"hasContainers\": false\n    }\n   ],\n   \"downloads\": [\n    {\n     \"type\": \"proident\",\n     \"downloadCount\": -56752527,\n     \"version\": \"aute consequat veniam\",\n     \"firstDownloadTime\": \"1975-12-27T18:49:26.098Z\"\n    },\n    {\n     \"type\": \"velit nulla et aliquip\",\n     \"downloadCount\": 43149998,\n     \"version\": \"ullamco sint\",\n     \"firstDownloadTime\": \"1946-07-31T07:04:21.623Z\"\n    }\n   ],\n   \"syntheticUsages\": [\n    {\n     \"monitorDefinitionId\": \"aliquip culpa amet ipsum\",\n     \"monitorDescription\": \"mollit ipsum eu sint in\",\n     \"monitorTypeId\": 19032916,\n     \"successCount\": -93075839,\n     \"failureCount\": 50901683,\n     \"syntheticActionCount\": -3518869,\n     \"performedSyntheticActions\": 50437313\n    },\n    {\n     \"monitorDefinitionId\": \"officia ipsum enim Duis ex\",\n     \"monitorDescription\": \"Ut minim\",\n     \"monitorTypeId\": -1784691,\n     \"successCount\": 17951405,\n     \"failureCount\": 42543533,\n     \"syntheticActionCount\": -27895844,\n     \"performedSyntheticActions\": -11880408\n    }\n   ],\n   \"syntheticBillingUsage\": [\n    {\n     \"monitorTypeId\": 78732111,\n     \"testId\": 29681978,\n     \"publicExecutions\": 57379854,\n     \"privateExecutions\": -13599537\n    },\n    {\n     \"monitorTypeId\": -54204832,\n     \"testId\": 11732437,\n     \"publicExecutions\": -76748742,\n     \"privateExecutions\": -91206337\n    }\n   ],\n   \"customMetrics\": [\n    {\n     \"source\": \"laborum laboris fugiat\",\n     \"total\": -54022955\n    },\n    {\n     \"source\": \"ipsum Duis sit cillum deserunt\",\n     \"total\": 65626435\n    }\n   ],\n   \"davisDataUnits\": [\n    {\n     \"pool\": \"consequat officia cillum\",\n     \"total\": 66290028.7799553\n    },\n    {\n     \"pool\": \"magna officia aute aliqua\",\n     \"total\": 8723469.414836943\n    }\n   ],\n   \"trial\": true,\n   \"internalUse\": false,\n   \"highAvailabilityCluster\": false,\n   \"logStorageUsageBytes\": -12772962,\n   \"logUploadVolumeBytes\": -83927718,\n   \"sessionReplays\": -1508273,\n   \"mobileSessionReplays\": -74931984\n  }\n ]\n}"
						},
						{
							"name": "Bad request. Provided timestamp is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption/hour?startTs=65453730",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption",
										"hour"
									],
									"query": [
										{
											"key": "startTs",
											"value": "65453730"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption/hour?startTs=65453730",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption",
										"hour"
									],
									"query": [
										{
											"key": "startTs",
											"value": "65453730"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "environments",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the properties of the specified environment.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/environments/:id?includeConsumptionInfo=true&includeStorageInfo=true&includeUncachedConsumptionInfo=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":id"
									],
									"query": [
										{
											"key": "includeConsumptionInfo",
											"value": "true",
											"description": "If true, consumption information (limits, usage) is returned for this environment.\n\nReturned usage is typically up to 1 hour old. To obtain fresher data, you can use **includeUncachedConsumptionInfo** parameter instead."
										},
										{
											"key": "includeStorageInfo",
											"value": "true",
											"description": "If true, storage information (limits, usage) is returned for this environment."
										},
										{
											"key": "includeUncachedConsumptionInfo",
											"value": "true",
											"description": "If true, uncached consumption information (limits, usage) is returned for this environment.\n\nUp to date consumption will be calculated. If both this parameter and **includeConsumptionInfo** are set, **includeUncachedConsumptionInfo** will take priority."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "ullamco nostrud anim",
											"description": "(Required) The ID of the environment."
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/environments/:id?includeConsumptionInfo=true&includeStorageInfo=true&includeUncachedConsumptionInfo=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"query": [
												{
													"key": "includeConsumptionInfo",
													"value": "true"
												},
												{
													"key": "includeStorageInfo",
													"value": "true"
												},
												{
													"key": "includeUncachedConsumptionInfo",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"example environment\",\n \"state\": \"ENABLED\",\n \"tags\": [\n  \"tag1\",\n  \"tag2\"\n ],\n \"trial\": false\n}"
								}
							]
						},
						{
							"name": "Updates an existing environment or creates a new one.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/environments/:id?createToken=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":id"
									],
									"query": [
										{
											"key": "createToken",
											"value": "false",
											"description": "If true, a token management token with the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement' (for usage with token API v1) is created when creating a new environment. This token is then returned in the response body. It can be used within the newly created environment to create other tokens for configuring this environment."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "ullamco nostrud anim",
											"description": "(Required) The ID of the environment to update.\n\n If you set the ID in the body as well, it must match this ID."
										}
									]
								},
								"description": "If the environment with the specified ID does not exist, a new environment will be created."
							},
							"response": [
								{
									"name": "Success. The new environment has been created. The response body contains the ID, the name and also a token management token if 'createToken' is 'true'.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id?createToken=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"query": [
												{
													"key": "createToken",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"proident dolore deserunt ullamco\",\n \"name\": \"pariatur laborum\",\n \"description\": \"est mollit\",\n \"tokenManagementToken\": \"eiusmod qui ullamco\"\n}"
								},
								{
									"name": "Success. The environment has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id?createToken=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"query": [
												{
													"key": "createToken",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id?createToken=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"query": [
												{
													"key": "createToken",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes the specified environment. An environment must be disabled before it can be deleted.",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/environments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "ullamco nostrud anim",
											"description": "(Required) The ID of the environment to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Deleted. Response does not have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/environments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. For example, if an environment is not disabled.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/environments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creates a new tenant management token for an environment.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Token Management\",\n    \"expiresIn\": {\n        \"value\": 3600,\n        \"unit\": \"SECONDS\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/environments/:id/tokenManagementToken",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":id",
										"tokenManagementToken"
									],
									"variable": [
										{
											"key": "id",
											"value": "ullamco nostrud anim",
											"description": "(Required) The ID of the environment where the token is valid."
										}
									]
								},
								"description": "The newly created token is owned by the same user who owns the token used for authentication of creation call. \nIt has the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement' (for usage with token API v1)."
							},
							"response": [
								{
									"name": "Success. The token has been created. The response body contains the token itself",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Token Management\",\n    \"expiresIn\": {\n        \"value\": 3600,\n        \"unit\": \"SECONDS\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id/tokenManagementToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id",
												"tokenManagementToken"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "ullamco nostrud anim",
											"description": "Token Id"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"token\": \"abcdefjhij1234567890\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Token Management\",\n    \"expiresIn\": {\n        \"value\": 3600,\n        \"unit\": \"SECONDS\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id/tokenManagementToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id",
												"tokenManagementToken"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all existing environments.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/environments?nextPageKey=ullamco nostrud anim&pageSize=65453730&sort=ullamco nostrud anim&filter=ullamco nostrud anim&includeConsumptionInfo=true&includeStorageInfo=true&includeUncachedConsumptionInfo=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "ullamco nostrud anim",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "65453730",
									"description": "The amount of environments in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
								},
								{
									"key": "sort",
									"value": "ullamco nostrud anim",
									"description": "The sort order. Possible sorts orders are:\n * 'name' (without quotes): Sort by name ascending.\n * '-name' (without quotes): Sort by name descending.\n * 'creationDate' (without quotes): Sort by creation date ascending.\n * '-creationDate' (without quotes): Sort by name descending.\n"
								},
								{
									"key": "filter",
									"value": "ullamco nostrud anim",
									"description": "Specifies the filter of the query. \n\nYou can set one or several of the following criteria:\n* Name: `name(string)`. The name can be either a substring or the full name of an environment. Case-insensitive.\n* Trial: `trial(true)` or `trial(false)`. Only includes trial environments if true is specified or only non-trial environments if false is specified.\n* State: `state(ENABLED)` or `state(DISABLED)`.\n* Tag: `tag(string)`. To filter by multiple tags by applying OR logic use `tag(string1,string2)`. To filter by multiple tags by applying AND logic use `tag(string1),tag(string2)`.\nTo set several criteria, separate them with a comma (`,`). Only results, matching **all** criteria, are included into response.\n"
								},
								{
									"key": "includeConsumptionInfo",
									"value": "true",
									"description": "If true, consumption information (limits, usage) is returned for each environment.\n\nReturned usage is typically up to 1 hour old. To obtain fresher data, you can use **includeUncachedConsumptionInfo** parameter instead."
								},
								{
									"key": "includeStorageInfo",
									"value": "true",
									"description": "If true, storage information (limits, usage) is returned for each environment."
								},
								{
									"key": "includeUncachedConsumptionInfo",
									"value": "true",
									"description": "If true, uncached consumption information (limits, usage) is returned for each environment.\n\nUp to date consumption will be calculated. Calculation may be time consuming, so it's recommended to use **includeConsumptionInfo** parameter instead.\n\nIf both this parameter and **includeConsumptionInfo** are set, **includeUncachedConsumptionInfo** will take priority."
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/environments?nextPageKey=ullamco nostrud anim&pageSize=65453730&sort=ullamco nostrud anim&filter=ullamco nostrud anim&includeConsumptionInfo=true&includeStorageInfo=true&includeUncachedConsumptionInfo=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "pageSize",
											"value": "65453730"
										},
										{
											"key": "sort",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "filter",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "includeConsumptionInfo",
											"value": "true"
										},
										{
											"key": "includeStorageInfo",
											"value": "true"
										},
										{
											"key": "includeUncachedConsumptionInfo",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"environments\": [\n  {\n   \"name\": \"example environment\",\n   \"state\": \"ENABLED\",\n   \"tags\": [\n    \"tag1\",\n    \"tag2\"\n   ],\n   \"trial\": false\n  },\n  {\n   \"name\": \"example environment\",\n   \"state\": \"ENABLED\",\n   \"tags\": [\n    \"tag1\",\n    \"tag2\"\n   ],\n   \"trial\": false\n  }\n ],\n \"totalCount\": 12211846,\n \"pageSize\": 2104165,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						}
					]
				},
				{
					"name": "Creates a new environment.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/environments?createToken=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "createToken",
									"value": "false",
									"description": "If true, a token management token with the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement' (for usage with token API v1) is created when creating a new environment. This token is then returned in the response body. It can be used within the newly created environment to create other tokens for configuring this environment."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success. The environment has been created and started. The response body contains the generated ID of the environment and a token with the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement'. The locatio",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/environments?createToken=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "createToken",
											"value": "false"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"proident dolore deserunt ullamco\",\n \"name\": \"pariatur laborum\",\n \"description\": \"est mollit\",\n \"tokenManagementToken\": \"eiusmod qui ullamco\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/environments?createToken=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "createToken",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "log Monitoring/{environment Id}",
			"item": [
				{
					"name": "Gets the current status of Log Monitoring 2.0",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/logMonitoring/:environmentId/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logMonitoring",
								":environmentId",
								"status"
							],
							"variable": [
								{
									"key": "environmentId",
									"value": "ullamco nostrud anim",
									"description": "(Required) The ID of the environment."
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logMonitoring/:environmentId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logMonitoring",
										":environmentId",
										"status"
									],
									"variable": [
										{
											"key": "environmentId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"enabled\": true\n}"
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logMonitoring/:environmentId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logMonitoring",
										":environmentId",
										"status"
									],
									"variable": [
										{
											"key": "environmentId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Enables Log Monitoring 2.0",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/logMonitoring/:environmentId/enable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logMonitoring",
								":environmentId",
								"enable"
							],
							"variable": [
								{
									"key": "environmentId",
									"value": "ullamco nostrud anim",
									"description": "(Required) The ID of the environment."
								}
							]
						}
					},
					"response": [
						{
							"name": "Enabled. Response does not have a body.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logMonitoring/:environmentId/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logMonitoring",
										":environmentId",
										"enable"
									],
									"variable": [
										{
											"key": "environmentId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed. The requested resource doesn't exist.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logMonitoring/:environmentId/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logMonitoring",
										":environmentId",
										"enable"
									],
									"variable": [
										{
											"key": "environmentId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "remoteaccess/requests",
			"item": [
				{
					"name": "{request Id}",
					"item": [
						{
							"name": "Get access request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "ullamco nostrud anim",
											"description": "(Required) Request id param"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"requestId\": \"veniam Excepteur ut in\",\n \"userId\": \"Excepteur exercitation sint commodo\",\n \"reason\": \"enim aliquip dolor\",\n \"requestedDays\": 43022497,\n \"role\": \"devops-user\",\n \"createdTimestamp\": 58380228,\n \"expirationTimestamp\": 77439584,\n \"state\": \"ACCEPTED\",\n \"stateModifiedByUser\": \"commodo fugiat dolore sunt Excepteur\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Approving remote access request is disabled",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change state of access request",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"state\": \"PENDING\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests",
										":requestId",
										"state"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "ullamco nostrud anim",
											"description": "(Required) Request id param"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"PENDING\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"PENDING\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Approving remote access request is disabled",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"PENDING\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access request not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"PENDING\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access request was found, but it's already expired",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"PENDING\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Operation failed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"PENDING\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get all access requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/remoteaccess/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remoteaccess",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"requestId\": \"incididunt proident in mollit\",\n  \"userId\": \"ea aliquip in veniam\",\n  \"reason\": \"id Ut non in laborum\",\n  \"requestedDays\": 10539003,\n  \"role\": \"devops-user\",\n  \"createdTimestamp\": 75244225,\n  \"expirationTimestamp\": -60212170,\n  \"state\": \"PENDING\",\n  \"stateModifiedByUser\": \"exercitation do in irure\"\n },\n {\n  \"requestId\": \"co\",\n  \"userId\": \"Lorem velit\",\n  \"reason\": \"in officia laborum magna veniam\",\n  \"requestedDays\": -74934517,\n  \"role\": \"devops-admin\",\n  \"createdTimestamp\": -69193374,\n  \"expirationTimestamp\": -53498633,\n  \"state\": \"REJECTED\",\n  \"stateModifiedByUser\": \"eu magna non\"\n }\n]"
						},
						{
							"name": "Approving remote access request is disabled",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Grant remote access permission",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"in proid\",\n    \"reason\": \"tempor occaecat\",\n    \"requestedDays\": 75588667,\n    \"role\": \"devops-admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/remoteaccess/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remoteaccess",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"in proid\",\n    \"reason\": \"tempor occaecat\",\n    \"requestedDays\": 75588667,\n    \"role\": \"devops-admin\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"requestId\": \"veniam Excepteur ut in\",\n \"userId\": \"Excepteur exercitation sint commodo\",\n \"reason\": \"enim aliquip dolor\",\n \"requestedDays\": 43022497,\n \"role\": \"devops-user\",\n \"createdTimestamp\": 58380228,\n \"expirationTimestamp\": 77439584,\n \"state\": \"ACCEPTED\",\n \"stateModifiedByUser\": \"commodo fugiat dolore sunt Excepteur\"\n}"
						},
						{
							"name": "Invalid parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"in proid\",\n    \"reason\": \"tempor occaecat\",\n    \"requestedDays\": 75588667,\n    \"role\": \"devops-admin\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Approving remote access request is disabled",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"in proid\",\n    \"reason\": \"tempor occaecat\",\n    \"requestedDays\": 75588667,\n    \"role\": \"devops-admin\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"in proid\",\n    \"reason\": \"tempor occaecat\",\n    \"requestedDays\": 75588667,\n    \"role\": \"devops-admin\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Mission Control is unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"in proid\",\n    \"reason\": \"tempor occaecat\",\n    \"requestedDays\": 75588667,\n    \"role\": \"devops-admin\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"code": 513,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "cluster Config/user Sessions",
			"item": [
				{
					"name": "Get user sessions configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clusterConfig/userSessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clusterConfig",
								"userSessions"
							]
						}
					},
					"response": [
						{
							"name": "Successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clusterConfig/userSessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusterConfig",
										"userSessions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"automaticLogoutDto\": {\n  \"logoutInactiveUsersEnabled\": true,\n  \"userInactivityTimeout\": 900\n },\n \"concurrentSessionPolicyDto\": {\n  \"adminLimit\": 68727605,\n  \"userLimit\": -27138240\n }\n}"
						}
					]
				},
				{
					"name": "Update user sessions configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"automaticLogoutDto\": {\n        \"logoutInactiveUsersEnabled\": true,\n        \"userInactivityTimeout\": 900\n    },\n    \"concurrentSessionPolicyDto\": {\n        \"adminLimit\": 68727605,\n        \"userLimit\": -27138240\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/clusterConfig/userSessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clusterConfig",
								"userSessions"
							]
						}
					},
					"response": [
						{
							"name": "Successful",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"automaticLogoutDto\": {\n        \"logoutInactiveUsersEnabled\": true,\n        \"userInactivityTimeout\": 900\n    },\n    \"concurrentSessionPolicyDto\": {\n        \"adminLimit\": 68727605,\n        \"userLimit\": -27138240\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/clusterConfig/userSessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusterConfig",
										"userSessions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Wrong parameters",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"automaticLogoutDto\": {\n        \"logoutInactiveUsersEnabled\": true,\n        \"userInactivityTimeout\": 900\n    },\n    \"concurrentSessionPolicyDto\": {\n        \"adminLimit\": 68727605,\n        \"userLimit\": -27138240\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/clusterConfig/userSessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusterConfig",
										"userSessions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Configuration update failed",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"automaticLogoutDto\": {\n        \"logoutInactiveUsersEnabled\": true,\n        \"userInactivityTimeout\": 900\n    },\n    \"concurrentSessionPolicyDto\": {\n        \"adminLimit\": 68727605,\n        \"userLimit\": -27138240\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/clusterConfig/userSessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusterConfig",
										"userSessions"
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "user Sessions",
			"item": [
				{
					"name": "Get user sessions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userSessions?userId=ullamco nostrud anim",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userSessions"
							],
							"query": [
								{
									"key": "userId",
									"value": "ullamco nostrud anim",
									"description": "User ID (optional)"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=ullamco nostrud anim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "ullamco nostrud anim"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"creationTime\": 75995612,\n  \"loginType\": \"SSO_MANAGED\",\n  \"nodeId\": -98419691,\n  \"sessionId\": \"Lorem labore\",\n  \"tenantUuid\": \"deserunt\",\n  \"userId\": \"pariatur ad amet voluptate\",\n  \"lastAccessedTimestamp\": 5750220,\n  \"device\": \"veniam sit adipisicing commodo i\",\n  \"ip\": \"sunt dolore\"\n },\n {\n  \"creationTime\": -83313448,\n  \"loginType\": \"SSO_MANAGED\",\n  \"nodeId\": -30130205,\n  \"sessionId\": \"elit enim ut in eiusmod\",\n  \"tenantUuid\": \"commodo est esse aliquip\",\n  \"userId\": \"ex laboris commodo\",\n  \"lastAccessedTimestamp\": 43497423,\n  \"device\": \"nisi eu dolor ex commodo\",\n  \"ip\": \"minim non in\"\n }\n]"
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=ullamco nostrud anim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "ullamco nostrud anim"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove user sessions for a given user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userSessions?userId=ullamco nostrud anim",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userSessions"
							],
							"query": [
								{
									"key": "userId",
									"value": "ullamco nostrud anim",
									"description": "User ID (mandatory)"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=ullamco nostrud anim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "ullamco nostrud anim"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request. User id must be filled in.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=ullamco nostrud anim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "ullamco nostrud anim"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User sessions not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=ullamco nostrud anim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "ullamco nostrud anim"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=ullamco nostrud anim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "ullamco nostrud anim"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed to invalidate sessions",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=ullamco nostrud anim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "ullamco nostrud anim"
										}
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "active Gates",
			"item": [
				{
					"name": "{ag Id}",
					"item": [
						{
							"name": "auto Update",
							"item": [
								{
									"name": "Gets the configuration of auto-update for the specified ActiveGate",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate"
											],
											"variable": [
												{
													"key": "agId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"setting\": \"INHERITED\",\n \"effectiveSetting\": \"ENABLED\"\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
										}
									]
								},
								{
									"name": "Updates the configuration of auto-update for the specified ActiveGate",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"setting\": \"INHERITED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate"
											],
											"variable": [
												{
													"key": "agId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The auto-update configuration have been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"setting\": \"INHERITED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted auto-update configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "update Jobs",
							"item": [
								{
									"name": "{job Id}",
									"item": [
										{
											"name": "Gets the parameters of the specified update job",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "ullamco nostrud anim",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "ullamco nostrud anim",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"targetVersion\": \"1.190.0.20200301-130000\",\n \"environments\": [\n  \"do quis\",\n  \"Excepteur do\"\n ],\n \"cancelable\": false,\n \"jobId\": \"-3524498778810258605\",\n \"jobState\": \"SUCCEED\",\n \"updateMethod\": \"AUTOMATIC\",\n \"updateType\": \"ACTIVE_GATE\",\n \"agType\": \"ENVIRONMENT\",\n \"startVersion\": \"1.185.0.20200201-120000\",\n \"timestamp\": 1582031917814,\n \"duration\": 3608000,\n \"error\": \"commodo sit deserunt consequat\"\n}"
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified update job",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "ullamco nostrud anim",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "ullamco nostrud anim",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The update-job have been deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists update jobs for the specified ActiveGate",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=ullamco nostrud anim&to=ullamco nostrud anim&startVersionCompareType=EQUAL&startVersion=ullamco nostrud anim&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=ullamco nostrud anim&lastUpdates=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"query": [
												{
													"key": "from",
													"value": "ullamco nostrud anim",
													"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days."
												},
												{
													"key": "to",
													"value": "ullamco nostrud anim",
													"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
												},
												{
													"key": "startVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
												},
												{
													"key": "startVersion",
													"value": "ullamco nostrud anim",
													"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "updateType",
													"value": "ACTIVE_GATE",
													"description": "Filters the resulting set of update-jobs by the update type."
												},
												{
													"key": "targetVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
												},
												{
													"key": "targetVersion",
													"value": "ullamco nostrud anim",
													"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "lastUpdates",
													"value": "false",
													"description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
												}
											],
											"variable": [
												{
													"key": "agId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										},
										"description": "The job can update the ActiveGate to the specified version or the latest available one."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=ullamco nostrud anim&to=ullamco nostrud anim&startVersionCompareType=EQUAL&startVersion=ullamco nostrud anim&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=ullamco nostrud anim&lastUpdates=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "ullamco nostrud anim"
														},
														{
															"key": "to",
															"value": "ullamco nostrud anim"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "ullamco nostrud anim"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "ullamco nostrud anim"
														},
														{
															"key": "lastUpdates",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"agId\": \"0x3efdd092\",\n \"updateJobs\": [\n  {\n   \"targetVersion\": \"1.190.0.20200301-130000\",\n   \"environments\": [\n    \"ex proident aute est ut\",\n    \"dolor esse quis enim\"\n   ],\n   \"cancelable\": false,\n   \"jobId\": \"-3524498778810258605\",\n   \"jobState\": \"SUCCEED\",\n   \"updateMethod\": \"AUTOMATIC\",\n   \"updateType\": \"ACTIVE_GATE\",\n   \"agType\": \"ENVIRONMENT\",\n   \"startVersion\": \"1.185.0.20200201-120000\",\n   \"timestamp\": 1582031917814,\n   \"duration\": 3608000,\n   \"error\": \"aliquip\"\n  },\n  {\n   \"targetVersion\": \"1.190.0.20200301-130000\",\n   \"environments\": [\n    \"labore cillum irure reprehenderit fugiat\",\n    \"nisi tempor aliqua\"\n   ],\n   \"cancelable\": false,\n   \"jobId\": \"-3524498778810258605\",\n   \"jobState\": \"SUCCEED\",\n   \"updateMethod\": \"AUTOMATIC\",\n   \"updateType\": \"ACTIVE_GATE\",\n   \"agType\": \"ENVIRONMENT\",\n   \"startVersion\": \"1.185.0.20200201-120000\",\n   \"timestamp\": 1582031917814,\n   \"duration\": 3608000,\n   \"error\": \"proident aute voluptate ad\"\n  }\n ]\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=ullamco nostrud anim&to=ullamco nostrud anim&startVersionCompareType=EQUAL&startVersion=ullamco nostrud anim&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=ullamco nostrud anim&lastUpdates=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "ullamco nostrud anim"
														},
														{
															"key": "to",
															"value": "ullamco nostrud anim"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "ullamco nostrud anim"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "ullamco nostrud anim"
														},
														{
															"key": "lastUpdates",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
										}
									]
								},
								{
									"name": "Creates a new update job for the specified ActiveGate",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"variable": [
												{
													"key": "agId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The update-job have been created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"targetVersion\": \"1.190.0.20200301-130000\",\n \"environments\": [\n  \"do quis\",\n  \"Excepteur do\"\n ],\n \"cancelable\": false,\n \"jobId\": \"-3524498778810258605\",\n \"jobState\": \"SUCCEED\",\n \"updateMethod\": \"AUTOMATIC\",\n \"updateType\": \"ACTIVE_GATE\",\n \"agType\": \"ENVIRONMENT\",\n \"startVersion\": \"1.185.0.20200201-120000\",\n \"timestamp\": 1582031917814,\n \"duration\": 3608000,\n \"error\": \"commodo sit deserunt consequat\"\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted update-job is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the details of the specified ActiveGate",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/activeGates/:agId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										":agId"
									],
									"variable": [
										{
											"key": "agId",
											"value": "ullamco nostrud anim",
											"description": "(Required) The ID of the required ActiveGate."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"0x3efdd091\",\n \"networkAddresses\": [\n  \"repre\",\n  \"sunt Lorem\"\n ],\n \"loadBalancerAddresses\": [\n  \"sit Ut cupidatat esse\",\n  \"ipsum elit sit\"\n ],\n \"osType\": \"WINDOWS\",\n \"autoUpdateStatus\": \"OUTDATED\",\n \"offlineSince\": 1582031917814,\n \"version\": \"1.185.0.20200201-120000\",\n \"type\": \"ENVIRONMENT\",\n \"hostname\": \"exampleHostname\",\n \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n \"environments\": [\n  \"dolor eu eiusmod\",\n  \"ex\"\n ],\n \"autoUpdateSettings\": {\n  \"setting\": \"INHERITED\",\n  \"effectiveSetting\": \"ENABLED\"\n },\n \"networkZone\": \"exampleNetworkZone\",\n \"group\": \"default\",\n \"modules\": [\n  {\n   \"misconfigured\": true,\n   \"type\": \"KUBERNETES\",\n   \"attributes\": {},\n   \"enabled\": true,\n   \"version\": \"in ullamco dolor\"\n  },\n  {\n   \"misconfigured\": false,\n   \"type\": \"KUBERNETES\",\n   \"attributes\": {},\n   \"enabled\": true,\n   \"version\": \"quis Excepteur \"\n  }\n ],\n \"containerized\": false\n}"
								},
								{
									"name": "Not found. See response body for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "auto Update",
					"item": [
						{
							"name": "{env Id}",
							"item": [
								{
									"name": "Gets the global auto-update configuration of environment ActiveGates.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												":envId"
											],
											"variable": [
												{
													"key": "envId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId"
													],
													"variable": [
														{
															"key": "envId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"globalSetting\": \"ENABLED\",\n \"metadata\": {\n  \"configurationVersions\": [\n   4,\n   2\n  ],\n  \"currentConfigurationVersions\": [\n   \"1.0.4\",\n   \"1.23\"\n  ],\n  \"clusterVersion\": \"1.192.1\"\n }\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId"
													],
													"variable": [
														{
															"key": "envId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
										}
									]
								},
								{
									"name": "Puts the global auto-update configuration of environment ActiveGates.",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												":envId"
											],
											"variable": [
												{
													"key": "envId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId"
													],
													"variable": [
														{
															"key": "envId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId"
													],
													"variable": [
														{
															"key": "envId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/autoUpdate/{envId}` request.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												":envId",
												"validator"
											],
											"variable": [
												{
													"key": "envId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId",
														"validator"
													],
													"variable": [
														{
															"key": "envId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId",
														"validator"
													],
													"variable": [
														{
															"key": "envId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the global auto-update configuration of cluster ActiveGates.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"globalSetting\": \"ENABLED\",\n \"metadata\": {\n  \"configurationVersions\": [\n   4,\n   2\n  ],\n  \"currentConfigurationVersions\": [\n   \"1.0.4\",\n   \"1.23\"\n  ],\n  \"clusterVersion\": \"1.192.1\"\n }\n}"
								}
							]
						},
						{
							"name": "Puts the global auto-update configuration of cluster ActiveGates.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate"
									]
								}
							},
							"response": [
								{
									"name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available ActiveGates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/activeGates?hostname=ullamco nostrud anim&osType=WINDOWS&networkAddress=ullamco nostrud anim&loadBalancerAddress=ullamco nostrud anim&type=ENVIRONMENT&networkZone=ullamco nostrud anim&updateStatus=UPDATE_PENDING&versionCompareType=EQUAL&version=ullamco nostrud anim&autoUpdate=DISABLED&group=ullamco nostrud anim&online=true&enabledModule=BEACON_FORWARDER&enabledModule=EXTENSIONS_V1&disabledModule=BEACON_FORWARDER&disabledModule=EXTENSIONS_V1&containerized=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates"
							],
							"query": [
								{
									"key": "hostname",
									"value": "ullamco nostrud anim",
									"description": "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "osType",
									"value": "WINDOWS",
									"description": "Filters the resulting set of ActiveGates by the OS type of the host it's running on."
								},
								{
									"key": "networkAddress",
									"value": "ullamco nostrud anim",
									"description": "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "loadBalancerAddress",
									"value": "ullamco nostrud anim",
									"description": "Filters the resulting set of ActiveGates by the Load Balancer address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "type",
									"value": "ENVIRONMENT",
									"description": "Filters the resulting set of ActiveGates by the ActiveGate type."
								},
								{
									"key": "networkZone",
									"value": "ullamco nostrud anim",
									"description": "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "updateStatus",
									"value": "UPDATE_PENDING",
									"description": "Filters the resulting set of ActiveGates by the auto-update status."
								},
								{
									"key": "versionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here."
								},
								{
									"key": "version",
									"value": "ullamco nostrud anim",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here."
								},
								{
									"key": "autoUpdate",
									"value": "DISABLED",
									"description": "Filters the resulting set of ActiveGates by the actual state of auto-update."
								},
								{
									"key": "group",
									"value": "ullamco nostrud anim",
									"description": "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "online",
									"value": "true",
									"description": "Filters the resulting set of ActiveGates by the communication status."
								},
								{
									"key": "enabledModule",
									"value": "BEACON_FORWARDER",
									"description": "Filters the resulting set of ActiveGates by the enabled modules."
								},
								{
									"key": "enabledModule",
									"value": "EXTENSIONS_V1",
									"description": "Filters the resulting set of ActiveGates by the enabled modules."
								},
								{
									"key": "disabledModule",
									"value": "BEACON_FORWARDER",
									"description": "Filters the resulting set of ActiveGates by the disabled modules."
								},
								{
									"key": "disabledModule",
									"value": "EXTENSIONS_V1",
									"description": "Filters the resulting set of ActiveGates by the disabled modules."
								},
								{
									"key": "containerized",
									"value": "true",
									"description": "Filters the resulting set of ActiveGates to those which are running in container (`true`) or not (`false`)."
								}
							]
						},
						"description": "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=ullamco nostrud anim&osType=WINDOWS&networkAddress=ullamco nostrud anim&loadBalancerAddress=ullamco nostrud anim&type=ENVIRONMENT&networkZone=ullamco nostrud anim&updateStatus=UPDATE_PENDING&versionCompareType=EQUAL&version=ullamco nostrud anim&autoUpdate=DISABLED&group=ullamco nostrud anim&online=true&enabledModule=VMWARE&enabledModule=METRIC_API&disabledModule=VMWARE&disabledModule=METRIC_API&containerized=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "osType",
											"value": "WINDOWS"
										},
										{
											"key": "networkAddress",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "loadBalancerAddress",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "type",
											"value": "ENVIRONMENT"
										},
										{
											"key": "networkZone",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "updateStatus",
											"value": "UPDATE_PENDING"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "autoUpdate",
											"value": "DISABLED"
										},
										{
											"key": "group",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "online",
											"value": "true"
										},
										{
											"key": "enabledModule",
											"value": "VMWARE"
										},
										{
											"key": "enabledModule",
											"value": "METRIC_API"
										},
										{
											"key": "disabledModule",
											"value": "VMWARE"
										},
										{
											"key": "disabledModule",
											"value": "METRIC_API"
										},
										{
											"key": "containerized",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"activeGates\": [\n  {\n   \"id\": \"0x3efdd091\",\n   \"networkAddresses\": [\n    \"dolore est minim\",\n    \"officia minim reprehenderit ut\"\n   ],\n   \"loadBalancerAddresses\": [\n    \"Lorem occaecat amet\",\n    \"ut anim incididunt\"\n   ],\n   \"osType\": \"WINDOWS\",\n   \"autoUpdateStatus\": \"OUTDATED\",\n   \"offlineSince\": 1582031917814,\n   \"version\": \"1.185.0.20200201-120000\",\n   \"type\": \"ENVIRONMENT\",\n   \"hostname\": \"exampleHostname\",\n   \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n   \"environments\": [\n    \"laborum laboris mollit\",\n    \"commodo ipsum incididunt pariatur\"\n   ],\n   \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n   },\n   \"networkZone\": \"exampleNetworkZone\",\n   \"group\": \"default\",\n   \"modules\": [\n    {\n     \"misconfigured\": true,\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {},\n     \"enabled\": false,\n     \"version\": \"consequat fugiat\"\n    },\n    {\n     \"misconfigured\": false,\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {},\n     \"enabled\": false,\n     \"version\": \"labore quis ipsum culpa dolor\"\n    }\n   ],\n   \"containerized\": true\n  },\n  {\n   \"id\": \"0x3efdd091\",\n   \"networkAddresses\": [\n    \"anim non pariatur ea\",\n    \"velit culpa\"\n   ],\n   \"loadBalancerAddresses\": [\n    \"sit\",\n    \"aliqua fugiat voluptate officia\"\n   ],\n   \"osType\": \"WINDOWS\",\n   \"autoUpdateStatus\": \"OUTDATED\",\n   \"offlineSince\": 1582031917814,\n   \"version\": \"1.185.0.20200201-120000\",\n   \"type\": \"ENVIRONMENT\",\n   \"hostname\": \"exampleHostname\",\n   \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n   \"environments\": [\n    \"adipisicing Duis\",\n    \"sit aute proident ipsum\"\n   ],\n   \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n   },\n   \"networkZone\": \"exampleNetworkZone\",\n   \"group\": \"default\",\n   \"modules\": [\n    {\n     \"misconfigured\": false,\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {},\n     \"enabled\": true,\n     \"version\": \"labore Excepteur elit\"\n    },\n    {\n     \"misconfigured\": false,\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {},\n     \"enabled\": false,\n     \"version\": \"aute est tem\"\n    }\n   ],\n   \"containerized\": false\n  }\n ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=ullamco nostrud anim&osType=WINDOWS&networkAddress=ullamco nostrud anim&loadBalancerAddress=ullamco nostrud anim&type=ENVIRONMENT&networkZone=ullamco nostrud anim&updateStatus=UPDATE_PENDING&versionCompareType=EQUAL&version=ullamco nostrud anim&autoUpdate=DISABLED&group=ullamco nostrud anim&online=true&enabledModule=VMWARE&enabledModule=METRIC_API&disabledModule=VMWARE&disabledModule=METRIC_API&containerized=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "osType",
											"value": "WINDOWS"
										},
										{
											"key": "networkAddress",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "loadBalancerAddress",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "type",
											"value": "ENVIRONMENT"
										},
										{
											"key": "networkZone",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "updateStatus",
											"value": "UPDATE_PENDING"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "autoUpdate",
											"value": "DISABLED"
										},
										{
											"key": "group",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "online",
											"value": "true"
										},
										{
											"key": "enabledModule",
											"value": "VMWARE"
										},
										{
											"key": "enabledModule",
											"value": "METRIC_API"
										},
										{
											"key": "disabledModule",
											"value": "VMWARE"
										},
										{
											"key": "disabledModule",
											"value": "METRIC_API"
										},
										{
											"key": "containerized",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
						}
					]
				},
				{
					"name": "List ActiveGates with update jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/activeGates/updateJobs?from=ullamco nostrud anim&to=ullamco nostrud anim&startVersionCompareType=EQUAL&startVersion=ullamco nostrud anim&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=ullamco nostrud anim&lastUpdates=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates",
								"updateJobs"
							],
							"query": [
								{
									"key": "from",
									"value": "ullamco nostrud anim",
									"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days."
								},
								{
									"key": "to",
									"value": "ullamco nostrud anim",
									"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "startVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
								},
								{
									"key": "startVersion",
									"value": "ullamco nostrud anim",
									"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "updateType",
									"value": "ACTIVE_GATE",
									"description": "Filters the resulting set of update-jobs by the update type."
								},
								{
									"key": "targetVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
								},
								{
									"key": "targetVersion",
									"value": "ullamco nostrud anim",
									"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "lastUpdates",
									"value": "false",
									"description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
								}
							]
						},
						"description": "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=ullamco nostrud anim&to=ullamco nostrud anim&startVersionCompareType=EQUAL&startVersion=ullamco nostrud anim&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=ullamco nostrud anim&lastUpdates=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "to",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "lastUpdates",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"allUpdateJobs\": [\n  {\n   \"agId\": \"0x3efdd092\",\n   \"updateJobs\": [\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"environments\": [\n      \"Excepteur\",\n      \"proident laboris\"\n     ],\n     \"cancelable\": false,\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"agType\": \"ENVIRONMENT\",\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"timestamp\": 1582031917814,\n     \"duration\": 3608000,\n     \"error\": \"aute\"\n    },\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"environments\": [\n      \"est\",\n      \"laborum aliquip quis reprehenderit\"\n     ],\n     \"cancelable\": false,\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"agType\": \"ENVIRONMENT\",\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"timestamp\": 1582031917814,\n     \"duration\": 3608000,\n     \"error\": \"aute elit enim qui\"\n    }\n   ]\n  },\n  {\n   \"agId\": \"0x3efdd092\",\n   \"updateJobs\": [\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"environments\": [\n      \"aliqua aute enim\",\n      \"enim Excepteur velit non irure\"\n     ],\n     \"cancelable\": false,\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"agType\": \"ENVIRONMENT\",\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"timestamp\": 1582031917814,\n     \"duration\": 3608000,\n     \"error\": \"commodo laborum occaecat\"\n    },\n    {\n     \"targetVersion\": \"1.190.0.20200301-130000\",\n     \"environments\": [\n      \"qui veniam incididunt voluptate\",\n      \"et consequat nulla in culpa\"\n     ],\n     \"cancelable\": false,\n     \"jobId\": \"-3524498778810258605\",\n     \"jobState\": \"SUCCEED\",\n     \"updateMethod\": \"AUTOMATIC\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"agType\": \"ENVIRONMENT\",\n     \"startVersion\": \"1.185.0.20200201-120000\",\n     \"timestamp\": 1582031917814,\n     \"duration\": 3608000,\n     \"error\": \"consequat do Lorem in\"\n    }\n   ]\n  }\n ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=ullamco nostrud anim&to=ullamco nostrud anim&startVersionCompareType=EQUAL&startVersion=ullamco nostrud anim&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=ullamco nostrud anim&lastUpdates=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "to",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "lastUpdates",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "network Zones",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets parameters of the specified network zone | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "ullamco nostrud anim",
											"description": "(Required) The ID of the required network zone."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"numOfConfiguredOneAgents\": 32845187,\n \"numOfOneAgentsFromOtherZones\": 66326018,\n \"numOfConfiguredActiveGates\": -88868399,\n \"alternativeZones\": [\n  \"laborum voluptate veniam\",\n  \"aute in culpa\"\n ],\n \"numOfOneAgentsUsing\": 74906239,\n \"id\": \"dolor \",\n \"description\": \"proident cupidatat\"\n}"
								}
							]
						},
						{
							"name": "Updates an existing network zone or creates a new one | maturity=EARLY_ADOPTER",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alternativeZones\": [\n        \"ad sunt\",\n        \"magna consequat\"\n    ],\n    \"description\": \"consectetur sed minim sunt ipsum\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "ullamco nostrud anim",
											"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
										}
									]
								},
								"description": "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
							},
							"response": [
								{
									"name": "Success. The new network zone has been created. The response body contains the ID of the new network zone.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"ad sunt\",\n        \"magna consequat\"\n    ],\n    \"description\": \"consectetur sed minim sunt ipsum\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"ullamco mollit\",\n \"name\": \"esse ut enim cillum\",\n \"description\": \"ut minim exercitation\"\n}"
								},
								{
									"name": "Success. The network zone has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"ad sunt\",\n        \"magna consequat\"\n    ],\n    \"description\": \"consectetur sed minim sunt ipsum\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"ad sunt\",\n        \"magna consequat\"\n    ],\n    \"description\": \"consectetur sed minim sunt ipsum\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified network zone | maturity=EARLY_ADOPTER",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "ullamco nostrud anim",
											"description": "(Required) The ID of the network zone to be deleted."
										}
									]
								},
								"description": "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives."
							},
							"response": [
								{
									"name": "Deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. See error message in the response body for details.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all existing network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/networkZones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZones"
							]
						}
					},
					"response": [
						{
							"name": "Success.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"networkZones\": [\n  {\n   \"numOfConfiguredOneAgents\": 87568189,\n   \"numOfOneAgentsFromOtherZones\": 75809636,\n   \"numOfConfiguredActiveGates\": 30143516,\n   \"alternativeZones\": [\n    \"minim quis\",\n    \"ullamco quis commodo et ea\"\n   ],\n   \"numOfOneAgentsUsing\": 15147695,\n   \"id\": \"Ut nostrud consectetur\",\n   \"description\": \"qui adipisicing dolo\"\n  },\n  {\n   \"numOfConfiguredOneAgents\": -210341,\n   \"numOfOneAgentsFromOtherZones\": 4220321,\n   \"numOfConfiguredActiveGates\": 89519596,\n   \"alternativeZones\": [\n    \"commodo eu\",\n    \"sed proident nisi\"\n   ],\n   \"numOfOneAgentsUsing\": 40974441,\n   \"id\": \"non Ut dolore in est\",\n   \"description\": \"est labore ipsum deserunt\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "tokens",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Lists token metadata by token ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "ullamco nostrud anim",
											"description": "(Required) The ID of the required token."
										}
									]
								},
								"description": "The token itself is **not** exposed."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"nostrud incididunt\",\n \"name\": \"irure\",\n \"userId\": \"magna Duis quis aliqua dolor\",\n \"revoked\": true,\n \"created\": -47742909,\n \"expires\": 15556578,\n \"lastUse\": -10795055,\n \"scopes\": [\n  \"DiagnosticExport\",\n  \"settings.read\"\n ],\n \"personalAccessToken\": true\n}"
								},
								{
									"name": "Failed. The requested token has not been found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
								}
							]
						},
						{
							"name": "Updates the specified token",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"revoked\": true,\n    \"name\": \"consectetur laboris\",\n    \"scopes\": [\n        \"DiagnosticExport\",\n        \"settings.read\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "ullamco nostrud anim",
											"description": "(Required) The ID of the token to be updated. \n\n You can't update the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The token has been updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"revoked\": false,\n    \"name\": \"dolore id\",\n    \"scopes\": [\n        \"ServiceProviderAPI\",\n        \"EnvironmentTokenManagement\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. You can't update the token you're using for authentication of the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"revoked\": false,\n    \"name\": \"dolore id\",\n    \"scopes\": [\n        \"ServiceProviderAPI\",\n        \"EnvironmentTokenManagement\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
								},
								{
									"name": "Failed. The requested token has not been found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"revoked\": false,\n    \"name\": \"dolore id\",\n    \"scopes\": [\n        \"ServiceProviderAPI\",\n        \"EnvironmentTokenManagement\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified token",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "ullamco nostrud anim",
											"description": "(Required) The ID of the token to be deleted. Can either be the public identifier or the secret.\n\n You can't delete the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. You can't delete the token you're using for authentication of the request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
								},
								{
									"name": "Failed. The requested token has not been found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists available tokens in your environment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tokens?limit=1000&user=ullamco nostrud anim&permissions=DiagnosticExport&permissions=ExternalSyntheticIntegration&from=65453730&to=65453730",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tokens"
							],
							"query": [
								{
									"key": "limit",
									"value": "1000",
									"description": "Limits the maximum number of returned tokens. \n\n If not set the value of `1000` is used. \n\n Maximum value is 1000000."
								},
								{
									"key": "user",
									"value": "ullamco nostrud anim",
									"description": "Filters the resulting set of tokens by user, who owns the token."
								},
								{
									"key": "permissions",
									"value": "DiagnosticExport",
									"description": "Filters the resulting set of tokens by scopes assigned to the token. \n\n You can specify several permissions in the following format: `permissions=scope1&permissions=scope2`. The token must have *all* the specified scopes."
								},
								{
									"key": "permissions",
									"value": "ExternalSyntheticIntegration",
									"description": "Filters the resulting set of tokens by scopes assigned to the token. \n\n You can specify several permissions in the following format: `permissions=scope1&permissions=scope2`. The token must have *all* the specified scopes."
								},
								{
									"key": "from",
									"value": "65453730",
									"description": "Last used after this timestamp (UTC milliseconds)."
								},
								{
									"key": "to",
									"value": "65453730",
									"description": "Last used before this timestamp (UTC milliseconds)."
								}
							]
						},
						"description": "You can narrow down the output by adding parameters. The token has to match *all* the specified parameters. \n\n You can also specify the limit of returned tokens.\n\n **This list may contain tokens which were created automatically** (e.g. InstallerDownload, Mobile, ...) and are not visible on the `Settings` page. Deleting those might have unintended side-effects as they might still be in use."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tokens?limit=1000&user=ullamco nostrud anim&permissions=ServiceProviderAPI&permissions=Nodekeeper&from=65453730&to=65453730",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										},
										{
											"key": "user",
											"value": "ullamco nostrud anim"
										},
										{
											"key": "permissions",
											"value": "ServiceProviderAPI"
										},
										{
											"key": "permissions",
											"value": "Nodekeeper"
										},
										{
											"key": "from",
											"value": "65453730"
										},
										{
											"key": "to",
											"value": "65453730"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"values\": [\n  {\n   \"id\": \"consectetur sit\",\n   \"name\": \"cillum do\",\n   \"description\": \"in eiusmod\"\n  },\n  {\n   \"id\": \"Duis exercitation et\",\n   \"name\": \"est sunt ut\",\n   \"description\": \"anim cupidatat ullamco ex veniam\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Creates a new token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"dolore sint adipisicing cupidatat voluptate\",\n    \"scopes\": [\n        \"UnattendedInstall\"\n    ],\n    \"expiresIn\": {\n        \"value\": -97375185,\n        \"unit\": \"SECONDS\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tokens"
							]
						},
						"description": "The newly created token will be owned by the same user who owns the token used for authentication of the call."
					},
					"response": [
						{
							"name": "Success. The token has been created. The response body contains the token itself.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"dolore sint adipisicing cupidatat voluptate\",\n    \"scopes\": [\n        \"UnattendedInstall\"\n    ],\n    \"expiresIn\": {\n        \"value\": -97375185,\n        \"unit\": \"SECONDS\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "ullamco nostrud anim",
									"description": "Token Id"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"token\": \"abcdefjhij1234567890\"\n}"
						},
						{
							"name": "Failed. The input is invalid. Response body provides details.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"dolore sint adipisicing cupidatat voluptate\",\n    \"scopes\": [\n        \"UnattendedInstall\"\n    ],\n    \"expiresIn\": {\n        \"value\": -97375185,\n        \"unit\": \"SECONDS\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
						}
					]
				},
				{
					"name": "Lists token metadata by token itself",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"abcdefjhij1234567890\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tokens/lookup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tokens",
								"lookup"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"abcdefjhij1234567890\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tokens/lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										"lookup"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"mollit in adipisicing\",\n \"name\": \"non do\",\n \"userId\": \"reprehenderit\",\n \"revoked\": false,\n \"created\": 27532284,\n \"expires\": -68191701,\n \"lastUse\": -44981005,\n \"scopes\": [\n  \"UnattendedInstall\",\n  \"DiagnosticExport\"\n ],\n \"personalAccessToken\": true\n}"
						}
					]
				}
			]
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "objects",
					"item": [
						{
							"name": "{object Id}",
							"item": [
								{
									"name": "Gets the specified settings object | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"modified\": -61738654,\n \"author\": \"john.doe@example.com\",\n \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"schemaVersion\": \"1.0.0\",\n \"scope\": \"HOST-D3A3C5A146830A79\",\n \"schemaId\": \"builtin:anomaly.infrastructure\",\n \"value\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"summary\": \"consectetur eu\",\n \"created\": 1759790\n}"
										},
										{
											"name": "No object available for the given objectId",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 86279056,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"non\",\n    \"message\": \"ea eu et fugiat\",\n    \"path\": \"amet velit\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"officia est ad deserunt\",\n    \"message\": \"et reprehenderit magna nulla\",\n    \"path\": \"voluptate\"\n   }\n  ],\n  \"message\": \"culpa\",\n  \"code\": 40623938\n }\n}"
										}
									]
								},
								{
									"name": "Updates an existing settings object | maturity=EARLY_ADOPTER",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 86279056,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"non\",\n    \"message\": \"ea eu et fugiat\",\n    \"path\": \"amet velit\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"officia est ad deserunt\",\n    \"message\": \"et reprehenderit magna nulla\",\n    \"path\": \"voluptate\"\n   }\n  ],\n  \"message\": \"culpa\",\n  \"code\": 40623938\n }\n}"
										},
										{
											"name": "Failed. Schema validation failed.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 86279056,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"non\",\n    \"message\": \"ea eu et fugiat\",\n    \"path\": \"amet velit\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"officia est ad deserunt\",\n    \"message\": \"et reprehenderit magna nulla\",\n    \"path\": \"voluptate\"\n   }\n  ],\n  \"message\": \"culpa\",\n  \"code\": 40623938\n }\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 86279056,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"non\",\n    \"message\": \"ea eu et fugiat\",\n    \"path\": \"amet velit\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"officia est ad deserunt\",\n    \"message\": \"et reprehenderit magna nulla\",\n    \"path\": \"voluptate\"\n   }\n  ],\n  \"message\": \"culpa\",\n  \"code\": 40623938\n }\n}"
										},
										{
											"name": "Failed. Conflicting resource.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 86279056,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"non\",\n    \"message\": \"ea eu et fugiat\",\n    \"path\": \"amet velit\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"officia est ad deserunt\",\n    \"message\": \"et reprehenderit magna nulla\",\n    \"path\": \"voluptate\"\n   }\n  ],\n  \"message\": \"culpa\",\n  \"code\": 40623938\n }\n}"
										}
									]
								},
								{
									"name": "Deletes the specified settings object | maturity=EARLY_ADOPTER",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=ullamco nostrud anim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"query": [
												{
													"key": "updateToken",
													"value": "ullamco nostrud anim",
													"description": "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks."
												}
											],
											"variable": [
												{
													"key": "objectId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=ullamco nostrud anim",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "ullamco nostrud anim"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=ullamco nostrud anim",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "ullamco nostrud anim"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 86279056,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"non\",\n    \"message\": \"ea eu et fugiat\",\n    \"path\": \"amet velit\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"officia est ad deserunt\",\n    \"message\": \"et reprehenderit magna nulla\",\n    \"path\": \"voluptate\"\n   }\n  ],\n  \"message\": \"culpa\",\n  \"code\": 40623938\n }\n}"
										},
										{
											"name": "Failed. Conflicting resource.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=ullamco nostrud anim",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "ullamco nostrud anim"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 86279056,\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"non\",\n    \"message\": \"ea eu et fugiat\",\n    \"path\": \"amet velit\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"officia est ad deserunt\",\n    \"message\": \"et reprehenderit magna nulla\",\n    \"path\": \"voluptate\"\n   }\n  ],\n  \"message\": \"culpa\",\n  \"code\": 40623938\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists available settings objects | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/objects?schemaIds=ullamco nostrud anim&scopes=ullamco nostrud anim&fields=objectId,value&nextPageKey=ullamco nostrud anim&pageSize=65453730",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "schemaIds",
											"value": "ullamco nostrud anim",
											"description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "scopes",
											"value": "ullamco nostrud anim",
											"description": "A list of comma-separated scopes, that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scopes. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "fields",
											"value": "objectId,value",
											"description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `objectId,value`)."
										},
										{
											"key": "nextPageKey",
											"value": "ullamco nostrud anim",
											"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
										},
										{
											"key": "pageSize",
											"value": "65453730",
											"description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=ullamco nostrud anim&scopes=ullamco nostrud anim&fields=objectId,value&nextPageKey=ullamco nostrud anim&pageSize=65453730",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "ullamco nostrud anim"
												},
												{
													"key": "scopes",
													"value": "ullamco nostrud anim"
												},
												{
													"key": "fields",
													"value": "objectId,value"
												},
												{
													"key": "nextPageKey",
													"value": "ullamco nostrud anim"
												},
												{
													"key": "pageSize",
													"value": "65453730"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"totalCount\": -98289863,\n \"items\": [\n  {\n   \"modified\": -10714812,\n   \"author\": \"john.doe@example.com\",\n   \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"schemaVersion\": \"1.0.0\",\n   \"scope\": \"HOST-D3A3C5A146830A79\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"value\": {\n    \"autoMonitoring\": true\n   },\n   \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"summary\": \"deserunt id qui cupidatat\",\n   \"created\": -29731435\n  },\n  {\n   \"modified\": -37763008,\n   \"author\": \"john.doe@example.com\",\n   \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"schemaVersion\": \"1.0.0\",\n   \"scope\": \"HOST-D3A3C5A146830A79\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"value\": {\n    \"autoMonitoring\": true\n   },\n   \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"summary\": \"laboris\",\n   \"created\": -61798897\n  }\n ],\n \"pageSize\": 71439553,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
								},
								{
									"name": "Failed. The specified schema or scope is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=ullamco nostrud anim&scopes=ullamco nostrud anim&fields=objectId,value&nextPageKey=ullamco nostrud anim&pageSize=65453730",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "ullamco nostrud anim"
												},
												{
													"key": "scopes",
													"value": "ullamco nostrud anim"
												},
												{
													"key": "fields",
													"value": "objectId,value"
												},
												{
													"key": "nextPageKey",
													"value": "ullamco nostrud anim"
												},
												{
													"key": "pageSize",
													"value": "65453730"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
								}
							]
						},
						{
							"name": "Creates a new settings object | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false",
											"description": "If `true`, the request runs only validation of the submitted settings objects, without saving them."
										}
									]
								},
								"description": "You can upload several objects at once. In that case each object returns its own response code. Check the response body for details."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -96556230,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"incididunt adipisicing Lorem in velit\",\n     \"message\": \"non culpa minim laboris\",\n     \"path\": \"officia irure elit Excepteur ullamco\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"s\",\n     \"message\": \"dolore culpa\",\n     \"path\": \"proident ips\"\n    }\n   ],\n   \"message\": \"voluptate ut ad\",\n   \"code\": 25833922\n  }\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -81154495,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"sint aliquip\",\n     \"message\": \"minim i\",\n     \"path\": \"voluptate nostrud velit\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"sit Lorem esse labore\",\n     \"message\": \"amet eiusmod\",\n     \"path\": \"qui aliquip sint\"\n    }\n   ],\n   \"message\": \"est enim mollit anim\",\n   \"code\": 33618722\n  }\n }\n]"
								},
								{
									"name": "Multi-status: different objects in the payload resulted in different statuses.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -96556230,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"incididunt adipisicing Lorem in velit\",\n     \"message\": \"non culpa minim laboris\",\n     \"path\": \"officia irure elit Excepteur ullamco\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"s\",\n     \"message\": \"dolore culpa\",\n     \"path\": \"proident ips\"\n    }\n   ],\n   \"message\": \"voluptate ut ad\",\n   \"code\": 25833922\n  }\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -81154495,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"sint aliquip\",\n     \"message\": \"minim i\",\n     \"path\": \"voluptate nostrud velit\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"sit Lorem esse labore\",\n     \"message\": \"amet eiusmod\",\n     \"path\": \"qui aliquip sint\"\n    }\n   ],\n   \"message\": \"est enim mollit anim\",\n   \"code\": 33618722\n  }\n }\n]"
								},
								{
									"name": "Failed. Schema validation failed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -96556230,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"incididunt adipisicing Lorem in velit\",\n     \"message\": \"non culpa minim laboris\",\n     \"path\": \"officia irure elit Excepteur ullamco\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"s\",\n     \"message\": \"dolore culpa\",\n     \"path\": \"proident ips\"\n    }\n   ],\n   \"message\": \"voluptate ut ad\",\n   \"code\": 25833922\n  }\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -81154495,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"sint aliquip\",\n     \"message\": \"minim i\",\n     \"path\": \"voluptate nostrud velit\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"sit Lorem esse labore\",\n     \"message\": \"amet eiusmod\",\n     \"path\": \"qui aliquip sint\"\n    }\n   ],\n   \"message\": \"est enim mollit anim\",\n   \"code\": 33618722\n  }\n }\n]"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -96556230,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"incididunt adipisicing Lorem in velit\",\n     \"message\": \"non culpa minim laboris\",\n     \"path\": \"officia irure elit Excepteur ullamco\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"s\",\n     \"message\": \"dolore culpa\",\n     \"path\": \"proident ips\"\n    }\n   ],\n   \"message\": \"voluptate ut ad\",\n   \"code\": 25833922\n  }\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -81154495,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"sint aliquip\",\n     \"message\": \"minim i\",\n     \"path\": \"voluptate nostrud velit\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"sit Lorem esse labore\",\n     \"message\": \"amet eiusmod\",\n     \"path\": \"qui aliquip sint\"\n    }\n   ],\n   \"message\": \"est enim mollit anim\",\n   \"code\": 33618722\n  }\n }\n]"
								},
								{
									"name": "Failed. Conflicting resource.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -96556230,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"incididunt adipisicing Lorem in velit\",\n     \"message\": \"non culpa minim laboris\",\n     \"path\": \"officia irure elit Excepteur ullamco\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"s\",\n     \"message\": \"dolore culpa\",\n     \"path\": \"proident ips\"\n    }\n   ],\n   \"message\": \"voluptate ut ad\",\n   \"code\": 25833922\n  }\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -81154495,\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"sint aliquip\",\n     \"message\": \"minim i\",\n     \"path\": \"voluptate nostrud velit\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"sit Lorem esse labore\",\n     \"message\": \"amet eiusmod\",\n     \"path\": \"qui aliquip sint\"\n    }\n   ],\n   \"message\": \"est enim mollit anim\",\n   \"code\": 33618722\n  }\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "schemas",
					"item": [
						{
							"name": "Lists available settings schemas | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"latestSchemaVersion\": \"1.4.2\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"displayName\": \"Anomaly Detection for Infrastructure\"\n  },\n  {\n   \"latestSchemaVersion\": \"1.4.2\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"displayName\": \"Anomaly Detection for Infrastructure\"\n  }\n ],\n \"totalCount\": 1\n}"
								}
							]
						},
						{
							"name": "Gets parameters of the specified settings schema | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=ullamco nostrud anim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas",
										":schemaId"
									],
									"query": [
										{
											"key": "schemaVersion",
											"value": "ullamco nostrud anim",
											"description": "The version of the required schema. \n\n If not set, the most recent version is returned."
										}
									],
									"variable": [
										{
											"key": "schemaId",
											"value": "ullamco nostrud anim",
											"description": "(Required) The ID of the required schema."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=ullamco nostrud anim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"query": [
												{
													"key": "schemaVersion",
													"value": "ullamco nostrud anim"
												}
											],
											"variable": [
												{
													"key": "schemaId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"schemaId\": \"builtin:anomaly.infrastructure\",\n \"displayName\": \"Anomaly detection for infrastructure\",\n \"description\": \"Dynatrace automatically detects infrastructure-related performance anomalies such as high CPU saturation, memory outages, and low disk-space conditions\",\n \"documentation\": \"irure exercitation pariatur\",\n \"version\": \"1.4.2\",\n \"multiObject\": true,\n \"ordered\": true,\n \"maxObjects\": 10,\n \"allowedScopes\": [\n  \"host\",\n  \"application\"\n ],\n \"enums\": {},\n \"types\": {},\n \"properties\": {},\n \"constraints\": [\n  {\n   \"customMessage\": \"laborum exercitation ipsum\",\n   \"maximumPropertyCount\": 2,\n   \"customValidatorId\": \"my-min-max\",\n   \"minimumPropertyCount\": 1,\n   \"properties\": [\n    \"est\",\n    \"qui Duis nulla et in\"\n   ],\n   \"type\": \"PROPERTY_COUNT_RANGE\"\n  },\n  {\n   \"customMessage\": \"exercitation elit commodo consectetur\",\n   \"maximumPropertyCount\": 2,\n   \"customValidatorId\": \"my-min-max\",\n   \"minimumPropertyCount\": 1,\n   \"properties\": [\n    \"do cillum aliqua amet eiusmod\",\n    \"reprehenderit tempor est\"\n   ],\n   \"type\": \"GREATER_THAN_OR_EQUAL\"\n  }\n ],\n \"metadata\": {}\n}"
								},
								{
									"name": "Failed. The specified schema doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=ullamco nostrud anim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"query": [
												{
													"key": "schemaVersion",
													"value": "ullamco nostrud anim"
												}
											],
											"variable": [
												{
													"key": "schemaId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "synthetic",
			"item": [
				{
					"name": "locations",
					"item": [
						{
							"name": "{location Id}",
							"item": [
								{
									"name": "Gets properties of the specified cluster location",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The Dynatrace entity ID of the required cluster location."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains parameters of the synthetic cluster location.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"entityId\": \"elit dolore\",\n \"latitude\": -4423994.977799505,\n \"longitude\": 31470065.879924342,\n \"name\": \"eiusmod eu laborum esse dolor\",\n \"type\": \"PRIVATE\",\n \"countryCode\": \"sunt laboris\",\n \"regionCode\": \"eu est anim\",\n \"city\": \"esse et incididunt ea id\",\n \"status\": \"ENABLED\"\n}"
										}
									]
								},
								{
									"name": "Updates the specified private synthetic cluster location",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entityId\": \"reprehenderit fugiat velit officia\",\n    \"latitude\": -4085445.5320792943,\n    \"longitude\": -24998865.276507363,\n    \"name\": \"incididunt in\",\n    \"nodes\": [\n        \"ut elit laborum ullamco\",\n        \"amet dolore i\"\n    ],\n    \"type\": \"CLUSTER\",\n    \"countryCode\": \"aute ipsum ei\",\n    \"regionCode\": \"ipsum exercitation ullamco\",\n    \"city\": \"aute deserunt\",\n    \"status\": \"ENABLED\",\n    \"availabilityLocationOutage\": true,\n    \"availabilityNodeOutage\": false,\n    \"locationNodeOutageDelayInMinutes\": 3,\n    \"availabilityNotificationsEnabled\": true,\n    \"autoUpdateChromium\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The Dynatrace entity ID of the private synthetic cluster location to be updated."
												}
											]
										}
									},
									"response": [
										{
											"name": "default response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"entityId\": \"reprehenderit fugiat velit officia\",\n    \"latitude\": -4085445.5320792943,\n    \"longitude\": -24998865.276507363,\n    \"name\": \"incididunt in\",\n    \"nodes\": [\n        \"ut elit laborum ullamco\",\n        \"amet dolore i\"\n    ],\n    \"type\": \"CLUSTER\",\n    \"countryCode\": \"aute ipsum ei\",\n    \"regionCode\": \"ipsum exercitation ullamco\",\n    \"city\": \"aute deserunt\",\n    \"status\": \"ENABLED\",\n    \"availabilityLocationOutage\": true,\n    \"availabilityNodeOutage\": false,\n    \"locationNodeOutageDelayInMinutes\": 3,\n    \"availabilityNotificationsEnabled\": true,\n    \"autoUpdateChromium\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								},
								{
									"name": "Deletes the specified private synthetic cluster location",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "ullamco nostrud anim",
													"description": "(Required) The Dynatrace entity ID of the private synthetic cluster location to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "default response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								}
							]
						},
						{
							"name": "Lists all cluster private synthetic locations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"locations\": [\n  {\n   \"name\": \"Gdansk\",\n   \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n   \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n   \"type\": \"PUBLIC\",\n   \"cloudPlatform\": \"AMAZON_EC2\",\n   \"ips\": [\n    \"134.189.153.97\",\n    \"134.189.153.98\"\n   ],\n   \"stage\": \"GA\",\n   \"status\": \"ENABLED\",\n   \"capabilities\": [\n    \"BROWSER\",\n    \"HTTP\"\n   ]\n  },\n  {\n   \"name\": \"My private location\",\n   \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n   \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n   \"type\": \"PRIVATE\",\n   \"status\": \"ENABLED\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Creates a new private synthetic cluster location",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entityId\": \"consequat adipisicing proident\",\n    \"latitude\": -8888320.348266542,\n    \"longitude\": 83433359.00325638,\n    \"name\": \"non nisi nulla et exercitation\",\n    \"nodes\": [\n        \"enim\",\n        \"ullam\"\n    ],\n    \"type\": \"CLUSTER\",\n    \"countryCode\": \"officia\",\n    \"regionCode\": \"labor\",\n    \"city\": \"pariatur\",\n    \"status\": \"HIDDEN\",\n    \"availabilityLocationOutage\": false,\n    \"availabilityNodeOutage\": false,\n    \"locationNodeOutageDelayInMinutes\": 4,\n    \"availabilityNotificationsEnabled\": false,\n    \"autoUpdateChromium\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entityId\": \"reprehenderit fugiat velit officia\",\n    \"latitude\": -4085445.5320792943,\n    \"longitude\": -24998865.276507363,\n    \"name\": \"incididunt in\",\n    \"nodes\": [\n        \"ut elit laborum ullamco\",\n        \"amet dolore i\"\n    ],\n    \"type\": \"CLUSTER\",\n    \"countryCode\": \"aute ipsum ei\",\n    \"regionCode\": \"ipsum exercitation ullamco\",\n    \"city\": \"aute deserunt\",\n    \"status\": \"ENABLED\",\n    \"availabilityLocationOutage\": true,\n    \"availabilityNodeOutage\": false,\n    \"locationNodeOutageDelayInMinutes\": 3,\n    \"availabilityNotificationsEnabled\": true,\n    \"autoUpdateChromium\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"entityId\": \"ex laboris sint in id\",\n \"geoLocationId\": \"nulla sunt enim do\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "nodes",
					"item": [
						{
							"name": "Lists all synthetic cluster nodes | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes"
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"nodes\": [\n  {\n   \"activeGateVersion\": \"proident ad\",\n   \"autoUpdateEnabled\": true,\n   \"browserMonitorsEnabled\": true,\n   \"entityId\": \"ut consectetur pariatur reprehenderit\",\n   \"healthCheckStatus\": \"labore sit ea Excepteur officia\",\n   \"hostname\": \"in commodo officia ex\",\n   \"ips\": [\n    \"minim Excepteur mollit\",\n    \"laboris est esse\"\n   ],\n   \"oneAgentRoutingEnabled \": true,\n   \"operatingSystem\": \"laboris cillum\",\n   \"playerVersion\": \"laborum dolo\",\n   \"status\": \"elit ut quis\",\n   \"version\": \"reprehe\"\n  },\n  {\n   \"activeGateVersion\": \"dolore pariatur\",\n   \"autoUpdateEnabled\": false,\n   \"browserMonitorsEnabled\": false,\n   \"entityId\": \"eu Excepteur cupidatat fugiat\",\n   \"healthCheckStatus\": \"sit Ut sed in ut\",\n   \"hostname\": \"deserunt commodo\",\n   \"ips\": [\n    \"aliquip elit irure ad\",\n    \"laboris laborum\"\n   ],\n   \"oneAgentRoutingEnabled \": true,\n   \"operatingSystem\": \"Ut minim fugiat velit\",\n   \"playerVersion\": \"deserunt sint mollit ea\",\n   \"status\": \"pariatur sit exercitation elit\",\n   \"version\": \"exercitation aliqua in irure nulla\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Lists properties of the specified synthetic cluster node | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes",
										":nodeId"
									],
									"variable": [
										{
											"key": "nodeId",
											"value": "ullamco nostrud anim",
											"description": "(Required) The ID of the required synthetic cluster node."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"activeGateVersion\": \"ea deserunt nisi\",\n \"autoUpdateEnabled\": true,\n \"browserMonitorsEnabled\": false,\n \"browserType\": \"Excepteur laborum est\",\n \"browserVersion\": \"adipisicing nisi\",\n \"entityId\": \"anim adipisicing voluptate\",\n \"healthCheckStatus\": \"nisi eiusmod ut eu\",\n \"hostname\": \"Duis quis \",\n \"ips\": [\n  \"ea id\",\n  \"est do amet dolor\"\n ],\n \"oneAgentRoutingEnabled \": false,\n \"operatingSystem\": \"Excepteur mollit sint amet qui\",\n \"playerVersion\": \"cillum do\",\n \"status\": \"dolore esse\",\n \"version\": \"sint voluptate\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Lists all available versions of ActiveGate installer",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/deployment/installer/gateway/versions/:osType",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"deployment",
						"installer",
						"gateway",
						"versions",
						":osType"
					],
					"variable": [
						{
							"key": "osType",
							"value": "windows",
							"description": "(Required) The operating system of the installer."
						}
					]
				}
			},
			"response": [
				{
					"name": "Success. The payload contains the available versions.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deployment/installer/gateway/versions/:osType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deployment",
								"installer",
								"gateway",
								"versions",
								":osType"
							],
							"variable": [
								{
									"key": "osType"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"availableVersions\": [\n  \"dolor eiusmod nulla\",\n  \"do culpa non n\"\n ]\n}"
				},
				{
					"name": "Not found. See the response body for details.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deployment/installer/gateway/versions/:osType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deployment",
								"installer",
								"gateway",
								"versions",
								":osType"
							],
							"variable": [
								{
									"key": "osType"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"non officia\",\n    \"message\": \"fugiat veniam\",\n    \"path\": \"exercitation\"\n   },\n   {\n    \"parameterLocation\": \"PAYLOAD_BODY\",\n    \"location\": \"adipisicing ullamco ex ut\",\n    \"message\": \"in labore\",\n    \"path\": \"est velit\"\n   }\n  ],\n  \"message\": \"id enim velit adipisicing commodo\",\n  \"code\": 14861247\n }\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "Api-Token {{DT_TOKEN}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://dynatrace.f-i-ts.de/api/cluster/v2"
		}
	]
}