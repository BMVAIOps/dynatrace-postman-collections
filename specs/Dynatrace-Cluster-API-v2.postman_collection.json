{
	"info": {
		"_postman_id": "ade2067e-ab42-4373-80a7-89c917c872a5",
		"name": "Dynatrace Cluster API v2",
		"description": "Dynatrace Managed exposes cluster-wide functionality via REST endpoints. This interactive documentation also acts as a REST client you can use to interact with Dynatrace Managed clusters. \n\nTo authorize, use the API Token generated in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the response shows the result of your request. The expected response code for a successful request is documented individually per REST endpoint. Additionally the following error response codes can occur in our REST interface:\n\n* 400 - Bad Request: Some request parameters are not correct. See response body for details.\n* 401 - Unauthorized: A valid authorization header is required but is missing.\n* 403 - Forbidden: Execution of request is not allowed, e.g. api-token is invalid.\n* 404 - Not Found: Endpoint does not exist or some entities could not be found.\n* 500 - Internal Server Error: See response body for details.\n* 556 - Upgrade in progress: Operation couldn't be performed during the upgrade.\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "license/consumption",
			"item": [
				{
					"name": "Export license consumption data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/license/consumption?startTs=-52931891&endTs=-52931891",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"license",
								"consumption"
							],
							"query": [
								{
									"key": "startTs",
									"value": "-52931891",
									"description": "Start timestamp (30 days ago by default)"
								},
								{
									"key": "endTs",
									"value": "-52931891",
									"description": "End timestamp (2 hours ago by default, values from the last 2 hours are not allowed)"
								}
							]
						},
						"description": "Export license consumption data as a ZIP archive."
					},
					"response": [
						{
							"name": "OK - license consumption data export will start",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption?startTs=-52931891&endTs=-52931891",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption"
									],
									"query": [
										{
											"key": "startTs",
											"value": "-52931891"
										},
										{
											"key": "endTs",
											"value": "-52931891"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request. Provided time range is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption?startTs=-52931891&endTs=-52931891",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption"
									],
									"query": [
										{
											"key": "startTs",
											"value": "-52931891"
										},
										{
											"key": "endTs",
											"value": "-52931891"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License consumption data is already being exported. Please wait for the first request to finish before requesting another export.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption?startTs=-52931891&endTs=-52931891",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption"
									],
									"query": [
										{
											"key": "startTs",
											"value": "-52931891"
										},
										{
											"key": "endTs",
											"value": "-52931891"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption?startTs=-52931891&endTs=-52931891",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption"
									],
									"query": [
										{
											"key": "startTs",
											"value": "-52931891"
										},
										{
											"key": "endTs",
											"value": "-52931891"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve license consumption",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/license/consumption/hour?startTs=-52931891",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"license",
								"consumption",
								"hour"
							],
							"query": [
								{
									"key": "startTs",
									"value": "-52931891",
									"description": "Begin timestamp"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption/hour?startTs=-52931891",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption",
										"hour"
									],
									"query": [
										{
											"key": "startTs",
											"value": "-52931891"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"clusterUuid\": \"dolore cupidatat exercitation a\",\n \"timeFrameStart\": \"2010-02-07T15:21:54.419Z\",\n \"timeFrameEnd\": \"1946-11-04T18:35:57.036Z\",\n \"environmentBillingEntries\": [\n  {\n   \"environmentUuid\": \"in\",\n   \"visits\": 66205897,\n   \"mobileSessions\": 50218810,\n   \"totalRUMUserPropertiesUsed\": 72011537,\n   \"newProblems\": -79060035,\n   \"hostUsages\": [\n    {\n     \"osiId\": 76792275,\n     \"hostName\": \"nisi Excepteur consectetur\",\n     \"hostCategory\": \"aliquip voluptate\",\n     \"agentUsages\": [\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"infrastructureOnly\": false,\n     \"paas\": true,\n     \"passMemoryLimit\": -28666690,\n     \"vendorTypeId\": -55373621,\n     \"hostMemoryBytes\": -51619321,\n     \"premiumLogAnalytics\": true,\n     \"hasContainers\": true\n    },\n    {\n     \"osiId\": 97631827,\n     \"hostName\": \"aut\",\n     \"hostCategory\": \"mollit qui labore\",\n     \"agentUsages\": [\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"infrastructureOnly\": false,\n     \"paas\": false,\n     \"passMemoryLimit\": 90622088,\n     \"vendorTypeId\": -69572680,\n     \"hostMemoryBytes\": 61637778,\n     \"premiumLogAnalytics\": false,\n     \"hasContainers\": false\n    }\n   ],\n   \"downloads\": [\n    {\n     \"type\": \"occaecat aliqua\",\n     \"downloadCount\": -23941980,\n     \"version\": \"eu nostrud et ex elit\",\n     \"firstDownloadTime\": \"2003-01-11T11:39:36.930Z\"\n    },\n    {\n     \"type\": \"amet\",\n     \"downloadCount\": 80023318,\n     \"version\": \"aute cupi\",\n     \"firstDownloadTime\": \"1944-01-12T16:14:22.509Z\"\n    }\n   ],\n   \"syntheticUsages\": [\n    {\n     \"monitorDefinitionId\": \"aute aliquip\",\n     \"monitorDescription\": \"nulla esse\",\n     \"monitorTypeId\": 68840266,\n     \"successCount\": 38672804,\n     \"failureCount\": 45376716,\n     \"syntheticActionCount\": 18657745,\n     \"performedSyntheticActions\": -58765004\n    },\n    {\n     \"monitorDefinitionId\": \"non cillum voluptate\",\n     \"monitorDescription\": \"quis enim minim dolor\",\n     \"monitorTypeId\": 61534813,\n     \"successCount\": -15552280,\n     \"failureCount\": 77933463,\n     \"syntheticActionCount\": 98875942,\n     \"performedSyntheticActions\": 95046185\n    }\n   ],\n   \"syntheticBillingUsage\": [\n    {\n     \"monitorTypeId\": -16961075,\n     \"testId\": 19434625,\n     \"publicExecutions\": -55991749,\n     \"privateExecutions\": 86925338\n    },\n    {\n     \"monitorTypeId\": 75828778,\n     \"testId\": -34950129,\n     \"publicExecutions\": -60118558,\n     \"privateExecutions\": -80946712\n    }\n   ],\n   \"customMetrics\": [\n    {\n     \"source\": \"laborum ut Lorem es\",\n     \"total\": -69490762\n    },\n    {\n     \"source\": \"velit labore pariatur\",\n     \"total\": -7360188\n    }\n   ],\n   \"davisDataUnits\": [\n    {\n     \"pool\": \"velit dolore est pariatur\",\n     \"total\": -13429585.990708232\n    },\n    {\n     \"pool\": \"irure nostrud\",\n     \"total\": -80760437.2636979\n    }\n   ],\n   \"trial\": false,\n   \"internalUse\": false,\n   \"highAvailabilityCluster\": false,\n   \"logStorageUsageBytes\": -992188,\n   \"logUploadVolumeBytes\": 68165327,\n   \"sessionReplays\": 95446804,\n   \"mobileSessionReplays\": 84332016\n  },\n  {\n   \"environmentUuid\": \"exerci\",\n   \"visits\": -85625134,\n   \"mobileSessions\": 17970615,\n   \"totalRUMUserPropertiesUsed\": 40674200,\n   \"newProblems\": -58064312,\n   \"hostUsages\": [\n    {\n     \"osiId\": 7752956,\n     \"hostName\": \"ut voluptate ut nulla Ut\",\n     \"hostCategory\": \"cillum\",\n     \"agentUsages\": [\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"infrastructureOnly\": true,\n     \"paas\": false,\n     \"passMemoryLimit\": -92224748,\n     \"vendorTypeId\": 61831977,\n     \"hostMemoryBytes\": -85038987,\n     \"premiumLogAnalytics\": false,\n     \"hasContainers\": true\n    },\n    {\n     \"osiId\": -83135167,\n     \"hostName\": \"dolore deserunt\",\n     \"hostCategory\": \"incididunt laboris laborum labore\",\n     \"agentUsages\": [\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      {\n       \"networkTraffic\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentTypeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"agentUsageRecords\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     ],\n     \"infrastructureOnly\": false,\n     \"paas\": false,\n     \"passMemoryLimit\": -11111031,\n     \"vendorTypeId\": 72881072,\n     \"hostMemoryBytes\": -90643540,\n     \"premiumLogAnalytics\": false,\n     \"hasContainers\": false\n    }\n   ],\n   \"downloads\": [\n    {\n     \"type\": \"proident labore dolore id sint\",\n     \"downloadCount\": -9731695,\n     \"version\": \"anim laboris ea sed\",\n     \"firstDownloadTime\": \"1966-02-19T12:49:28.549Z\"\n    },\n    {\n     \"type\": \"incididunt\",\n     \"downloadCount\": 54728346,\n     \"version\": \"elit anim irure\",\n     \"firstDownloadTime\": \"1962-01-01T12:08:37.851Z\"\n    }\n   ],\n   \"syntheticUsages\": [\n    {\n     \"monitorDefinitionId\": \"cupidatat commodo amet\",\n     \"monitorDescription\": \"non tempor reprehenderit nulla\",\n     \"monitorTypeId\": -61560092,\n     \"successCount\": 6970406,\n     \"failureCount\": 26542275,\n     \"syntheticActionCount\": -2730253,\n     \"performedSyntheticActions\": -28371626\n    },\n    {\n     \"monitorDefinitionId\": \"exercitation consequat incididunt\",\n     \"monitorDescription\": \"do\",\n     \"monitorTypeId\": -60806738,\n     \"successCount\": 79110755,\n     \"failureCount\": 94378700,\n     \"syntheticActionCount\": -66124289,\n     \"performedSyntheticActions\": -4780653\n    }\n   ],\n   \"syntheticBillingUsage\": [\n    {\n     \"monitorTypeId\": 66661581,\n     \"testId\": 72285542,\n     \"publicExecutions\": -60271025,\n     \"privateExecutions\": -78028547\n    },\n    {\n     \"monitorTypeId\": -3247609,\n     \"testId\": 88025184,\n     \"publicExecutions\": -5767746,\n     \"privateExecutions\": -40463804\n    }\n   ],\n   \"customMetrics\": [\n    {\n     \"source\": \"aute id occaecat\",\n     \"total\": 91533740\n    },\n    {\n     \"source\": \"sunt deser\",\n     \"total\": -96070471\n    }\n   ],\n   \"davisDataUnits\": [\n    {\n     \"pool\": \"consectetur reprehenderit\",\n     \"total\": 14657299.527284414\n    },\n    {\n     \"pool\": \"tempor ad\",\n     \"total\": 82724349.91771558\n    }\n   ],\n   \"trial\": true,\n   \"internalUse\": false,\n   \"highAvailabilityCluster\": true,\n   \"logStorageUsageBytes\": -65295864,\n   \"logUploadVolumeBytes\": -36097020,\n   \"sessionReplays\": 71367033,\n   \"mobileSessionReplays\": -79923574\n  }\n ]\n}"
						},
						{
							"name": "Bad request. Provided timestamp is incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption/hour?startTs=-52931891",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption",
										"hour"
									],
									"query": [
										{
											"key": "startTs",
											"value": "-52931891"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/consumption/hour?startTs=-52931891",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"consumption",
										"hour"
									],
									"query": [
										{
											"key": "startTs",
											"value": "-52931891"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "environments",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets the properties of the specified environment.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/environments/:id?includeConsumptionInfo=true&includeStorageInfo=true&includeUncachedConsumptionInfo=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":id"
									],
									"query": [
										{
											"key": "includeConsumptionInfo",
											"value": "true",
											"description": "If true, consumption information (limits, usage) is returned for this environment.\n\nReturned usage is typically up to 1 hour old. To obtain fresher data, you can use **includeUncachedConsumptionInfo** parameter instead."
										},
										{
											"key": "includeStorageInfo",
											"value": "true",
											"description": "If true, storage information (limits, usage) is returned for this environment."
										},
										{
											"key": "includeUncachedConsumptionInfo",
											"value": "true",
											"description": "If true, uncached consumption information (limits, usage) is returned for this environment.\n\nUp to date consumption will be calculated. If both this parameter and **includeConsumptionInfo** are set, **includeUncachedConsumptionInfo** will take priority."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) The ID of the environment."
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/environments/:id?includeConsumptionInfo=true&includeStorageInfo=true&includeUncachedConsumptionInfo=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"query": [
												{
													"key": "includeConsumptionInfo",
													"value": "true"
												},
												{
													"key": "includeStorageInfo",
													"value": "true"
												},
												{
													"key": "includeUncachedConsumptionInfo",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"example environment\",\n \"state\": \"ENABLED\",\n \"tags\": [\n  \"tag1\",\n  \"tag2\"\n ],\n \"trial\": false\n}"
								}
							]
						},
						{
							"name": "Updates an existing environment or creates a new one.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/environments/:id?createToken=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":id"
									],
									"query": [
										{
											"key": "createToken",
											"value": "false",
											"description": "If true, a token management token with the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement' (for usage with token API v1) is created when creating a new environment. This token is then returned in the response body. It can be used within the newly created environment to create other tokens for configuring this environment."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) The ID of the environment to update.\n\n If you set the ID in the body as well, it must match this ID."
										}
									]
								},
								"description": "If the environment with the specified ID does not exist, a new environment will be created."
							},
							"response": [
								{
									"name": "Success. The new environment has been created. The response body contains the ID, the name and also a token management token if 'createToken' is 'true'.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id?createToken=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"query": [
												{
													"key": "createToken",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"occaecat voluptate qui ut\",\n \"name\": \"labore laborum in irure Ut\",\n \"description\": \"sunt enim\",\n \"tokenManagementToken\": \"aliqua do\"\n}"
								},
								{
									"name": "Success. The environment has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id?createToken=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"query": [
												{
													"key": "createToken",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id?createToken=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"query": [
												{
													"key": "createToken",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes the specified environment. An environment must be disabled before it can be deleted.",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/environments/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) The ID of the environment to be deleted."
										}
									]
								}
							},
							"response": [
								{
									"name": "Deleted. Response does not have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/environments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. For example, if an environment is not disabled.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/environments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creates a new tenant management token for an environment.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Token Management\",\n    \"expiresIn\": {\n        \"value\": 3600,\n        \"unit\": \"SECONDS\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/environments/:id/tokenManagementToken",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments",
										":id",
										"tokenManagementToken"
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) The ID of the environment where the token is valid."
										}
									]
								},
								"description": "The newly created token is owned by the same user who owns the token used for authentication of creation call. \nIt has the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement' (for usage with token API v1)."
							},
							"response": [
								{
									"name": "Success. The token has been created. The response body contains the token itself",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Token Management\",\n    \"expiresIn\": {\n        \"value\": 3600,\n        \"unit\": \"SECONDS\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id/tokenManagementToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id",
												"tokenManagementToken"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Location",
											"value": "veniam elit anim Lorem dolor",
											"description": "Token Id"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"token\": \"abcdefjhij1234567890\"\n}"
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Token Management\",\n    \"expiresIn\": {\n        \"value\": 3600,\n        \"unit\": \"SECONDS\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/environments/:id/tokenManagementToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"environments",
												":id",
												"tokenManagementToken"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all existing environments.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/environments?nextPageKey=veniam elit anim Lorem dolor&pageSize=-52931891&sort=veniam elit anim Lorem dolor&filter=veniam elit anim Lorem dolor&includeConsumptionInfo=false&includeStorageInfo=false&includeUncachedConsumptionInfo=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "nextPageKey",
									"value": "veniam elit anim Lorem dolor",
									"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
								},
								{
									"key": "pageSize",
									"value": "-52931891",
									"description": "The amount of environments in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used."
								},
								{
									"key": "sort",
									"value": "veniam elit anim Lorem dolor",
									"description": "The sort order. Possible sorts orders are:\n * 'name' (without quotes): Sort by name ascending.\n * '-name' (without quotes): Sort by name descending.\n * 'creationDate' (without quotes): Sort by creation date ascending.\n * '-creationDate' (without quotes): Sort by name descending.\n"
								},
								{
									"key": "filter",
									"value": "veniam elit anim Lorem dolor",
									"description": "Specifies the filter of the query. \n\nYou can set one or several of the following criteria:\n* Name: `name(string)`. The name can be either a substring or the full name of an environment. Case-insensitive.\n* Trial: `trial(true)` or `trial(false)`. Only includes trial environments if true is specified or only non-trial environments if false is specified.\n* State: `state(ENABLED)` or `state(DISABLED)`.\n* Tag: `tag(string)`. To filter by multiple tags by applying OR logic use `tag(string1,string2)`. To filter by multiple tags by applying AND logic use `tag(string1),tag(string2)`.\nTo set several criteria, separate them with a comma (`,`). Only results, matching **all** criteria, are included into response.\n"
								},
								{
									"key": "includeConsumptionInfo",
									"value": "false",
									"description": "If true, consumption information (limits, usage) is returned for each environment.\n\nReturned usage is typically up to 1 hour old. To obtain fresher data, you can use **includeUncachedConsumptionInfo** parameter instead."
								},
								{
									"key": "includeStorageInfo",
									"value": "false",
									"description": "If true, storage information (limits, usage) is returned for each environment."
								},
								{
									"key": "includeUncachedConsumptionInfo",
									"value": "false",
									"description": "If true, uncached consumption information (limits, usage) is returned for each environment.\n\nUp to date consumption will be calculated. Calculation may be time consuming, so it's recommended to use **includeConsumptionInfo** parameter instead.\n\nIf both this parameter and **includeConsumptionInfo** are set, **includeUncachedConsumptionInfo** will take priority."
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful operation.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/environments?nextPageKey=veniam elit anim Lorem dolor&pageSize=-52931891&sort=veniam elit anim Lorem dolor&filter=veniam elit anim Lorem dolor&includeConsumptionInfo=false&includeStorageInfo=false&includeUncachedConsumptionInfo=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "nextPageKey",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "pageSize",
											"value": "-52931891"
										},
										{
											"key": "sort",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "filter",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "includeConsumptionInfo",
											"value": "false"
										},
										{
											"key": "includeStorageInfo",
											"value": "false"
										},
										{
											"key": "includeUncachedConsumptionInfo",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"environments\": [\n  {\n   \"name\": \"example environment\",\n   \"state\": \"ENABLED\",\n   \"tags\": [\n    \"tag1\",\n    \"tag2\"\n   ],\n   \"trial\": false\n  },\n  {\n   \"name\": \"example environment\",\n   \"state\": \"ENABLED\",\n   \"tags\": [\n    \"tag1\",\n    \"tag2\"\n   ],\n   \"trial\": false\n  }\n ],\n \"totalCount\": -16139168,\n \"pageSize\": -19682078,\n \"nextPageKey\": \"AQAAABQBAAAABQ==\"\n}"
						}
					]
				},
				{
					"name": "Creates a new environment.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/environments?createToken=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"environments"
							],
							"query": [
								{
									"key": "createToken",
									"value": "false",
									"description": "If true, a token management token with the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement' (for usage with token API v1) is created when creating a new environment. This token is then returned in the response body. It can be used within the newly created environment to create other tokens for configuring this environment."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success. The environment has been created and started. The response body contains the generated ID of the environment and a token with the scopes 'apiTokens.read' and 'apiTokens.write' (for usage with token API v2) and 'TenantTokenManagement'. The locatio",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/environments?createToken=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "createToken",
											"value": "false"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"occaecat voluptate qui ut\",\n \"name\": \"labore laborum in irure Ut\",\n \"description\": \"sunt enim\",\n \"tokenManagementToken\": \"aliqua do\"\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"example environment\",\n    \"state\": \"ENABLED\",\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ],\n    \"trial\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/environments?createToken=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"environments"
									],
									"query": [
										{
											"key": "createToken",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "remoteaccess/requests",
			"item": [
				{
					"name": "{request Id}",
					"item": [
						{
							"name": "Get access request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests",
										":requestId"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) Request id param"
										}
									]
								}
							},
							"response": [
								{
									"name": "Successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"requestId\": \"in ea\",\n \"userId\": \"Duis consectetur\",\n \"reason\": \"amet\",\n \"requestedDays\": -6269481,\n \"role\": \"devops-user\",\n \"createdTimestamp\": -69752129,\n \"expirationTimestamp\": 92891318,\n \"state\": \"PENDING\",\n \"stateModifiedByUser\": \"consequat ut\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Approving remote access request is disabled",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change state of access request",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"state\": \"EXPIRED\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests",
										":requestId",
										"state"
									],
									"variable": [
										{
											"key": "requestId",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) Request id param"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"EXPIRED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"EXPIRED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Approving remote access request is disabled",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"EXPIRED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access request not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"EXPIRED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Access request was found, but it's already expired",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"EXPIRED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Operation failed",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": \"EXPIRED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/remoteaccess/requests/:requestId/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"remoteaccess",
												"requests",
												":requestId",
												"state"
											],
											"variable": [
												{
													"key": "requestId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get all access requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/remoteaccess/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remoteaccess",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"requestId\": \"velit commodo magna labori\",\n  \"userId\": \"proident dolor Lorem in dolore\",\n  \"reason\": \"Excepteur dolore tempor proident\",\n  \"requestedDays\": 24511419,\n  \"role\": \"devops-viewer\",\n  \"createdTimestamp\": 21577709,\n  \"expirationTimestamp\": 80819281,\n  \"state\": \"EXPIRED\",\n  \"stateModifiedByUser\": \"dolor do magna proident\"\n },\n {\n  \"requestId\": \"culpa\",\n  \"userId\": \"dolor est\",\n  \"reason\": \"cillum ullamco cupidatat tempor\",\n  \"requestedDays\": 82626955,\n  \"role\": \"devops-admin\",\n  \"createdTimestamp\": 57296768,\n  \"expirationTimestamp\": 56849973,\n  \"state\": \"REJECTED\",\n  \"stateModifiedByUser\": \"occaecat in eiusmod laborum\"\n }\n]"
						},
						{
							"name": "Approving remote access request is disabled",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Grant remote access permission",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"Duis ullamco laboris consequat\",\n    \"reason\": \"sint magna\",\n    \"requestedDays\": 26916193,\n    \"role\": \"devops-user\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/remoteaccess/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"remoteaccess",
								"requests"
							]
						}
					},
					"response": [
						{
							"name": "Successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"Duis ullamco laboris consequat\",\n    \"reason\": \"sint magna\",\n    \"requestedDays\": 26916193,\n    \"role\": \"devops-user\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"requestId\": \"in ea\",\n \"userId\": \"Duis consectetur\",\n \"reason\": \"amet\",\n \"requestedDays\": -6269481,\n \"role\": \"devops-user\",\n \"createdTimestamp\": -69752129,\n \"expirationTimestamp\": 92891318,\n \"state\": \"PENDING\",\n \"stateModifiedByUser\": \"consequat ut\"\n}"
						},
						{
							"name": "Invalid parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"Duis ullamco laboris consequat\",\n    \"reason\": \"sint magna\",\n    \"requestedDays\": 26916193,\n    \"role\": \"devops-user\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Approving remote access request is disabled",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"Duis ullamco laboris consequat\",\n    \"reason\": \"sint magna\",\n    \"requestedDays\": 26916193,\n    \"role\": \"devops-user\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"Duis ullamco laboris consequat\",\n    \"reason\": \"sint magna\",\n    \"requestedDays\": 26916193,\n    \"role\": \"devops-user\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Mission Control is unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"Duis ullamco laboris consequat\",\n    \"reason\": \"sint magna\",\n    \"requestedDays\": 26916193,\n    \"role\": \"devops-user\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/remoteaccess/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"remoteaccess",
										"requests"
									]
								}
							},
							"code": 513,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "cluster Config/user Sessions",
			"item": [
				{
					"name": "Get user sessions configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clusterConfig/userSessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clusterConfig",
								"userSessions"
							]
						}
					},
					"response": [
						{
							"name": "Successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clusterConfig/userSessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusterConfig",
										"userSessions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"automaticLogoutDto\": {\n  \"logoutInactiveUsersEnabled\": true,\n  \"userInactivityTimeout\": 900\n },\n \"concurrentSessionPolicyDto\": {\n  \"adminLimit\": 1935463,\n  \"userLimit\": 19940307\n }\n}"
						}
					]
				},
				{
					"name": "Update user sessions configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"automaticLogoutDto\": {\n        \"logoutInactiveUsersEnabled\": true,\n        \"userInactivityTimeout\": 900\n    },\n    \"concurrentSessionPolicyDto\": {\n        \"adminLimit\": 1935463,\n        \"userLimit\": 19940307\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/clusterConfig/userSessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clusterConfig",
								"userSessions"
							]
						}
					},
					"response": [
						{
							"name": "Successful",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"automaticLogoutDto\": {\n        \"logoutInactiveUsersEnabled\": true,\n        \"userInactivityTimeout\": 900\n    },\n    \"concurrentSessionPolicyDto\": {\n        \"adminLimit\": 1935463,\n        \"userLimit\": 19940307\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/clusterConfig/userSessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusterConfig",
										"userSessions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Wrong parameters",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"automaticLogoutDto\": {\n        \"logoutInactiveUsersEnabled\": true,\n        \"userInactivityTimeout\": 900\n    },\n    \"concurrentSessionPolicyDto\": {\n        \"adminLimit\": 1935463,\n        \"userLimit\": 19940307\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/clusterConfig/userSessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusterConfig",
										"userSessions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Configuration update failed",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"automaticLogoutDto\": {\n        \"logoutInactiveUsersEnabled\": true,\n        \"userInactivityTimeout\": 900\n    },\n    \"concurrentSessionPolicyDto\": {\n        \"adminLimit\": 1935463,\n        \"userLimit\": 19940307\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/clusterConfig/userSessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clusterConfig",
										"userSessions"
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "user Sessions",
			"item": [
				{
					"name": "Get user sessions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userSessions?userId=veniam elit anim Lorem dolor",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userSessions"
							],
							"query": [
								{
									"key": "userId",
									"value": "veniam elit anim Lorem dolor",
									"description": "User ID (optional)"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=veniam elit anim Lorem dolor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "veniam elit anim Lorem dolor"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"creationTime\": 8991495,\n  \"loginType\": \"SSO_MANAGED\",\n  \"nodeId\": 46699748,\n  \"sessionId\": \"Excepteur f\",\n  \"tenantUuid\": \"in minim\",\n  \"userId\": \"ut cillum mollit\",\n  \"lastAccessedTimestamp\": -28971605,\n  \"device\": \"tempor consectetur cupidatat in irure\",\n  \"ip\": \"occaecat laborum proident\"\n },\n {\n  \"creationTime\": -33731011,\n  \"loginType\": \"LOCAL\",\n  \"nodeId\": 8752117,\n  \"sessionId\": \"nulla adipisicing\",\n  \"tenantUuid\": \"et eiusmod aliquip dolore\",\n  \"userId\": \"ipsum minim dolore dolor\",\n  \"lastAccessedTimestamp\": 46255080,\n  \"device\": \"id enim\",\n  \"ip\": \"proident eiusmod dolore\"\n }\n]"
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=veniam elit anim Lorem dolor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "veniam elit anim Lorem dolor"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove user sessions for a given user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/userSessions?userId=veniam elit anim Lorem dolor",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userSessions"
							],
							"query": [
								{
									"key": "userId",
									"value": "veniam elit anim Lorem dolor",
									"description": "User ID (mandatory)"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=veniam elit anim Lorem dolor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "veniam elit anim Lorem dolor"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request. User id must be filled in.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=veniam elit anim Lorem dolor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "veniam elit anim Lorem dolor"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User sessions not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=veniam elit anim Lorem dolor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "veniam elit anim Lorem dolor"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Operation failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=veniam elit anim Lorem dolor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "veniam elit anim Lorem dolor"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Failed to invalidate sessions",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userSessions?userId=veniam elit anim Lorem dolor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userSessions"
									],
									"query": [
										{
											"key": "userId",
											"value": "veniam elit anim Lorem dolor"
										}
									]
								}
							},
							"status": "Not Extended (RFC 2774)",
							"code": 510,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "active Gates",
			"item": [
				{
					"name": "{ag Id}",
					"item": [
						{
							"name": "auto Update",
							"item": [
								{
									"name": "Gets the configuration of auto-update for the specified ActiveGate",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate"
											],
											"variable": [
												{
													"key": "agId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"setting\": \"INHERITED\",\n \"effectiveSetting\": \"ENABLED\"\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
										}
									]
								},
								{
									"name": "Updates the configuration of auto-update for the specified ActiveGate",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"setting\": \"INHERITED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate"
											],
											"variable": [
												{
													"key": "agId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The auto-update configuration have been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"setting\": \"INHERITED\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"autoUpdate",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted auto-update configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"setting\": \"INHERITED\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/autoUpdate/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"autoUpdate",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "update Jobs",
							"item": [
								{
									"name": "{job Id}",
									"item": [
										{
											"name": "Gets the parameters of the specified update job",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "veniam elit anim Lorem dolor",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "veniam elit anim Lorem dolor",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"targetVersion\": \"1.190.0.20200301-130000\",\n \"jobId\": \"-3524498778810258605\",\n \"jobState\": \"SUCCEED\",\n \"updateMethod\": \"AUTOMATIC\",\n \"updateType\": \"ACTIVE_GATE\",\n \"cancelable\": false,\n \"startVersion\": \"1.185.0.20200201-120000\",\n \"timestamp\": 1582031917814,\n \"agType\": \"ENVIRONMENT\",\n \"environments\": [\n  \"Excepteur \",\n  \"dolore est esse\"\n ],\n \"error\": \"labore id irure dolore\",\n \"duration\": 3608000\n}"
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
												}
											]
										},
										{
											"name": "Deletes the specified update job",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														":jobId"
													],
													"variable": [
														{
															"key": "agId",
															"value": "veniam elit anim Lorem dolor",
															"description": "(Required) The ID of the required ActiveGate."
														},
														{
															"key": "jobId",
															"value": "veniam elit anim Lorem dolor",
															"description": "(Required) A unique identifier for a update-job of ActiveGate."
														}
													]
												}
											},
											"response": [
												{
													"name": "Success. The update-job have been deleted. Response doesn't have a body.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Failed. The input is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
												},
												{
													"name": "Not found. See response body for details.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Authorization",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/:jobId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"activeGates",
																":agId",
																"updateJobs",
																":jobId"
															],
															"variable": [
																{
																	"key": "agId"
																},
																{
																	"key": "jobId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														}
													],
													"cookie": [],
													"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Lists update jobs for the specified ActiveGate",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=veniam elit anim Lorem dolor&to=veniam elit anim Lorem dolor&startVersionCompareType=EQUAL&startVersion=veniam elit anim Lorem dolor&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=veniam elit anim Lorem dolor&lastUpdates=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"query": [
												{
													"key": "from",
													"value": "veniam elit anim Lorem dolor",
													"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days."
												},
												{
													"key": "to",
													"value": "veniam elit anim Lorem dolor",
													"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
												},
												{
													"key": "startVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
												},
												{
													"key": "startVersion",
													"value": "veniam elit anim Lorem dolor",
													"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "updateType",
													"value": "ACTIVE_GATE",
													"description": "Filters the resulting set of update-jobs by the update type."
												},
												{
													"key": "targetVersionCompareType",
													"value": "EQUAL",
													"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
												},
												{
													"key": "targetVersion",
													"value": "veniam elit anim Lorem dolor",
													"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
												},
												{
													"key": "lastUpdates",
													"value": "false",
													"description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
												}
											],
											"variable": [
												{
													"key": "agId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										},
										"description": "The job can update the ActiveGate to the specified version or the latest available one."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=veniam elit anim Lorem dolor&to=veniam elit anim Lorem dolor&startVersionCompareType=EQUAL&startVersion=veniam elit anim Lorem dolor&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=veniam elit anim Lorem dolor&lastUpdates=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "veniam elit anim Lorem dolor"
														},
														{
															"key": "to",
															"value": "veniam elit anim Lorem dolor"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "veniam elit anim Lorem dolor"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "veniam elit anim Lorem dolor"
														},
														{
															"key": "lastUpdates",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"agId\": \"0x3efdd092\",\n \"updateJobs\": [\n  {\n   \"updateMethod\": \"MANUAL_INSTALLATION\",\n   \"updateType\": \"ACTIVE_GATE\",\n   \"agType\": \"ENVIRONMENT\",\n   \"startVersion\": \"adipisicing in\",\n   \"cancelable\": false,\n   \"jobId\": \"voluptate ad deserunt incididunt\",\n   \"jobState\": \"ROLLBACK\",\n   \"environments\": [\n    \"exercitation sunt qui ullamco\",\n    \"Excepteur culpa\"\n   ],\n   \"timestamp\": -87508722,\n   \"duration\": -4504039,\n   \"targetVersion\": \"laboris sint velit elit\",\n   \"error\": \"nostrud commodo pariatur\"\n  },\n  {\n   \"updateMethod\": \"AUTOMATIC\",\n   \"updateType\": \"Z_REMOTE\",\n   \"agType\": \"ENVIRONMENT_MULTI\",\n   \"startVersion\": \"cillum nisi dolor nulla\",\n   \"cancelable\": true,\n   \"jobId\": \"ut in commodo\",\n   \"jobState\": \"PENDING\",\n   \"environments\": [\n    \"incididunt\",\n    \"laborum sit\"\n   ],\n   \"timestamp\": -70935278,\n   \"duration\": -98474514,\n   \"targetVersion\": \"voluptate ut exercitation\",\n   \"error\": \"sed\"\n  }\n ]\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs?from=veniam elit anim Lorem dolor&to=veniam elit anim Lorem dolor&startVersionCompareType=EQUAL&startVersion=veniam elit anim Lorem dolor&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=veniam elit anim Lorem dolor&lastUpdates=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"query": [
														{
															"key": "from",
															"value": "veniam elit anim Lorem dolor"
														},
														{
															"key": "to",
															"value": "veniam elit anim Lorem dolor"
														},
														{
															"key": "startVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "startVersion",
															"value": "veniam elit anim Lorem dolor"
														},
														{
															"key": "updateType",
															"value": "ACTIVE_GATE"
														},
														{
															"key": "targetVersionCompareType",
															"value": "EQUAL"
														},
														{
															"key": "targetVersion",
															"value": "veniam elit anim Lorem dolor"
														},
														{
															"key": "lastUpdates",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
										}
									]
								},
								{
									"name": "Creates a new update job for the specified ActiveGate",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs"
											],
											"variable": [
												{
													"key": "agId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The update-job have been created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"targetVersion\": \"1.190.0.20200301-130000\",\n \"jobId\": \"-3524498778810258605\",\n \"jobState\": \"SUCCEED\",\n \"updateMethod\": \"AUTOMATIC\",\n \"updateType\": \"ACTIVE_GATE\",\n \"cancelable\": false,\n \"startVersion\": \"1.185.0.20200201-120000\",\n \"timestamp\": 1582031917814,\n \"agType\": \"ENVIRONMENT\",\n \"environments\": [\n  \"sunt non\",\n  \"pariatur deserunt Excepteur \"\n ],\n \"error\": \"non enim\",\n \"duration\": 3608000\n}"
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId",
												"updateJobs",
												"validator"
											],
											"variable": [
												{
													"key": "agId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The ID of the required ActiveGate."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted update-job is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"targetVersion\": \"1.190.0.20200301-130000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/:agId/updateJobs/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														":agId",
														"updateJobs",
														"validator"
													],
													"variable": [
														{
															"key": "agId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the details of the specified ActiveGate",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/activeGates/:agId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										":agId"
									],
									"variable": [
										{
											"key": "agId",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) The ID of the required ActiveGate."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"0x3efdd091\",\n \"networkAddresses\": [\n  \"magna labore est non\",\n  \"ipsum voluptate tempor\"\n ],\n \"loadBalancerAddresses\": [\n  \"officia veniam\",\n  \"in aliqua ex\"\n ],\n \"osType\": \"WINDOWS\",\n \"autoUpdateStatus\": \"OUTDATED\",\n \"offlineSince\": 1582031917814,\n \"version\": \"1.185.0.20200201-120000\",\n \"type\": \"ENVIRONMENT\",\n \"hostname\": \"exampleHostname\",\n \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n \"environments\": [\n  \"des\",\n  \"ad sed\"\n ],\n \"autoUpdateSettings\": {\n  \"setting\": \"INHERITED\",\n  \"effectiveSetting\": \"ENABLED\"\n },\n \"networkZone\": \"exampleNetworkZone\",\n \"group\": \"default\",\n \"modules\": [\n  {\n   \"misconfigured\": true,\n   \"enabled\": true,\n   \"version\": \"laboris dolor sunt\",\n   \"type\": \"KUBERNETES\",\n   \"attributes\": {}\n  },\n  {\n   \"misconfigured\": false,\n   \"enabled\": true,\n   \"version\": \"dolor anim occaecat\",\n   \"type\": \"KUBERNETES\",\n   \"attributes\": {}\n  }\n ],\n \"containerized\": false\n}"
								},
								{
									"name": "Not found. See response body for details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/:agId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												":agId"
											],
											"variable": [
												{
													"key": "agId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "auto Update",
					"item": [
						{
							"name": "{env Id}",
							"item": [
								{
									"name": "Gets the global auto-update configuration of environment ActiveGates.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												":envId"
											],
											"variable": [
												{
													"key": "envId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId"
													],
													"variable": [
														{
															"key": "envId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"globalSetting\": \"ENABLED\",\n \"metadata\": {\n  \"configurationVersions\": [\n   4,\n   2\n  ],\n  \"currentConfigurationVersions\": [\n   \"1.0.4\",\n   \"1.23\"\n  ],\n  \"clusterVersion\": \"1.192.1\"\n }\n}"
										},
										{
											"name": "Not found. See response body for details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId"
													],
													"variable": [
														{
															"key": "envId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
										}
									]
								},
								{
									"name": "Puts the global auto-update configuration of environment ActiveGates.",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												":envId"
											],
											"variable": [
												{
													"key": "envId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId"
													],
													"variable": [
														{
															"key": "envId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId"
													],
													"variable": [
														{
															"key": "envId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
										}
									]
								},
								{
									"name": "Validates the payload for the `POST /activeGates/autoUpdate/{envId}` request.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												":envId",
												"validator"
											],
											"variable": [
												{
													"key": "envId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The ID of the environment."
												}
											]
										}
									},
									"response": [
										{
											"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId",
														"validator"
													],
													"variable": [
														{
															"key": "envId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The input is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/activeGates/autoUpdate/:envId/validator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"activeGates",
														"autoUpdate",
														":envId",
														"validator"
													],
													"variable": [
														{
															"key": "envId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Gets the global auto-update configuration of cluster ActiveGates.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"globalSetting\": \"ENABLED\",\n \"metadata\": {\n  \"configurationVersions\": [\n   4,\n   2\n  ],\n  \"currentConfigurationVersions\": [\n   \"1.0.4\",\n   \"1.23\"\n  ],\n  \"clusterVersion\": \"1.192.1\"\n }\n}"
								}
							]
						},
						{
							"name": "Puts the global auto-update configuration of cluster ActiveGates.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate"
									]
								}
							},
							"response": [
								{
									"name": "Success. The global auto-update configuration have been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
								}
							]
						},
						{
							"name": "Validates the payload for the `POST /activeGates/autoUpdate` request.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"autoUpdate",
										"validator"
									]
								}
							},
							"response": [
								{
									"name": "Validated. The submitted configuration is valid. Response doesn't have a body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												"validator"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"globalSetting\": \"ENABLED\",\n    \"metadata\": {\n        \"configurationVersions\": [\n            4,\n            2\n        ],\n        \"currentConfigurationVersions\": [\n            \"1.0.4\",\n            \"1.23\"\n        ],\n        \"clusterVersion\": \"1.192.1\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/activeGates/autoUpdate/validator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"activeGates",
												"autoUpdate",
												"validator"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists all available ActiveGates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/activeGates?hostname=veniam elit anim Lorem dolor&osType=WINDOWS&networkAddress=veniam elit anim Lorem dolor&loadBalancerAddress=veniam elit anim Lorem dolor&type=ENVIRONMENT&networkZone=veniam elit anim Lorem dolor&updateStatus=UNKNOWN&versionCompareType=EQUAL&version=veniam elit anim Lorem dolor&autoUpdate=ENABLED&group=veniam elit anim Lorem dolor&online=true&enabledModule=LOGS&enabledModule=KUBERNETES&disabledModule=LOGS&disabledModule=KUBERNETES&containerized=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates"
							],
							"query": [
								{
									"key": "hostname",
									"value": "veniam elit anim Lorem dolor",
									"description": "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "osType",
									"value": "WINDOWS",
									"description": "Filters the resulting set of ActiveGates by the OS type of the host it's running on."
								},
								{
									"key": "networkAddress",
									"value": "veniam elit anim Lorem dolor",
									"description": "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "loadBalancerAddress",
									"value": "veniam elit anim Lorem dolor",
									"description": "Filters the resulting set of ActiveGates by the Load Balancer address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "type",
									"value": "ENVIRONMENT",
									"description": "Filters the resulting set of ActiveGates by the ActiveGate type."
								},
								{
									"key": "networkZone",
									"value": "veniam elit anim Lorem dolor",
									"description": "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "updateStatus",
									"value": "UNKNOWN",
									"description": "Filters the resulting set of ActiveGates by the auto-update status."
								},
								{
									"key": "versionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here."
								},
								{
									"key": "version",
									"value": "veniam elit anim Lorem dolor",
									"description": "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here."
								},
								{
									"key": "autoUpdate",
									"value": "ENABLED",
									"description": "Filters the resulting set of ActiveGates by the actual state of auto-update."
								},
								{
									"key": "group",
									"value": "veniam elit anim Lorem dolor",
									"description": "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used."
								},
								{
									"key": "online",
									"value": "true",
									"description": "Filters the resulting set of ActiveGates by the communication status."
								},
								{
									"key": "enabledModule",
									"value": "LOGS",
									"description": "Filters the resulting set of ActiveGates by the enabled modules."
								},
								{
									"key": "enabledModule",
									"value": "KUBERNETES",
									"description": "Filters the resulting set of ActiveGates by the enabled modules."
								},
								{
									"key": "disabledModule",
									"value": "LOGS",
									"description": "Filters the resulting set of ActiveGates by the disabled modules."
								},
								{
									"key": "disabledModule",
									"value": "KUBERNETES",
									"description": "Filters the resulting set of ActiveGates by the disabled modules."
								},
								{
									"key": "containerized",
									"value": "true",
									"description": "Filters the resulting set of ActiveGates to those which are running in container (`true`) or not (`false`)."
								}
							]
						},
						"description": "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=veniam elit anim Lorem dolor&osType=WINDOWS&networkAddress=veniam elit anim Lorem dolor&loadBalancerAddress=veniam elit anim Lorem dolor&type=ENVIRONMENT&networkZone=veniam elit anim Lorem dolor&updateStatus=UNKNOWN&versionCompareType=EQUAL&version=veniam elit anim Lorem dolor&autoUpdate=ENABLED&group=veniam elit anim Lorem dolor&online=true&enabledModule=KUBERNETES&enabledModule=Z_OS&disabledModule=KUBERNETES&disabledModule=Z_OS&containerized=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "osType",
											"value": "WINDOWS"
										},
										{
											"key": "networkAddress",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "loadBalancerAddress",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "type",
											"value": "ENVIRONMENT"
										},
										{
											"key": "networkZone",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "updateStatus",
											"value": "UNKNOWN"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "autoUpdate",
											"value": "ENABLED"
										},
										{
											"key": "group",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "online",
											"value": "true"
										},
										{
											"key": "enabledModule",
											"value": "KUBERNETES"
										},
										{
											"key": "enabledModule",
											"value": "Z_OS"
										},
										{
											"key": "disabledModule",
											"value": "KUBERNETES"
										},
										{
											"key": "disabledModule",
											"value": "Z_OS"
										},
										{
											"key": "containerized",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"activeGates\": [\n  {\n   \"id\": \"0x3efdd091\",\n   \"networkAddresses\": [\n    \"tempor est dolore\",\n    \"Ut est cupi\"\n   ],\n   \"loadBalancerAddresses\": [\n    \"aliquip esse amet\",\n    \"minim\"\n   ],\n   \"osType\": \"WINDOWS\",\n   \"autoUpdateStatus\": \"OUTDATED\",\n   \"offlineSince\": 1582031917814,\n   \"version\": \"1.185.0.20200201-120000\",\n   \"type\": \"ENVIRONMENT\",\n   \"hostname\": \"exampleHostname\",\n   \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n   \"environments\": [\n    \"nulla ad laboris\",\n    \"cillum occaecat dolor\"\n   ],\n   \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n   },\n   \"networkZone\": \"exampleNetworkZone\",\n   \"group\": \"default\",\n   \"modules\": [\n    {\n     \"misconfigured\": false,\n     \"enabled\": true,\n     \"version\": \"quis ad amet in cillum\",\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {}\n    },\n    {\n     \"misconfigured\": false,\n     \"enabled\": true,\n     \"version\": \"ut consectetur\",\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {}\n    }\n   ],\n   \"containerized\": false\n  },\n  {\n   \"id\": \"0x3efdd091\",\n   \"networkAddresses\": [\n    \"amet id laborum officia\",\n    \"officia aliquip dolore Lorem\"\n   ],\n   \"loadBalancerAddresses\": [\n    \"dolor qui\",\n    \"sed officia laboris\"\n   ],\n   \"osType\": \"WINDOWS\",\n   \"autoUpdateStatus\": \"OUTDATED\",\n   \"offlineSince\": 1582031917814,\n   \"version\": \"1.185.0.20200201-120000\",\n   \"type\": \"ENVIRONMENT\",\n   \"hostname\": \"exampleHostname\",\n   \"mainEnvironment\": \"d1bf4a7e-666b-43af-9f45-718g98372e2f\",\n   \"environments\": [\n    \"ut consectetur\",\n    \"deserunt consequat aliqua nisi ut\"\n   ],\n   \"autoUpdateSettings\": {\n    \"setting\": \"INHERITED\",\n    \"effectiveSetting\": \"ENABLED\"\n   },\n   \"networkZone\": \"exampleNetworkZone\",\n   \"group\": \"default\",\n   \"modules\": [\n    {\n     \"misconfigured\": true,\n     \"enabled\": true,\n     \"version\": \"adipisicing ea et\",\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {}\n    },\n    {\n     \"misconfigured\": false,\n     \"enabled\": true,\n     \"version\": \"magna non veniam ipsum tempor\",\n     \"type\": \"KUBERNETES\",\n     \"attributes\": {}\n    }\n   ],\n   \"containerized\": false\n  }\n ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates?hostname=veniam elit anim Lorem dolor&osType=WINDOWS&networkAddress=veniam elit anim Lorem dolor&loadBalancerAddress=veniam elit anim Lorem dolor&type=ENVIRONMENT&networkZone=veniam elit anim Lorem dolor&updateStatus=UNKNOWN&versionCompareType=EQUAL&version=veniam elit anim Lorem dolor&autoUpdate=ENABLED&group=veniam elit anim Lorem dolor&online=true&enabledModule=KUBERNETES&enabledModule=Z_OS&disabledModule=KUBERNETES&disabledModule=Z_OS&containerized=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates"
									],
									"query": [
										{
											"key": "hostname",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "osType",
											"value": "WINDOWS"
										},
										{
											"key": "networkAddress",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "loadBalancerAddress",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "type",
											"value": "ENVIRONMENT"
										},
										{
											"key": "networkZone",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "updateStatus",
											"value": "UNKNOWN"
										},
										{
											"key": "versionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "version",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "autoUpdate",
											"value": "ENABLED"
										},
										{
											"key": "group",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "online",
											"value": "true"
										},
										{
											"key": "enabledModule",
											"value": "KUBERNETES"
										},
										{
											"key": "enabledModule",
											"value": "Z_OS"
										},
										{
											"key": "disabledModule",
											"value": "KUBERNETES"
										},
										{
											"key": "disabledModule",
											"value": "Z_OS"
										},
										{
											"key": "containerized",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
						}
					]
				},
				{
					"name": "List ActiveGates with update jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/activeGates/updateJobs?from=veniam elit anim Lorem dolor&to=veniam elit anim Lorem dolor&startVersionCompareType=EQUAL&startVersion=veniam elit anim Lorem dolor&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=veniam elit anim Lorem dolor&lastUpdates=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activeGates",
								"updateJobs"
							],
							"query": [
								{
									"key": "from",
									"value": "veniam elit anim Lorem dolor",
									"description": "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days."
								},
								{
									"key": "to",
									"value": "veniam elit anim Lorem dolor",
									"description": "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used."
								},
								{
									"key": "startVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here."
								},
								{
									"key": "startVersion",
									"value": "veniam elit anim Lorem dolor",
									"description": "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "updateType",
									"value": "ACTIVE_GATE",
									"description": "Filters the resulting set of update-jobs by the update type."
								},
								{
									"key": "targetVersionCompareType",
									"value": "EQUAL",
									"description": "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here."
								},
								{
									"key": "targetVersion",
									"value": "veniam elit anim Lorem dolor",
									"description": "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`)."
								},
								{
									"key": "lastUpdates",
									"value": "false",
									"description": "If `true`, filters the resulting set of update jobs to the most recent update of each type."
								}
							]
						},
						"description": "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=veniam elit anim Lorem dolor&to=veniam elit anim Lorem dolor&startVersionCompareType=EQUAL&startVersion=veniam elit anim Lorem dolor&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=veniam elit anim Lorem dolor&lastUpdates=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "to",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "lastUpdates",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"allUpdateJobs\": [\n  {\n   \"updateJobs\": [\n    {\n     \"updateMethod\": \"ON_DEMAND\",\n     \"updateType\": \"Z_REMOTE\",\n     \"agType\": \"ENVIRONMENT_MULTI\",\n     \"startVersion\": \"magna aliquip\",\n     \"cancelable\": false,\n     \"jobId\": \"laboris sit\",\n     \"jobState\": \"FAILED\",\n     \"environments\": [\n      \"et tempor consequat\",\n      \"laborum\"\n     ],\n     \"timestamp\": -72052211,\n     \"duration\": 51295221,\n     \"targetVersion\": \"non eiusmod minim\",\n     \"error\": \"magna deserunt sunt culpa mollit\"\n    },\n    {\n     \"updateMethod\": \"MANUAL_INSTALLATION\",\n     \"updateType\": \"Z_REMOTE\",\n     \"agType\": \"ENVIRONMENT\",\n     \"startVersion\": \"eu\",\n     \"cancelable\": true,\n     \"jobId\": \"v\",\n     \"jobState\": \"SUCCEED\",\n     \"environments\": [\n      \"voluptate ad\",\n      \"magna proident minim exercitation\"\n     ],\n     \"timestamp\": 70630430,\n     \"duration\": -73113241,\n     \"targetVersion\": \"quis\",\n     \"error\": \"Duis sit\"\n    }\n   ],\n   \"agId\": \"elit culpa ut do ea\"\n  },\n  {\n   \"updateJobs\": [\n    {\n     \"updateMethod\": \"MANUAL_INSTALLATION\",\n     \"updateType\": \"ACTIVE_GATE\",\n     \"agType\": \"ENVIRONMENT_MULTI\",\n     \"startVersion\": \"voluptate\",\n     \"cancelable\": false,\n     \"jobId\": \"minim ullamco tempor eiusmod\",\n     \"jobState\": \"SCHEDULED\",\n     \"environments\": [\n      \"cupidatat sint\",\n      \"quis magna\"\n     ],\n     \"timestamp\": -21456767,\n     \"duration\": 76282557,\n     \"targetVersion\": \"veniam magna\",\n     \"error\": \"dolor laborum adipisicing\"\n    },\n    {\n     \"updateMethod\": \"ON_DEMAND\",\n     \"updateType\": \"SYNTHETIC\",\n     \"agType\": \"ENVIRONMENT\",\n     \"startVersion\": \"fugiat officia\",\n     \"cancelable\": true,\n     \"jobId\": \"Excepteur occaecat laborum\",\n     \"jobState\": \"FAILED\",\n     \"environments\": [\n      \"nisi Excepteur ut deserun\",\n      \"eu et irure\"\n     ],\n     \"timestamp\": -87219580,\n     \"duration\": -45991062,\n     \"targetVersion\": \"Ut Lor\",\n     \"error\": \"aliqua sint sunt\"\n    }\n   ],\n   \"agId\": \"velit reprehenderit esse dolor cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Failed. The input is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activeGates/updateJobs?from=veniam elit anim Lorem dolor&to=veniam elit anim Lorem dolor&startVersionCompareType=EQUAL&startVersion=veniam elit anim Lorem dolor&updateType=ACTIVE_GATE&targetVersionCompareType=EQUAL&targetVersion=veniam elit anim Lorem dolor&lastUpdates=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activeGates",
										"updateJobs"
									],
									"query": [
										{
											"key": "from",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "to",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "startVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "startVersion",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "updateType",
											"value": "ACTIVE_GATE"
										},
										{
											"key": "targetVersionCompareType",
											"value": "EQUAL"
										},
										{
											"key": "targetVersion",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "lastUpdates",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "network Zones",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets parameters of the specified network zone | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) The ID of the required network zone."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"alternativeZones\": [\n  \"proident\",\n  \"cillum commodo aliquip elit voluptate\"\n ],\n \"numOfOneAgentsUsing\": -23543770,\n \"numOfConfiguredOneAgents\": -5994207,\n \"numOfOneAgentsFromOtherZones\": -96379541,\n \"numOfConfiguredActiveGates\": -37521675,\n \"id\": \"proident fugiat\",\n \"description\": \"Lorem cillum sed enim\"\n}"
								}
							]
						},
						{
							"name": "Updates an existing network zone or creates a new one | maturity=EARLY_ADOPTER",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alternativeZones\": [\n        \"aliqua occaecat\",\n        \"adipisicing ipsum sit ut\"\n    ],\n    \"description\": \"culpa et commodo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
										}
									]
								},
								"description": "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase."
							},
							"response": [
								{
									"name": "Success. The new network zone has been created. The response body contains the ID of the new network zone.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"aliqua occaecat\",\n        \"adipisicing ipsum sit ut\"\n    ],\n    \"description\": \"culpa et commodo\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"reprehenderit\",\n \"name\": \"labore aliqua voluptate tempor sed\",\n \"description\": \"cupidatat ex tempor\"\n}"
								},
								{
									"name": "Success. The network zone has been updated. Response doesn't have a body.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"aliqua occaecat\",\n        \"adipisicing ipsum sit ut\"\n    ],\n    \"description\": \"culpa et commodo\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. The input is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alternativeZones\": [\n        \"aliqua occaecat\",\n        \"adipisicing ipsum sit ut\"\n    ],\n    \"description\": \"culpa et commodo\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified network zone | maturity=EARLY_ADOPTER",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networkZones/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) The ID of the network zone to be deleted."
										}
									]
								},
								"description": "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives."
							},
							"response": [
								{
									"name": "Deleted. Response doesn't have a body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. See error message in the response body for details.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/networkZones/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"networkZones",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Lists all existing network zones | maturity=EARLY_ADOPTER",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/networkZones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networkZones"
							]
						}
					},
					"response": [
						{
							"name": "Success.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/networkZones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networkZones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"networkZones\": [\n  {\n   \"alternativeZones\": [\n    \"occaecat aliquip\",\n    \"dolore sit dolor amet\"\n   ],\n   \"numOfOneAgentsUsing\": -67851365,\n   \"numOfConfiguredOneAgents\": -83556300,\n   \"numOfOneAgentsFromOtherZones\": -67588075,\n   \"numOfConfiguredActiveGates\": -69966627,\n   \"id\": \"veniam velit ea\",\n   \"description\": \"sint laborum Duis\"\n  },\n  {\n   \"alternativeZones\": [\n    \"in proident\",\n    \"dolor minim mollit do\"\n   ],\n   \"numOfOneAgentsUsing\": 25637937,\n   \"numOfConfiguredOneAgents\": 91826922,\n   \"numOfOneAgentsFromOtherZones\": 33228393,\n   \"numOfConfiguredActiveGates\": -54804849,\n   \"id\": \"do ipsum amet aute nostrud\",\n   \"description\": \"quis voluptate Excepteur\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "tokens",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Lists token metadata by token ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) The ID of the required token."
										}
									]
								},
								"description": "The token itself is **not** exposed."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"dolor\",\n \"name\": \"occaecat\",\n \"userId\": \"Lorem\",\n \"revoked\": true,\n \"created\": -86796882,\n \"expires\": -48209006,\n \"lastUse\": 54109610,\n \"scopes\": [\n  \"ReadSyntheticData\",\n  \"ExternalSyntheticIntegration\"\n ],\n \"personalAccessToken\": false\n}"
								},
								{
									"name": "Failed. The requested token has not been found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
								}
							]
						},
						{
							"name": "Updates the specified token",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"revoked\": false,\n    \"name\": \"nulla\",\n    \"scopes\": [\n        \"ServiceProviderAPI\",\n        \"ClusterTokenManagement\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) The ID of the token to be updated. \n\n You can't update the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success. The token has been updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"revoked\": false,\n    \"name\": \"qui magna\",\n    \"scopes\": [\n        \"apiTokens.read\",\n        \"ClusterTokenManagement\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. You can't update the token you're using for authentication of the request.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"revoked\": false,\n    \"name\": \"qui magna\",\n    \"scopes\": [\n        \"apiTokens.read\",\n        \"ClusterTokenManagement\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
								},
								{
									"name": "Failed. The requested token has not been found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"revoked\": false,\n    \"name\": \"qui magna\",\n    \"scopes\": [\n        \"apiTokens.read\",\n        \"ClusterTokenManagement\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
								}
							]
						},
						{
							"name": "Deletes the specified token",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) The ID of the token to be deleted. Can either be the public identifier or the secret.\n\n You can't delete the token you're using for authentication of the request."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Failed. You can't delete the token you're using for authentication of the request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
								},
								{
									"name": "Failed. The requested token has not been found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tokens/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tokens",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists available tokens in your environment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tokens?limit=1000&user=veniam elit anim Lorem dolor&permissions=ControlManagement&permissions=apiTokens.write&from=-52931891&to=-52931891",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tokens"
							],
							"query": [
								{
									"key": "limit",
									"value": "1000",
									"description": "Limits the maximum number of returned tokens. \n\n If not set the value of `1000` is used. \n\n Maximum value is 1000000."
								},
								{
									"key": "user",
									"value": "veniam elit anim Lorem dolor",
									"description": "Filters the resulting set of tokens by user, who owns the token."
								},
								{
									"key": "permissions",
									"value": "ControlManagement",
									"description": "Filters the resulting set of tokens by scopes assigned to the token. \n\n You can specify several permissions in the following format: `permissions=scope1&permissions=scope2`. The token must have *all* the specified scopes."
								},
								{
									"key": "permissions",
									"value": "apiTokens.write",
									"description": "Filters the resulting set of tokens by scopes assigned to the token. \n\n You can specify several permissions in the following format: `permissions=scope1&permissions=scope2`. The token must have *all* the specified scopes."
								},
								{
									"key": "from",
									"value": "-52931891",
									"description": "Last used after this timestamp (UTC milliseconds)."
								},
								{
									"key": "to",
									"value": "-52931891",
									"description": "Last used before this timestamp (UTC milliseconds)."
								}
							]
						},
						"description": "You can narrow down the output by adding parameters. The token has to match *all* the specified parameters. \n\n You can also specify the limit of returned tokens.\n\n **This list may contain tokens which were created automatically** (e.g. InstallerDownload, Mobile, ...) and are not visible on the `Settings` page. Deleting those might have unintended side-effects as they might still be in use."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tokens?limit=1000&user=veniam elit anim Lorem dolor&permissions=UnattendedInstall&permissions=DiagnosticExport&from=-52931891&to=-52931891",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										},
										{
											"key": "user",
											"value": "veniam elit anim Lorem dolor"
										},
										{
											"key": "permissions",
											"value": "UnattendedInstall"
										},
										{
											"key": "permissions",
											"value": "DiagnosticExport"
										},
										{
											"key": "from",
											"value": "-52931891"
										},
										{
											"key": "to",
											"value": "-52931891"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"values\": [\n  {\n   \"id\": \"amet laboris labore sint\",\n   \"name\": \"incididunt voluptate officia\",\n   \"description\": \"dolor do tempo\"\n  },\n  {\n   \"id\": \"amet deserunt sunt\",\n   \"name\": \"consectetur pariatur\",\n   \"description\": \"labore et\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Creates a new token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Excepteur quis qui eu fugiat\",\n    \"scopes\": [\n        \"settings.write\"\n    ],\n    \"expiresIn\": {\n        \"value\": 10585487,\n        \"unit\": \"MILLIS\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tokens"
							]
						},
						"description": "The newly created token will be owned by the same user who owns the token used for authentication of the call."
					},
					"response": [
						{
							"name": "Success. The token has been created. The response body contains the token itself.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Excepteur quis qui eu fugiat\",\n    \"scopes\": [\n        \"settings.write\"\n    ],\n    \"expiresIn\": {\n        \"value\": 10585487,\n        \"unit\": \"MILLIS\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "veniam elit anim Lorem dolor",
									"description": "Token Id"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"token\": \"abcdefjhij1234567890\"\n}"
						},
						{
							"name": "Failed. The input is invalid. Response body provides details.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Excepteur quis qui eu fugiat\",\n    \"scopes\": [\n        \"settings.write\"\n    ],\n    \"expiresIn\": {\n        \"value\": 10585487,\n        \"unit\": \"MILLIS\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
						}
					]
				},
				{
					"name": "Lists token metadata by token itself",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json; charset=utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"abcdefjhij1234567890\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tokens/lookup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tokens",
								"lookup"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"abcdefjhij1234567890\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tokens/lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										"lookup"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"nulla do\",\n \"name\": \"quis veniam\",\n \"userId\": \"ipsum cupidatat labore incididunt sint\",\n \"revoked\": false,\n \"created\": 34452019,\n \"expires\": -32351236,\n \"lastUse\": 17146624,\n \"scopes\": [\n  \"ServiceProviderAPI\",\n  \"ExternalSyntheticIntegration\"\n ],\n \"personalAccessToken\": false\n}"
						}
					]
				}
			]
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "objects",
					"item": [
						{
							"name": "{object Id}",
							"item": [
								{
									"name": "Gets the specified settings object | maturity=EARLY_ADOPTER",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"author\": \"john.doe@example.com\",\n \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"schemaVersion\": \"1.0.0\",\n \"modified\": -60832964,\n \"scope\": \"HOST-D3A3C5A146830A79\",\n \"schemaId\": \"builtin:anomaly.infrastructure\",\n \"value\": {\n  \"autoMonitoring\": true\n },\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"summary\": \"aute laborum ut\",\n \"created\": -69912912\n}"
										},
										{
											"name": "No object available for the given objectId",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"do magna nisi anim laboris\",\n    \"message\": \"sunt officia\",\n    \"path\": \"Lorem sed\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"sint adipisicing\",\n    \"message\": \"sit ut in veniam\",\n    \"path\": \"enim\"\n   }\n  ],\n  \"message\": \"sed laboris consequat quis\",\n  \"code\": 88441065\n },\n \"code\": -39736179\n}"
										}
									]
								},
								{
									"name": "Updates an existing settings object | maturity=EARLY_ADOPTER",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"variable": [
												{
													"key": "objectId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n \"code\": 74826290\n}"
										},
										{
											"name": "Failed. Schema validation failed.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"do magna nisi anim laboris\",\n    \"message\": \"sunt officia\",\n    \"path\": \"Lorem sed\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"sint adipisicing\",\n    \"message\": \"sit ut in veniam\",\n    \"path\": \"enim\"\n   }\n  ],\n  \"message\": \"sed laboris consequat quis\",\n  \"code\": 88441065\n },\n \"code\": -39736179\n}"
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"do magna nisi anim laboris\",\n    \"message\": \"sunt officia\",\n    \"path\": \"Lorem sed\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"sint adipisicing\",\n    \"message\": \"sit ut in veniam\",\n    \"path\": \"enim\"\n   }\n  ],\n  \"message\": \"sed laboris consequat quis\",\n  \"code\": 88441065\n },\n \"code\": -39736179\n}"
										},
										{
											"name": "Failed. Conflicting resource.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": {\n        \"autoMonitoring\": true\n    },\n    \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n    \"schemaVersion\": \"1.0.0\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"do magna nisi anim laboris\",\n    \"message\": \"sunt officia\",\n    \"path\": \"Lorem sed\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"sint adipisicing\",\n    \"message\": \"sit ut in veniam\",\n    \"path\": \"enim\"\n   }\n  ],\n  \"message\": \"sed laboris consequat quis\",\n  \"code\": 88441065\n },\n \"code\": -39736179\n}"
										}
									]
								},
								{
									"name": "Deletes the specified settings object | maturity=EARLY_ADOPTER",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=veniam elit anim Lorem dolor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects",
												":objectId"
											],
											"query": [
												{
													"key": "updateToken",
													"value": "veniam elit anim Lorem dolor",
													"description": "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks."
												}
											],
											"variable": [
												{
													"key": "objectId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The ID of the required settings object."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. Response doesn't have a body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=veniam elit anim Lorem dolor",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "veniam elit anim Lorem dolor"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed. The requested resource doesn't exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=veniam elit anim Lorem dolor",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "veniam elit anim Lorem dolor"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"do magna nisi anim laboris\",\n    \"message\": \"sunt officia\",\n    \"path\": \"Lorem sed\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"sint adipisicing\",\n    \"message\": \"sit ut in veniam\",\n    \"path\": \"enim\"\n   }\n  ],\n  \"message\": \"sed laboris consequat quis\",\n  \"code\": 88441065\n },\n \"code\": -39736179\n}"
										},
										{
											"name": "Failed. Conflicting resource.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/settings/objects/:objectId?updateToken=veniam elit anim Lorem dolor",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"settings",
														"objects",
														":objectId"
													],
													"query": [
														{
															"key": "updateToken",
															"value": "veniam elit anim Lorem dolor"
														}
													],
													"variable": [
														{
															"key": "objectId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"invalidValue\": {\n  \"autoMonitoring\": true\n },\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"do magna nisi anim laboris\",\n    \"message\": \"sunt officia\",\n    \"path\": \"Lorem sed\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"sint adipisicing\",\n    \"message\": \"sit ut in veniam\",\n    \"path\": \"enim\"\n   }\n  ],\n  \"message\": \"sed laboris consequat quis\",\n  \"code\": 88441065\n },\n \"code\": -39736179\n}"
										}
									]
								}
							]
						},
						{
							"name": "Lists available settings objects | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/objects?schemaIds=veniam elit anim Lorem dolor&scopes=veniam elit anim Lorem dolor&fields=objectId,value&nextPageKey=veniam elit anim Lorem dolor&pageSize=-52931891",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "schemaIds",
											"value": "veniam elit anim Lorem dolor",
											"description": "A list of comma-separated schema IDs to which the requested objects belong. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "scopes",
											"value": "veniam elit anim Lorem dolor",
											"description": "A list of comma-separated scopes, that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scopes. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. "
										},
										{
											"key": "fields",
											"value": "objectId,value",
											"description": "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `objectId,value`)."
										},
										{
											"key": "nextPageKey",
											"value": "veniam elit anim Lorem dolor",
											"description": "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. "
										},
										{
											"key": "pageSize",
											"value": "-52931891",
											"description": "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=veniam elit anim Lorem dolor&scopes=veniam elit anim Lorem dolor&fields=objectId,value&nextPageKey=veniam elit anim Lorem dolor&pageSize=-52931891",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "veniam elit anim Lorem dolor"
												},
												{
													"key": "scopes",
													"value": "veniam elit anim Lorem dolor"
												},
												{
													"key": "fields",
													"value": "objectId,value"
												},
												{
													"key": "nextPageKey",
													"value": "veniam elit anim Lorem dolor"
												},
												{
													"key": "pageSize",
													"value": "-52931891"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"totalCount\": -37970703,\n \"items\": [\n  {\n   \"author\": \"john.doe@example.com\",\n   \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"schemaVersion\": \"1.0.0\",\n   \"modified\": -7969577,\n   \"scope\": \"HOST-D3A3C5A146830A79\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"value\": {\n    \"autoMonitoring\": true\n   },\n   \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"summary\": \"magna\",\n   \"created\": -81632131\n  },\n  {\n   \"author\": \"john.doe@example.com\",\n   \"updateToken\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"schemaVersion\": \"1.0.0\",\n   \"modified\": -24718580,\n   \"scope\": \"HOST-D3A3C5A146830A79\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"value\": {\n    \"autoMonitoring\": true\n   },\n   \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n   \"summary\": \"Lorem enim\",\n   \"created\": 57516943\n  }\n ],\n \"nextPageKey\": \"AQAAABQBAAAABQ==\",\n \"pageSize\": -98710698\n}"
								},
								{
									"name": "Failed. The specified schema or scope is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/objects?schemaIds=veniam elit anim Lorem dolor&scopes=veniam elit anim Lorem dolor&fields=objectId,value&nextPageKey=veniam elit anim Lorem dolor&pageSize=-52931891",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "schemaIds",
													"value": "veniam elit anim Lorem dolor"
												},
												{
													"key": "scopes",
													"value": "veniam elit anim Lorem dolor"
												},
												{
													"key": "fields",
													"value": "objectId,value"
												},
												{
													"key": "nextPageKey",
													"value": "veniam elit anim Lorem dolor"
												},
												{
													"key": "pageSize",
													"value": "-52931891"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
								}
							]
						},
						{
							"name": "Creates a new settings object | maturity=EARLY_ADOPTER",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"objects"
									],
									"query": [
										{
											"key": "validateOnly",
											"value": "false",
											"description": "If `true`, the request runs only validation of the submitted settings objects, without saving them."
										}
									]
								},
								"description": "You can upload several objects at once. In that case each object returns its own response code. Check the response body for details."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -61140648\n },\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -51700429\n }\n]"
								},
								{
									"name": "Multi-status: different objects in the payload resulted in different statuses.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -61140648\n },\n {\n  \"objectId\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n  \"code\": -51700429\n }\n]"
								},
								{
									"name": "Failed. Schema validation failed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"esse dolor in ut\",\n     \"message\": \"adipisicing consectetur\",\n     \"path\": \"in nostrud\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"mollit et\",\n     \"message\": \"Ut veniam ex consequat\",\n     \"path\": \"officia adipisicing voluptate\"\n    }\n   ],\n   \"message\": \"deserunt sunt\",\n   \"code\": 67041899\n  },\n  \"code\": -85713374\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"qui minim veniam ni\",\n     \"message\": \"qui pariatur\",\n     \"path\": \"fugiat sunt ex cupidatat\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"mollit \",\n     \"message\": \"magna adipisicing cil\",\n     \"path\": \"cupidatat laborum non Ut\"\n    }\n   ],\n   \"message\": \"dolore aliquip voluptate proident\",\n   \"code\": -49436410\n  },\n  \"code\": -41861222\n }\n]"
								},
								{
									"name": "Failed. The requested resource doesn't exist.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"esse dolor in ut\",\n     \"message\": \"adipisicing consectetur\",\n     \"path\": \"in nostrud\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"mollit et\",\n     \"message\": \"Ut veniam ex consequat\",\n     \"path\": \"officia adipisicing voluptate\"\n    }\n   ],\n   \"message\": \"deserunt sunt\",\n   \"code\": 67041899\n  },\n  \"code\": -85713374\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"qui minim veniam ni\",\n     \"message\": \"qui pariatur\",\n     \"path\": \"fugiat sunt ex cupidatat\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"mollit \",\n     \"message\": \"magna adipisicing cil\",\n     \"path\": \"cupidatat laborum non Ut\"\n    }\n   ],\n   \"message\": \"dolore aliquip voluptate proident\",\n   \"code\": -49436410\n  },\n  \"code\": -41861222\n }\n]"
								},
								{
									"name": "Failed. Conflicting resource.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    },\n    {\n        \"schemaId\": \"builtin:anomaly.infrastructure\",\n        \"scope\": \"HOST-D3A3C5A146830A79\",\n        \"value\": {\n            \"autoMonitoring\": true\n        },\n        \"insertAfter\": \"Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=\",\n        \"schemaVersion\": \"1.0.0\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/settings/objects?validateOnly=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"objects"
											],
											"query": [
												{
													"key": "validateOnly",
													"value": "false"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"esse dolor in ut\",\n     \"message\": \"adipisicing consectetur\",\n     \"path\": \"in nostrud\"\n    },\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"mollit et\",\n     \"message\": \"Ut veniam ex consequat\",\n     \"path\": \"officia adipisicing voluptate\"\n    }\n   ],\n   \"message\": \"deserunt sunt\",\n   \"code\": 67041899\n  },\n  \"code\": -85713374\n },\n {\n  \"invalidValue\": {\n   \"autoMonitoring\": true\n  },\n  \"error\": {\n   \"constraintViolations\": [\n    {\n     \"parameterLocation\": \"QUERY\",\n     \"location\": \"qui minim veniam ni\",\n     \"message\": \"qui pariatur\",\n     \"path\": \"fugiat sunt ex cupidatat\"\n    },\n    {\n     \"parameterLocation\": \"PATH\",\n     \"location\": \"mollit \",\n     \"message\": \"magna adipisicing cil\",\n     \"path\": \"cupidatat laborum non Ut\"\n    }\n   ],\n   \"message\": \"dolore aliquip voluptate proident\",\n   \"code\": -49436410\n  },\n  \"code\": -41861222\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "schemas",
					"item": [
						{
							"name": "Lists available settings schemas | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"totalCount\": 1,\n \"items\": [\n  {\n   \"latestSchemaVersion\": \"1.4.2\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"displayName\": \"Anomaly Detection for Infrastructure\"\n  },\n  {\n   \"latestSchemaVersion\": \"1.4.2\",\n   \"schemaId\": \"builtin:anomaly.infrastructure\",\n   \"displayName\": \"Anomaly Detection for Infrastructure\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Gets parameters of the specified settings schema | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=veniam elit anim Lorem dolor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"schemas",
										":schemaId"
									],
									"query": [
										{
											"key": "schemaVersion",
											"value": "veniam elit anim Lorem dolor",
											"description": "The version of the required schema. \n\n If not set, the most recent version is returned."
										}
									],
									"variable": [
										{
											"key": "schemaId",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) The ID of the required schema."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=veniam elit anim Lorem dolor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"query": [
												{
													"key": "schemaVersion",
													"value": "veniam elit anim Lorem dolor"
												}
											],
											"variable": [
												{
													"key": "schemaId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"dynatrace\": \"1.0\",\n \"schemaId\": \"builtin:anomaly.infrastructure\",\n \"displayName\": \"Anomaly detection for infrastructure\",\n \"description\": \"Dynatrace automatically detects infrastructure-related performance anomalies such as high CPU saturation, memory outages, and low disk-space conditions\",\n \"documentation\": \"Ut exercitation fugiat ipsum consectetur\",\n \"version\": \"1.4.2\",\n \"multiObject\": true,\n \"ordered\": true,\n \"maxObjects\": 10,\n \"allowedScopes\": [\n  \"host\",\n  \"application\"\n ],\n \"enums\": {},\n \"types\": {},\n \"properties\": {},\n \"constraints\": [\n  {\n   \"customValidatorId\": \"my-min-max\",\n   \"minimumPropertyCount\": 1,\n   \"maximumPropertyCount\": 2,\n   \"customMessage\": \"pariatur nisi qui ut\",\n   \"properties\": [\n    \"ad nisi ea\",\n    \"no\"\n   ],\n   \"type\": \"GREATER_THAN\"\n  },\n  {\n   \"customValidatorId\": \"my-min-max\",\n   \"minimumPropertyCount\": 1,\n   \"maximumPropertyCount\": 2,\n   \"customMessage\": \"adipisicing dolor\",\n   \"properties\": [\n    \"consectetur sed reprehenderit\",\n    \"\"\n   ],\n   \"type\": \"GREATER_THAN_OR_EQUAL\"\n  }\n ],\n \"metadata\": {}\n}"
								},
								{
									"name": "Failed. The specified schema doesn't exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/schemas/:schemaId?schemaVersion=veniam elit anim Lorem dolor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"schemas",
												":schemaId"
											],
											"query": [
												{
													"key": "schemaVersion",
													"value": "veniam elit anim Lorem dolor"
												}
											],
											"variable": [
												{
													"key": "schemaId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "synthetic",
			"item": [
				{
					"name": "locations",
					"item": [
						{
							"name": "{location Id}",
							"item": [
								{
									"name": "Gets properties of the specified cluster location",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The Dynatrace entity ID of the required cluster location."
												}
											]
										}
									},
									"response": [
										{
											"name": "Success. The response contains parameters of the synthetic cluster location.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "{\n \"entityId\": \"eiusmod culpa incididunt\",\n \"latitude\": -4302598.577859223,\n \"longitude\": -13431498.482664093,\n \"name\": \"dolor laboris ea ut mollit\",\n \"type\": \"PRIVATE\",\n \"countryCode\": \"fugi\",\n \"regionCode\": \"do nisi\",\n \"city\": \"commodo laborum\",\n \"status\": \"DISABLED\"\n}"
										}
									]
								},
								{
									"name": "Updates the specified private synthetic cluster location",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json; charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entityId\": \"sed cupidatat dolor officia\",\n    \"latitude\": 44207102.80114651,\n    \"longitude\": -54140037.6917152,\n    \"name\": \"Ut officia est\",\n    \"type\": \"PRIVATE\",\n    \"countryCode\": \"dolor qui\",\n    \"regionCode\": \"ipsum eu\",\n    \"city\": \"et adipisicing quis\",\n    \"status\": \"ENABLED\",\n    \"nodes\": [\n        \"nulla ullamco laborum officia\",\n        \"id officia do\"\n    ],\n    \"availabilityLocationOutage\": false,\n    \"availabilityNodeOutage\": false,\n    \"locationNodeOutageDelayInMinutes\": 2,\n    \"availabilityNotificationsEnabled\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The Dynatrace entity ID of the private synthetic cluster location to be updated."
												}
											]
										}
									},
									"response": [
										{
											"name": "default response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"entityId\": \"sed cupidatat dolor officia\",\n    \"latitude\": 44207102.80114651,\n    \"longitude\": -54140037.6917152,\n    \"name\": \"Ut officia est\",\n    \"type\": \"PRIVATE\",\n    \"countryCode\": \"dolor qui\",\n    \"regionCode\": \"ipsum eu\",\n    \"city\": \"et adipisicing quis\",\n    \"status\": \"ENABLED\",\n    \"nodes\": [\n        \"nulla ullamco laborum officia\",\n        \"id officia do\"\n    ],\n    \"availabilityLocationOutage\": false,\n    \"availabilityNodeOutage\": false,\n    \"locationNodeOutageDelayInMinutes\": 2,\n    \"availabilityNotificationsEnabled\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								},
								{
									"name": "Deletes the specified private synthetic cluster location",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations/:locationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations",
												":locationId"
											],
											"variable": [
												{
													"key": "locationId",
													"value": "veniam elit anim Lorem dolor",
													"description": "(Required) The Dynatrace entity ID of the private synthetic cluster location to be deleted."
												}
											]
										}
									},
									"response": [
										{
											"name": "default response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/synthetic/locations/:locationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"synthetic",
														"locations",
														":locationId"
													],
													"variable": [
														{
															"key": "locationId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								}
							]
						},
						{
							"name": "Lists all cluster private synthetic locations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"locations\": [\n  {\n   \"name\": \"Gdansk\",\n   \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n   \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n   \"type\": \"PUBLIC\",\n   \"cloudPlatform\": \"AMAZON_EC2\",\n   \"ips\": [\n    \"134.189.153.97\",\n    \"134.189.153.98\"\n   ],\n   \"stage\": \"GA\",\n   \"status\": \"ENABLED\",\n   \"capabilities\": [\n    \"BROWSER\",\n    \"HTTP\"\n   ]\n  },\n  {\n   \"name\": \"My private location\",\n   \"entityId\": \"SYNTHETIC_LOCATION-53F47ECB33907667\",\n   \"geoLocationId\": \"GEOLOCATION-95196F3C9A4F4215\",\n   \"type\": \"PRIVATE\",\n   \"status\": \"ENABLED\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Creates a new private synthetic cluster location",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entityId\": \"pariatur\",\n    \"latitude\": 32828094.075668573,\n    \"longitude\": 4858520.2517629415,\n    \"name\": \"magna fugiat enim\",\n    \"type\": \"PUBLIC\",\n    \"countryCode\": \"qui fugiat nisi consequa\",\n    \"regionCode\": \"quis dolor\",\n    \"city\": \"laboris est\",\n    \"status\": \"ENABLED\",\n    \"nodes\": [\n        \"esse est\",\n        \"laboris aliquip eiusmod occaeca\"\n    ],\n    \"availabilityLocationOutage\": false,\n    \"availabilityNodeOutage\": true,\n    \"locationNodeOutageDelayInMinutes\": 4,\n    \"availabilityNotificationsEnabled\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/synthetic/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"locations"
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entityId\": \"sed cupidatat dolor officia\",\n    \"latitude\": 44207102.80114651,\n    \"longitude\": -54140037.6917152,\n    \"name\": \"Ut officia est\",\n    \"type\": \"PRIVATE\",\n    \"countryCode\": \"dolor qui\",\n    \"regionCode\": \"ipsum eu\",\n    \"city\": \"et adipisicing quis\",\n    \"status\": \"ENABLED\",\n    \"nodes\": [\n        \"nulla ullamco laborum officia\",\n        \"id officia do\"\n    ],\n    \"availabilityLocationOutage\": false,\n    \"availabilityNodeOutage\": false,\n    \"locationNodeOutageDelayInMinutes\": 2,\n    \"availabilityNotificationsEnabled\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/synthetic/locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"locations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"entityId\": \"enim aute\",\n \"geoLocationId\": \"quis\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "nodes",
					"item": [
						{
							"name": "Lists all synthetic cluster nodes | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes"
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"nodes\": [\n  {\n   \"activeGateVersion\": \"consequat ex\",\n   \"autoUpdateEnabled\": true,\n   \"browserMonitorsEnabled\": true,\n   \"entityId\": \"enim deserunt\",\n   \"healthCheckStatus\": \"ex non\",\n   \"hostname\": \"aliquip exercitation pariatur fugiat\",\n   \"ips\": [\n    \"tempor\",\n    \"do eu\"\n   ],\n   \"oneAgentRoutingEnabled \": false,\n   \"operatingSystem\": \"dolor exercitation velit non Lorem\",\n   \"playerVersion\": \"et non\",\n   \"status\": \"cillum quis minim\",\n   \"version\": \"incididunt commodo non\"\n  },\n  {\n   \"activeGateVersion\": \"\",\n   \"autoUpdateEnabled\": true,\n   \"browserMonitorsEnabled\": true,\n   \"entityId\": \"Excepteur fugiat anim\",\n   \"healthCheckStatus\": \"officia irure in\",\n   \"hostname\": \"ad pariatur nisi\",\n   \"ips\": [\n    \"Ut ullamco sit\",\n    \"eiusmod anim mollit\"\n   ],\n   \"oneAgentRoutingEnabled \": true,\n   \"operatingSystem\": \"eu in Ut officia deserunt\",\n   \"playerVersion\": \"nostrud sunt\",\n   \"status\": \"magna veniam amet enim laboris\",\n   \"version\": \"elit labore in\"\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Lists properties of the specified synthetic cluster node | maturity=EARLY_ADOPTER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"synthetic",
										"nodes",
										":nodeId"
									],
									"variable": [
										{
											"key": "nodeId",
											"value": "veniam elit anim Lorem dolor",
											"description": "(Required) The ID of the required synthetic cluster node."
										}
									]
								}
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/synthetic/nodes/:nodeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"synthetic",
												"nodes",
												":nodeId"
											],
											"variable": [
												{
													"key": "nodeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n \"activeGateVersion\": \"cupidatat amet reprehenderit id\",\n \"autoUpdateEnabled\": false,\n \"browserMonitorsEnabled\": true,\n \"browserType\": \"incididunt pariatur et \",\n \"browserVersion\": \"consectetur\",\n \"entityId\": \"id eu ullamco \",\n \"healthCheckStatus\": \"tempor consequat\",\n \"hostname\": \"venia\",\n \"ips\": [\n  \"cupidatat la\",\n  \"ipsum commodo labore proident minim\"\n ],\n \"oneAgentRoutingEnabled \": false,\n \"operatingSystem\": \"consequat amet aute Excepteur\",\n \"playerVersion\": \"est commodo Duis aute eu\",\n \"status\": \"veniam Lorem sed\",\n \"version\": \"reprehenderit labore cupidatat\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Lists all available versions of ActiveGate installer",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/deployment/installer/gateway/versions/:osType",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"deployment",
						"installer",
						"gateway",
						"versions",
						":osType"
					],
					"variable": [
						{
							"key": "osType",
							"value": "unix",
							"description": "(Required) The operating system of the installer."
						}
					]
				}
			},
			"response": [
				{
					"name": "Success. The payload contains the available versions.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deployment/installer/gateway/versions/:osType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deployment",
								"installer",
								"gateway",
								"versions",
								":osType"
							],
							"variable": [
								{
									"key": "osType"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"availableVersions\": [\n  \"ullamco do\",\n  \"in ut tempor adipis\"\n ]\n}"
				},
				{
					"name": "Not found. See the response body for details.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authorization",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deployment/installer/gateway/versions/:osType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deployment",
								"installer",
								"gateway",
								"versions",
								":osType"
							],
							"variable": [
								{
									"key": "osType"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"error\": {\n  \"constraintViolations\": [\n   {\n    \"parameterLocation\": \"QUERY\",\n    \"location\": \"veniam ex commodo tempor eu\",\n    \"message\": \"aliqua ullamco voluptate nulla\",\n    \"path\": \"proident culpa\"\n   },\n   {\n    \"parameterLocation\": \"PATH\",\n    \"location\": \"in aute velit qui\",\n    \"message\": \"veniam ad\",\n    \"path\": \"in dolor culpa\"\n   }\n  ],\n  \"message\": \"nostrud dolore\",\n  \"code\": -28796479\n }\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "Api-Token {{DT_TOKEN}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://{{DT_HOST}}/api/cluster/v2",
			"type": "string"
		}
	]
}